__DEV__ = 
true;
(
function(global){


if(global.require){
return;}


var __DEV__=global.__DEV__;

var toString=Object.prototype.toString;













var modulesMap={},






dependencyMap={},



predefinedRefCounts={},

_counter=0,

REQUIRE_WHEN_READY=1,
USED_AS_TRANSPORT=2,

hop=Object.prototype.hasOwnProperty;

function _debugUnresolvedDependencies(names){
var unresolved=Array.prototype.slice.call(names);
var visited={};
var ii,name,module,dependency;

while(unresolved.length) {
name = unresolved.shift();
if(visited[name]){
continue;}

visited[name] = true;

module = modulesMap[name];
if(!module || !module.waiting){
continue;}


for(ii = 0;ii < module.dependencies.length;ii++) {
dependency = module.dependencies[ii];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolved.push(dependency);}}}




for(name in visited) if(hop.call(visited,name)){
unresolved.push(name);}


var messages=[];
for(ii = 0;ii < unresolved.length;ii++) {
name = unresolved[ii];
var message=name;
module = modulesMap[name];
if(!module){
message += ' is not defined';}else 
if(!module.waiting){
message += ' is ready';}else 
{
var unresolvedDependencies=[];
for(var jj=0;jj < module.dependencies.length;jj++) {
dependency = module.dependencies[jj];
if(!modulesMap[dependency] || modulesMap[dependency].waiting){
unresolvedDependencies.push(dependency);}}


message += ' is waiting for ' + unresolvedDependencies.join(', ');}

messages.push(message);}

return messages.join('\n');}





function ModuleError(msg){
this.name = 'ModuleError';
this.message = msg;
this.stack = Error(msg).stack;
this.framesToPop = 2;}

ModuleError.prototype = Object.create(Error.prototype);
ModuleError.prototype.constructor = ModuleError;

var _performance=
global.performance || 
global.msPerformance || 
global.webkitPerformance || {};

if(!_performance.now){
_performance = global.Date;}


var _now=_performance?
_performance.now.bind(_performance):function(){return 0;};

var _factoryStackCount=0;
var _factoryTime=0;
var _totalFactories=0;
























































function require(id){
var module=modulesMap[id],dep,i,msg;
if(module && module.exports){


if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


if(global.ErrorUtils && !global.ErrorUtils.inGuard()){
return ErrorUtils.applyWithGuard(require,this,arguments);}


if(!module){
msg = 'Requiring unknown module "' + id + '"';
if(__DEV__){
msg += '. If you are sure the module is there, try restarting the packager.';}

throw new ModuleError(msg);}


if(module.hasError){
throw new ModuleError(
'Requiring module "' + id + '" which threw an exception');}



if(module.waiting){
throw new ModuleError(
'Requiring module "' + id + '" with unresolved dependencies: ' + 
_debugUnresolvedDependencies([id]));}



var exports=module.exports = {};
var factory=module.factory;
if(toString.call(factory) === '[object Function]'){
var args=[],
dependencies=module.dependencies,
length=dependencies.length,
ret;
if(module.special & USED_AS_TRANSPORT){
length = Math.min(length,factory.length);}

try{
for(i = 0;args.length < length;i++) {
dep = dependencies[i];
if(!module.inlineRequires[dep]){
args.push(dep === 'module'?module:
dep === 'exports'?exports:
require.call(null,dep));}}



++_totalFactories;
if(_factoryStackCount++ === 0){
_factoryTime -= _now();}

try{
ret = factory.apply(module.context || global,args);}
catch(e) {
if(modulesMap.ex && modulesMap.erx){


var ex=require.call(null,'ex');
var erx=require.call(null,'erx');
var messageWithParams=erx(e.message);
if(messageWithParams[0].indexOf(' from module "%s"') < 0){
messageWithParams[0] += ' from module "%s"';
messageWithParams[messageWithParams.length] = id;}

e.message = ex.apply(null,messageWithParams);}

throw e;}finally 
{
if(--_factoryStackCount === 0){
_factoryTime += _now();}}}


catch(e) {
module.hasError = true;
module.exports = null;
throw e;}

if(ret){
if(__DEV__){
if(typeof ret != 'object' && typeof ret != 'function'){
throw new ModuleError(
'Factory for module "' + id + '" returned ' + 
'an invalid value "' + ret + '". ' + 
'Returned value should be either a function or an object.');}}



module.exports = ret;}}else 

{
module.exports = factory;}




if(module.refcount-- === 1){
delete modulesMap[id];}

return module.exports;}


require.__getFactoryTime = function(){
return (_factoryStackCount?_now():0) + _factoryTime;};


require.__getTotalFactories = function(){
return _totalFactories;};

























































function define(id,dependencies,factory,
_special,_context,_refCount,_inlineRequires){
if(dependencies === undefined){
dependencies = [];
factory = id;
id = _uid();}else 
if(factory === undefined){
factory = dependencies;
if(toString.call(id) === '[object Array]'){
dependencies = id;
id = _uid();}else 
{
dependencies = [];}}





var canceler={cancel:_undefine.bind(this,id)};

var record=modulesMap[id];






if(record){
if(_refCount){
record.refcount += _refCount;}


return canceler;}else 
if(!dependencies && !factory && _refCount){


predefinedRefCounts[id] = (predefinedRefCounts[id] || 0) + _refCount;
return canceler;}else 
{

record = {id:id};
record.refcount = (predefinedRefCounts[id] || 0) + (_refCount || 0);
delete predefinedRefCounts[id];}


if(__DEV__){
if(
!factory || 
typeof factory != 'object' && typeof factory != 'function' && 
typeof factory != 'string'){
throw new ModuleError(
'Invalid factory "' + factory + '" for module "' + id + '". ' + 
'Factory should be either a function or an object.');}



if(toString.call(dependencies) !== '[object Array]'){
throw new ModuleError(
'Invalid dependencies for module "' + id + '". ' + 
'Dependencies must be passed as an array.');}}




record.factory = factory;
record.dependencies = dependencies;
record.context = _context;
record.special = _special;
record.inlineRequires = _inlineRequires || {};
record.waitingMap = {};
record.waiting = 0;
record.hasError = false;
modulesMap[id] = record;
_initDependencies(id);

return canceler;}


function _undefine(id){
if(!modulesMap[id]){
return;}


var module=modulesMap[id];
delete modulesMap[id];

for(var dep in module.waitingMap) {
if(module.waitingMap[dep]){
delete dependencyMap[dep][id];}}



for(var ii=0;ii < module.dependencies.length;ii++) {
dep = module.dependencies[ii];
if(modulesMap[dep]){
if(modulesMap[dep].refcount-- === 1){
_undefine(dep);}}else 

if(predefinedRefCounts[dep]){
predefinedRefCounts[dep]--;}}}













































function requireLazy(dependencies,factory,context){
return define(
dependencies,
factory,
undefined,
REQUIRE_WHEN_READY,
context,
1);}



function _uid(){
return '__mod__' + _counter++;}


function _addDependency(module,dep){

if(!module.waitingMap[dep] && module.id !== dep){
module.waiting++;
module.waitingMap[dep] = 1;
dependencyMap[dep] || (dependencyMap[dep] = {});
dependencyMap[dep][module.id] = 1;}}



function _initDependencies(id){
var modulesToRequire=[];
var module=modulesMap[id];
var dep,i,subdep;


for(i = 0;i < module.dependencies.length;i++) {
dep = module.dependencies[i];
if(!modulesMap[dep]){
_addDependency(module,dep);}else 
if(modulesMap[dep].waiting){
for(subdep in modulesMap[dep].waitingMap) {
if(modulesMap[dep].waitingMap[subdep]){
_addDependency(module,subdep);}}}}




if(module.waiting === 0 && module.special & REQUIRE_WHEN_READY){
modulesToRequire.push(id);}



if(dependencyMap[id]){
var deps=dependencyMap[id];
var submodule;
dependencyMap[id] = undefined;
for(dep in deps) {
submodule = modulesMap[dep];


for(subdep in module.waitingMap) {
if(module.waitingMap[subdep]){
_addDependency(submodule,subdep);}}



if(submodule.waitingMap[id]){
submodule.waitingMap[id] = undefined;
submodule.waiting--;}

if(submodule.waiting === 0 && 
submodule.special & REQUIRE_WHEN_READY){
modulesToRequire.push(dep);}}}





for(i = 0;i < modulesToRequire.length;i++) {
require.call(null,modulesToRequire[i]);}}



function _register(id,exports){
var module=modulesMap[id] = {id:id};
module.exports = exports;
module.refcount = 0;}




_register('module',0);
_register('exports',0);

_register('global',global);
_register('require',require);
_register('requireDynamic',require);
_register('requireLazy',requireLazy);

global.require = require;
global.requireDynamic = require;
global.requireLazy = requireLazy;

require.__debug = {
modules:modulesMap,
deps:dependencyMap,
printDependencyInfo:function(){
if(!global.console){
return;}

var names=Object.keys(require.__debug.deps);
global.console.log(_debugUnresolvedDependencies(names));}};









global.__d = function(id,deps,factory,_special,_inlineRequires){
var defaultDeps=['global','require','requireDynamic','requireLazy',
'module','exports'];
define(id,defaultDeps.concat(deps),factory,_special || USED_AS_TRANSPORT,
null,null,_inlineRequires);};})(


this);
Object.

















assign = function(target,sources){
if(__DEV__){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}

if(typeof target !== 'object' && typeof target !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}




for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


if(__DEV__){
if(typeof nextSource !== 'object' && 
typeof nextSource !== 'function'){
throw new TypeError(
'In this environment the target of assign MUST be an object.' + 
'This error is a performance optimization and not spec compliant.');}}








for(var key in nextSource) {
if(__DEV__){
var hasOwnProperty=Object.prototype.hasOwnProperty;
if(!hasOwnProperty.call(nextSource,key)){
throw new TypeError(
'One of the sources to assign has an enumerable key on the ' + 
'prototype chain. This is an edge case that we do not support. ' + 
'This error is a performance optimization and not spec compliant.');}}



target[key] = nextSource[key];}}



return target;};
(















function(global){
'use strict';

var OBJECT_COLUMN_NAME='(index)';
var LOG_LEVELS={
trace:0,
log:1,
info:2,
warn:3,
error:4};


function setupConsole(global){

if(!global.nativeLoggingHook){
return;}


function getNativeLogFunction(level){
return function(){
var str=Array.prototype.map.call(arguments,function(arg){
var ret;
var type=typeof arg;
if(arg === null){
ret = 'null';}else 
if(arg === undefined){
ret = 'undefined';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}).
join(', ');
global.nativeLoggingHook(str,level);};}



var repeat=function(element,n){
return Array.apply(null,Array(n)).map(function(){return element;});};


function consoleTablePolyfill(rows){

if(!Array.isArray(rows)){
var data=rows;
rows = [];
for(var key in data) {
if(data.hasOwnProperty(key)){
var row=data[key];
row[OBJECT_COLUMN_NAME] = key;
rows.push(row);}}}



if(rows.length === 0){
global.nativeLoggingHook('',LOG_LEVELS.log);
return;}


var columns=Object.keys(rows[0]).sort();
var stringRows=[];
var columnWidths=[];



columns.forEach(function(k,i){
columnWidths[i] = k.length;
for(var j=0;j < rows.length;j++) {
var cellStr=rows[j][k].toString();
stringRows[j] = stringRows[j] || [];
stringRows[j][i] = cellStr;
columnWidths[i] = Math.max(columnWidths[i],cellStr.length);}});





var joinRow=function(row,space){
var cells=row.map(function(cell,i){
var extraSpaces=repeat(' ',columnWidths[i] - cell.length).join('');
return cell + extraSpaces;});

space = space || ' ';
return cells.join(space + '|' + space);};


var separators=columnWidths.map(function(columnWidth){
return repeat('-',columnWidth).join('');});

var separatorRow=joinRow(separators,'-');
var header=joinRow(columns);
var table=[header,separatorRow];

for(var i=0;i < rows.length;i++) {
table.push(joinRow(stringRows[i]));}






global.nativeLoggingHook('\n' + table.join('\n'),LOG_LEVELS.log);}


global.console = {
error:getNativeLogFunction(LOG_LEVELS.error),
info:getNativeLogFunction(LOG_LEVELS.info),
log:getNativeLogFunction(LOG_LEVELS.log),
warn:getNativeLogFunction(LOG_LEVELS.warn),
trace:getNativeLogFunction(LOG_LEVELS.trace),
table:consoleTablePolyfill};}




if(typeof module !== 'undefined'){
module.exports = setupConsole;}else 
{
setupConsole(global);}})(


this);
(















function(global){
var ErrorUtils={
_inGuard:0,
_globalHandler:null,
setGlobalHandler:function(fun){
ErrorUtils._globalHandler = fun;},

reportError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error);},

reportFatalError:function(error){
ErrorUtils._globalHandler && ErrorUtils._globalHandler(error,true);},

applyWithGuard:function(fun,context,args){
try{
ErrorUtils._inGuard++;
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportError(e);}finally 
{
ErrorUtils._inGuard--;}},


applyWithGuardIfNeeded:function(fun,context,args){
if(ErrorUtils.inGuard()){
return fun.apply(context,args);}else 
{
ErrorUtils.applyWithGuard(fun,context,args);}},


inGuard:function(){
return ErrorUtils._inGuard;},

guard:function(fun,name,context){
if(typeof fun !== 'function'){
console.warn('A function must be passed to ErrorUtils.guard, got ',fun);
return null;}

name = name || fun.name || '<generated guard>';
function guarded(){
return (
ErrorUtils.applyWithGuard(
fun,
context || this,
arguments,
null,
name));}




return guarded;}};


global.ErrorUtils = ErrorUtils;





function setupErrorGuard(){
var onError=function(e){
global.console.error(
'Error: ' + 
'\n stack: ' + e.stack + 
'\n line: ' + e.line + 
'\n message: ' + e.message,
e);};


global.ErrorUtils.setGlobalHandler(onError);}


setupErrorGuard();})(
this);
if(











!String.prototype.startsWith){
String.prototype.startsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
var start=Math.min(Math.max(pos,0),string.length);
return string.indexOf(String(search),pos) === start;};}



if(!String.prototype.endsWith){
String.prototype.endsWith = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var stringLength=string.length;
var searchString=String(search);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:stringLength;
var end=Math.min(Math.max(pos,0),stringLength);
var start=end - searchString.length;
if(start < 0){
return false;}

return string.lastIndexOf(searchString,start) === start;};}



if(!String.prototype.contains){
String.prototype.contains = function(search){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
var pos=arguments.length > 1?
Number(arguments[1]) || 0:0;
return string.indexOf(String(search),pos) !== -1;};}



if(!String.prototype.repeat){
String.prototype.repeat = function(count){
'use strict';
if(this == null){
throw TypeError();}

var string=String(this);
count = Number(count) || 0;
if(count < 0 || count === Infinity){
throw RangeError();}

if(count === 1){
return string;}

var result='';
while(count) {
if(count & 1){
result += string;}

if(count >>= 1){
string += string;}}


return result;};}
(









function(undefined){

function findIndex(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.findIndex called on null or undefined');}


if(typeof predicate !== 'function'){
throw new TypeError('predicate must be a function');}

var list=Object(this);
var length=list.length >>> 0;
for(var i=0;i < length;i++) {
if(predicate.call(context,list[i],i,list)){
return i;}}


return -1;}


if(!Array.prototype.findIndex){
Object.defineProperty(Array.prototype,'findIndex',{
enumerable:false,
writable:true,
configurable:true,
value:findIndex});}




if(!Array.prototype.find){
Object.defineProperty(Array.prototype,'find',{
enumerable:false,
writable:true,
configurable:true,
value:function(predicate,context){
if(this == null){
throw new TypeError(
'Array.prototype.find called on null or undefined');}


var index=findIndex.call(this,predicate,context);
return index === -1?undefined:this[index];}});}})();
(
function(GLOBAL){







function getInvalidGlobalUseError(name){
return new Error(
'You are trying to render the global ' + name + ' variable as a ' + 
'React element. You probably forgot to require ' + name + '.');}


GLOBAL.Text = {
get defaultProps(){
throw getInvalidGlobalUseError('Text');}};


GLOBAL.Image = {
get defaultProps(){
throw getInvalidGlobalUseError('Image');}};



if(GLOBAL.document){
GLOBAL.document.createElement = null;}




GLOBAL.MutationObserver = undefined;})(
this);
__d('SoftbinatorChat/index.ios',["react-native/Libraries/react-native/react-native","underscore/underscore","SoftbinatorChat/RegisterForm","SoftbinatorChat/ChatScreen","firebase/lib/firebase-web"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');
var _=require('underscore/underscore');

var RegisterForm=require('SoftbinatorChat/RegisterForm');
var ChatScreen=require('SoftbinatorChat/ChatScreen');

var Firebase=require('firebase/lib/firebase-web');var 


AppRegistry=



React.AppRegistry;var StyleSheet=React.StyleSheet;var View=React.View;var NavigatorIOS=React.NavigatorIOS;

var SoftbinatorChat=React.createClass({
getInitialState:function(){
return {
formCompleted:false,
user:null};},



_onFormCompleted:function(userData){
this.firebaseRef = new Firebase('https://softbinator-chat.firebaseio.com/users');
var newUserRef=this.firebaseRef.push(userData);

this.setState({
formCompleted:true,
user:{
name:userData.name,
avatar:userData.avatar,
objectId:newUserRef.key()}});},




_renderChat:function(){
return (
React.createElement(NavigatorIOS,{
style:styles.container,
initialRoute:{
component:ChatScreen,
title:'Softbinator group chat',
passProps:{user:this.state.user}}}));},




_renderRegisterForm:function(){
return React.createElement(RegisterForm,{onFormCompleted:this._onFormCompleted});},


render:function(){
if(this.state.formCompleted){
return this._renderChat();}else 
{
return this._renderRegisterForm();}}});




var styles=StyleSheet.create({
container:{
flex:1}});



AppRegistry.registerComponent('SoftbinatorChat',function(){return SoftbinatorChat;});});
__d('react-native/Libraries/react-native/react-native',["React","ActivityIndicatorIOS","DatePickerIOS","Image","ListView","MapView","Navigator","NavigatorIOS","PickerIOS","ProgressViewIOS","ScrollView","SegmentedControlIOS","SliderIOS","SwitchIOS","TabBarIOS","Text","TextInput","TouchableHighlight","TouchableOpacity","TouchableWithoutFeedback","View","WebView","AlertIOS","AppRegistry","AppStateIOS","AsyncStorage","CameraRoll","InteractionManager","LayoutAnimation","LinkingIOS","NetInfo","PanResponder","PixelRatio","PushNotificationIOS","StatusBarIOS","StyleSheet","VibrationIOS","RCTDeviceEventEmitter","RCTNativeAppEventEmitter","NativeModules","requireNativeComponent","LinkedStateMixin","ReactComponentWithPureRenderMixin","NativeModules","ReactUpdates","cloneWithProps","ReactFragment","update","ReactDefaultPerf","ReactTestUtils"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


















var ReactNative=Object.assign(Object.create(require('React')),{

ActivityIndicatorIOS:require('ActivityIndicatorIOS'),
DatePickerIOS:require('DatePickerIOS'),
Image:require('Image'),
ListView:require('ListView'),
MapView:require('MapView'),
Navigator:require('Navigator'),
NavigatorIOS:require('NavigatorIOS'),
PickerIOS:require('PickerIOS'),
ProgressViewIOS:require('ProgressViewIOS'),
ScrollView:require('ScrollView'),
SegmentedControlIOS:require('SegmentedControlIOS'),
SliderIOS:require('SliderIOS'),
SwitchIOS:require('SwitchIOS'),
TabBarIOS:require('TabBarIOS'),
Text:require('Text'),
TextInput:require('TextInput'),
TouchableHighlight:require('TouchableHighlight'),
TouchableOpacity:require('TouchableOpacity'),
TouchableWithoutFeedback:require('TouchableWithoutFeedback'),
View:require('View'),
WebView:require('WebView'),


AlertIOS:require('AlertIOS'),
AppRegistry:require('AppRegistry'),
AppStateIOS:require('AppStateIOS'),
AsyncStorage:require('AsyncStorage'),
CameraRoll:require('CameraRoll'),
InteractionManager:require('InteractionManager'),
LayoutAnimation:require('LayoutAnimation'),
LinkingIOS:require('LinkingIOS'),
NetInfo:require('NetInfo'),
PanResponder:require('PanResponder'),
PixelRatio:require('PixelRatio'),
PushNotificationIOS:require('PushNotificationIOS'),
StatusBarIOS:require('StatusBarIOS'),
StyleSheet:require('StyleSheet'),
VibrationIOS:require('VibrationIOS'),


DeviceEventEmitter:require('RCTDeviceEventEmitter'),
NativeAppEventEmitter:require('RCTNativeAppEventEmitter'),
NativeModules:require('NativeModules'),
requireNativeComponent:require('requireNativeComponent'),

addons:{
LinkedStateMixin:require('LinkedStateMixin'),
Perf:undefined,
PureRenderMixin:require('ReactComponentWithPureRenderMixin'),
TestModule:require('NativeModules').TestModule,
TestUtils:undefined,
batchedUpdates:require('ReactUpdates').batchedUpdates,
cloneWithProps:require('cloneWithProps'),
createFragment:require('ReactFragment').create,
update:require('update')}});



if(__DEV__){
ReactNative.addons.Perf = require('ReactDefaultPerf');
ReactNative.addons.TestUtils = require('ReactTestUtils');}


module.exports = ReactNative;});
__d('React',["ReactNative"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












module.exports = require('ReactNative');});
__d('ReactNative',["ReactChildren","ReactClass","ReactComponent","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceHandles","ReactNativeDefaultInjection","ReactNativeMount","ReactPropTypes","deprecated","findNodeHandle","invariant","onlyChild","ReactReconciler","ReactNativeTextComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactChildren=require('ReactChildren');
var ReactClass=require('ReactClass');
var ReactComponent=require('ReactComponent');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeDefaultInjection=require('ReactNativeDefaultInjection');
var ReactNativeMount=require('ReactNativeMount');
var ReactPropTypes=require('ReactPropTypes');

var deprecated=require('deprecated');
var findNodeHandle=require('findNodeHandle');
var invariant=require('invariant');
var onlyChild=require('onlyChild');

ReactNativeDefaultInjection.inject();

var createElement=ReactElement.createElement;
var createFactory=ReactElement.createFactory;
var cloneElement=ReactElement.cloneElement;

if(__DEV__){
createElement = ReactElementValidator.createElement;
createFactory = ReactElementValidator.createFactory;
cloneElement = ReactElementValidator.cloneElement;}


var resolveDefaultProps=function(element){

var defaultProps=element.type.defaultProps;
var props=element.props;
for(var propName in defaultProps) {
if(props[propName] === undefined){
props[propName] = defaultProps[propName];}}};





var augmentElement=function(element){
if(__DEV__){
invariant(
false,
'This optimized path should never be used in DEV mode because ' + 
'it does not provide validation. Check your JSX transform.');}


element._owner = ReactCurrentOwner.current;
element._context = ReactContext.current;
if(element.type.defaultProps){
resolveDefaultProps(element);}

return element;};


var render=function(
element,
mountInto,
callback)
{
return ReactNativeMount.renderComponent(element,mountInto,callback);};


var ReactNative={
hasReactNativeInitialized:false,
Children:{
map:ReactChildren.map,
forEach:ReactChildren.forEach,
count:ReactChildren.count,
only:onlyChild},

Component:ReactComponent,
PropTypes:ReactPropTypes,
createClass:ReactClass.createClass,
createElement:createElement,
createFactory:createFactory,
cloneElement:cloneElement,
_augmentElement:augmentElement,
findNodeHandle:findNodeHandle,
render:render,
unmountComponentAtNode:ReactNativeMount.unmountComponentAtNode,


__spread:Object.assign,

unmountComponentAtNodeAndRemoveContainer:ReactNativeMount.unmountComponentAtNodeAndRemoveContainer,
isValidClass:ReactElement.isValidFactory,
isValidElement:ReactElement.isValidElement,


renderComponent:deprecated(
'React',
'renderComponent',
'render',
this,
render),

isValidComponent:deprecated(
'React',
'isValidComponent',
'isValidElement',
this,
ReactElement.isValidElement)};






if(
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && 
typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function'){
__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
CurrentOwner:ReactCurrentOwner,
InstanceHandles:ReactInstanceHandles,
Mount:ReactNativeMount,
Reconciler:require('ReactReconciler'),
TextComponent:require('ReactNativeTextComponent')});}



module.exports = ReactNative;});
__d('ReactChildren',["PooledClass","ReactFragment","traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');
var ReactFragment=require('ReactFragment');

var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');

var twoArgumentPooler=PooledClass.twoArgumentPooler;
var threeArgumentPooler=PooledClass.threeArgumentPooler;









function ForEachBookKeeping(forEachFunction,forEachContext){
this.forEachFunction = forEachFunction;
this.forEachContext = forEachContext;}

PooledClass.addPoolingTo(ForEachBookKeeping,twoArgumentPooler);

function forEachSingleChild(traverseContext,child,name,i){
var forEachBookKeeping=traverseContext;
forEachBookKeeping.forEachFunction.call(
forEachBookKeeping.forEachContext,child,i);}












function forEachChildren(children,forEachFunc,forEachContext){
if(children == null){
return children;}


var traverseContext=
ForEachBookKeeping.getPooled(forEachFunc,forEachContext);
traverseAllChildren(children,forEachSingleChild,traverseContext);
ForEachBookKeeping.release(traverseContext);}











function MapBookKeeping(mapResult,mapFunction,mapContext){
this.mapResult = mapResult;
this.mapFunction = mapFunction;
this.mapContext = mapContext;}

PooledClass.addPoolingTo(MapBookKeeping,threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext,child,name,i){
var mapBookKeeping=traverseContext;
var mapResult=mapBookKeeping.mapResult;

var keyUnique=!mapResult.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique,
'ReactChildren.map(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}



if(keyUnique){
var mappedChild=
mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext,child,i);
mapResult[name] = mappedChild;}}

















function mapChildren(children,func,context){
if(children == null){
return children;}


var mapResult={};
var traverseContext=MapBookKeeping.getPooled(mapResult,func,context);
traverseAllChildren(children,mapSingleChildIntoContext,traverseContext);
MapBookKeeping.release(traverseContext);
return ReactFragment.create(mapResult);}


function forEachSingleChildDummy(traverseContext,child,name,i){
return null;}









function countChildren(children,context){
return traverseAllChildren(children,forEachSingleChildDummy,null);}


var ReactChildren={
forEach:forEachChildren,
map:mapChildren,
count:countChildren};


module.exports = ReactChildren;});
__d('PooledClass',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








var oneArgumentPooler=function(copyFieldsFrom){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,copyFieldsFrom);
return instance;}else 
{
return new Klass(copyFieldsFrom);}};



var twoArgumentPooler=function(a1,a2){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2);
return instance;}else 
{
return new Klass(a1,a2);}};



var threeArgumentPooler=function(a1,a2,a3){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3);
return instance;}else 
{
return new Klass(a1,a2,a3);}};



var fiveArgumentPooler=function(a1,a2,a3,a4,a5){
var Klass=this;
if(Klass.instancePool.length){
var instance=Klass.instancePool.pop();
Klass.call(instance,a1,a2,a3,a4,a5);
return instance;}else 
{
return new Klass(a1,a2,a3,a4,a5);}};



var standardReleaser=function(instance){
var Klass=this;
invariant(
instance instanceof Klass,
'Trying to release an instance into a pool of a different type.');

if(instance.destructor){
instance.destructor();}

if(Klass.instancePool.length < Klass.poolSize){
Klass.instancePool.push(instance);}};



var DEFAULT_POOL_SIZE=10;
var DEFAULT_POOLER=oneArgumentPooler;










var addPoolingTo=function(CopyConstructor,pooler){
var NewKlass=CopyConstructor;
NewKlass.instancePool = [];
NewKlass.getPooled = pooler || DEFAULT_POOLER;
if(!NewKlass.poolSize){
NewKlass.poolSize = DEFAULT_POOL_SIZE;}

NewKlass.release = standardReleaser;
return NewKlass;};


var PooledClass={
addPoolingTo:addPoolingTo,
oneArgumentPooler:oneArgumentPooler,
twoArgumentPooler:twoArgumentPooler,
threeArgumentPooler:threeArgumentPooler,
fiveArgumentPooler:fiveArgumentPooler};


module.exports = PooledClass;});
__d('invariant',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























var invariant=function(condition,format,a,b,c,d,e,f){
if(__DEV__){
if(format === undefined){
throw new Error('invariant requires an error message argument');}}



if(!condition){
var error;
if(format === undefined){
error = new Error(
'Minified exception occurred; use the non-minified dev environment ' + 
'for the full error message and additional helpful warnings.');}else 

{
var args=[a,b,c,d,e,f];
var argIndex=0;
error = new Error(
'Invariant Violation: ' + 
format.replace(/%s/g,function(){return args[argIndex++];}));}



error.framesToPop = 1;
throw error;}};



module.exports = invariant;});
__d('ReactFragment',["ReactElement","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');

var warning=require('warning');









if(__DEV__){
var fragmentKey='_reactFragment';
var didWarnKey='_reactDidWarn';
var canWarnForReactFragment=false;

try{



var dummy=function(){
return 1;};


Object.defineProperty(
{},
fragmentKey,
{enumerable:false,value:true});


Object.defineProperty(
{},
'key',
{enumerable:true,get:dummy});


canWarnForReactFragment = true;}
catch(x) {}

var proxyPropertyAccessWithWarning=function(obj,key){
Object.defineProperty(obj,key,{
enumerable:true,
get:function(){
warning(
this[didWarnKey],
'A ReactFragment is an opaque type. Accessing any of its ' + 
'properties is deprecated. Pass it to one of the React.Children ' + 
'helpers.');

this[didWarnKey] = true;
return this[fragmentKey][key];},

set:function(value){
warning(
this[didWarnKey],
'A ReactFragment is an immutable opaque type. Mutating its ' + 
'properties is deprecated.');

this[didWarnKey] = true;
this[fragmentKey][key] = value;}});};




var issuedWarnings={};

var didWarnForFragment=function(fragment){


var fragmentCacheKey='';
for(var key in fragment) {
fragmentCacheKey += key + ':' + typeof fragment[key] + ',';}

var alreadyWarnedOnce=!!issuedWarnings[fragmentCacheKey];
issuedWarnings[fragmentCacheKey] = true;
return alreadyWarnedOnce;};}



var ReactFragment={


create:function(object){
if(__DEV__){
if(typeof object !== 'object' || !object || Array.isArray(object)){
warning(
false,
'React.addons.createFragment only accepts a single object.',
object);

return object;}

if(ReactElement.isValidElement(object)){
warning(
false,
'React.addons.createFragment does not accept a ReactElement ' + 
'without a wrapper object.');

return object;}

if(canWarnForReactFragment){
var proxy={};
Object.defineProperty(proxy,fragmentKey,{
enumerable:false,
value:object});

Object.defineProperty(proxy,didWarnKey,{
writable:true,
enumerable:false,
value:false});

for(var key in object) {
proxyPropertyAccessWithWarning(proxy,key);}

Object.preventExtensions(proxy);
return proxy;}}


return object;},



extract:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){
if(!fragment[fragmentKey]){
warning(
didWarnForFragment(fragment),
'Any use of a keyed object should be wrapped in ' + 
'React.addons.createFragment(object) before being passed as a ' + 
'child.');

return fragment;}

return fragment[fragmentKey];}}


return fragment;},




extractIfFragment:function(fragment){
if(__DEV__){
if(canWarnForReactFragment){

if(fragment[fragmentKey]){
return fragment[fragmentKey];}




for(var key in fragment) {
if(fragment.hasOwnProperty(key) && 
ReactElement.isValidElement(fragment[key])){


return ReactFragment.extract(fragment);}}}}




return fragment;}};



module.exports = ReactFragment;});
__d('ReactElement',["ReactContext","ReactCurrentOwner","Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');

var assign=require('Object.assign');
var warning=require('warning');

var RESERVED_PROPS={
key:true,
ref:true};









function defineWarningProperty(object,key){
Object.defineProperty(object,key,{

configurable:false,
enumerable:true,

get:function(){
if(!this._store){
return null;}

return this._store[key];},


set:function(value){
warning(
false,
'Don\'t set the %s property of the React element. Instead, ' + 
'specify the correct value when initially creating the element.',
key);

this._store[key] = value;}});}








var useMutationMembrane=false;







function defineMutationMembrane(prototype){
try{
var pseudoFrozenProperties={
props:true};

for(var key in pseudoFrozenProperties) {
defineWarningProperty(prototype,key);}

useMutationMembrane = true;}
catch(x) {}}














var ReactElement=function(type,key,ref,owner,context,props){

this.type = type;
this.key = key;
this.ref = ref;


this._owner = owner;



this._context = context;

if(__DEV__){




this._store = {props:props,originalProps:assign({},props)};





try{
Object.defineProperty(this._store,'validated',{
configurable:false,
enumerable:false,
writable:true});}

catch(x) {}

this._store.validated = false;




if(useMutationMembrane){
Object.freeze(this);
return;}}



this.props = props;};




ReactElement.prototype = {
_isReactElement:true};


if(__DEV__){
defineMutationMembrane(ReactElement.prototype);}


ReactElement.createElement = function(type,config,children){
var propName;


var props={};

var key=null;
var ref=null;

if(config != null){
ref = config.ref === undefined?null:config.ref;
key = config.key === undefined?null:'' + config.key;

for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}



if(type && type.defaultProps){
var defaultProps=type.defaultProps;
for(propName in defaultProps) {
if(typeof props[propName] === 'undefined'){
props[propName] = defaultProps[propName];}}}




return new ReactElement(
type,
key,
ref,
ReactCurrentOwner.current,
ReactContext.current,
props);};



ReactElement.createFactory = function(type){
var factory=ReactElement.createElement.bind(null,type);





factory.type = type;
return factory;};


ReactElement.cloneAndReplaceProps = function(oldElement,newProps){
var newElement=new ReactElement(
oldElement.type,
oldElement.key,
oldElement.ref,
oldElement._owner,
oldElement._context,
newProps);


if(__DEV__){

newElement._store.validated = oldElement._store.validated;}

return newElement;};


ReactElement.cloneElement = function(element,config,children){
var propName;


var props=assign({},element.props);


var key=element.key;
var ref=element.ref;


var owner=element._owner;

if(config != null){
if(config.ref !== undefined){

ref = config.ref;
owner = ReactCurrentOwner.current;}

if(config.key !== undefined){
key = '' + config.key;}


for(propName in config) {
if(config.hasOwnProperty(propName) && 
!RESERVED_PROPS.hasOwnProperty(propName)){
props[propName] = config[propName];}}}






var childrenLength=arguments.length - 2;
if(childrenLength === 1){
props.children = children;}else 
if(childrenLength > 1){
var childArray=Array(childrenLength);
for(var i=0;i < childrenLength;i++) {
childArray[i] = arguments[i + 2];}

props.children = childArray;}


return new ReactElement(
element.type,
key,
ref,
owner,
element._context,
props);};








ReactElement.isValidElement = function(object){




var isElement=!!(object && object._isReactElement);





return isElement;};


module.exports = ReactElement;});
__d('ReactContext',["Object.assign","emptyObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var warning=require('warning');

var didWarn=false;







var ReactContext={





current:emptyObject,

















withContext:function(newContext,scopedCallback){
if(__DEV__){
warning(
didWarn,
'withContext is deprecated and will be removed in a future version. ' + 
'Use a wrapper component with getChildContext instead.');


didWarn = true;}


var result;
var previousContext=ReactContext.current;
ReactContext.current = assign({},previousContext,newContext);
try{
result = scopedCallback();}finally 
{
ReactContext.current = previousContext;}

return result;}};




module.exports = ReactContext;});
__d('Object.assign',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














function assign(target,sources){
if(target == null){
throw new TypeError('Object.assign target cannot be null or undefined');}


var to=Object(target);
var hasOwnProperty=Object.prototype.hasOwnProperty;

for(var nextIndex=1;nextIndex < arguments.length;nextIndex++) {
var nextSource=arguments[nextIndex];
if(nextSource == null){
continue;}


var from=Object(nextSource);






for(var key in from) {
if(hasOwnProperty.call(from,key)){
to[key] = from[key];}}}




return to;}


module.exports = assign;});
__d('emptyObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";












var emptyObject={};

if(__DEV__){
Object.freeze(emptyObject);}


module.exports = emptyObject;});
__d('warning',["emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var emptyFunction=require('emptyFunction');








var warning=emptyFunction;

if(__DEV__){
warning = function(condition,format){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
if(format === undefined){
throw new Error(
'`warning(condition, format, ...args)` requires a warning ' + 
'message argument');}



if(format.length < 10 || /^[s\W]*$/.test(format)){
throw new Error(
'The warning format should be able to uniquely identify this ' + 
'warning. Please, use a more descriptive format than: ' + format);}



if(format.indexOf('Failed Composite propType: ') === 0){
return;}


if(!condition){
var argIndex=0;
var message='Warning: ' + format.replace(/%s/g,function(){return args[argIndex++];});
console.warn(message);
try{



throw new Error(message);}
catch(x) {}}};}




module.exports = warning;});
__d('emptyFunction',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 










makeEmptyFunction(arg){
return function(){
return arg;};}








function emptyFunction(){}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function(){return this;};
emptyFunction.thatReturnsArgument = function(arg){return arg;};

module.exports = emptyFunction;});
__d('ReactCurrentOwner',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactCurrentOwner={





current:null};



module.exports = ReactCurrentOwner;});
__d('traverseAllChildren',["ReactElement","ReactFragment","ReactInstanceHandles","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactInstanceHandles=require('ReactInstanceHandles');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR=':';






var userProvidedKeyEscaperLookup={
'=':'=0',
'.':'=1',
':':'=2'};


var userProvidedKeyEscapeRegex=/[=.:]/g;

var didWarnAboutMaps=false;

function userProvidedKeyEscaper(match){
return userProvidedKeyEscaperLookup[match];}









function getComponentKey(component,index){
if(component && component.key != null){

return wrapUserProvidedKey(component.key);}


return index.toString(36);}








function escapeUserProvidedKey(text){
return ('' + text).replace(
userProvidedKeyEscapeRegex,
userProvidedKeyEscaper);}










function wrapUserProvidedKey(key){
return '$' + escapeUserProvidedKey(key);}











function traverseAllChildrenImpl(
children,
nameSoFar,
indexSoFar,
callback,
traverseContext)
{
var type=typeof children;

if(type === 'undefined' || type === 'boolean'){

children = null;}


if(children === null || 
type === 'string' || 
type === 'number' || 
ReactElement.isValidElement(children)){
callback(
traverseContext,
children,


nameSoFar === ''?SEPARATOR + getComponentKey(children,0):nameSoFar,
indexSoFar);

return 1;}


var child,nextName,nextIndex;
var subtreeCount=0;

if(Array.isArray(children)){
for(var i=0;i < children.length;i++) {
child = children[i];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,i);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}else 


{
var iteratorFn=getIteratorFn(children);
if(iteratorFn){
var iterator=iteratorFn.call(children);
var step;
if(iteratorFn !== children.entries){
var ii=0;
while(!(step = iterator.next()).done) {
child = step.value;
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
getComponentKey(child,ii++);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}else 


{
if(__DEV__){
warning(
didWarnAboutMaps,
'Using Maps as children is not yet fully supported. It is an ' + 
'experimental feature that might be removed. Convert it to a ' + 
'sequence / iterable of keyed ReactElements instead.');

didWarnAboutMaps = true;}


while(!(step = iterator.next()).done) {
var entry=step.value;
if(entry){
child = entry[1];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + 
getComponentKey(child,0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}}}else 




if(type === 'object'){
invariant(
children.nodeType !== 1,
'traverseAllChildren(...): Encountered an invalid child; DOM ' + 
'elements are not valid children of React components.');

var fragment=ReactFragment.extract(children);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
child = fragment[key];
nextName = 
(nameSoFar !== ''?nameSoFar + SUBSEPARATOR:SEPARATOR) + 
wrapUserProvidedKey(key) + SUBSEPARATOR + 
getComponentKey(child,0);

nextIndex = indexSoFar + subtreeCount;
subtreeCount += traverseAllChildrenImpl(
child,
nextName,
nextIndex,
callback,
traverseContext);}}}}






return subtreeCount;}


















function traverseAllChildren(children,callback,traverseContext){
if(children == null){
return 0;}


return traverseAllChildrenImpl(children,'',0,callback,traverseContext);}


module.exports = traverseAllChildren;});
__d('ReactInstanceHandles',["ReactRootIndex","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactRootIndex=require('ReactRootIndex');

var invariant=require('invariant');

var SEPARATOR='.';
var SEPARATOR_LENGTH=SEPARATOR.length;




var MAX_TREE_DEPTH=100;








function getReactRootIDString(index){
return SEPARATOR + index.toString(36);}










function isBoundary(id,index){
return id.charAt(index) === SEPARATOR || index === id.length;}









function isValidID(id){
return id === '' || 
id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;}











function isAncestorIDOf(ancestorID,descendantID){
return (
descendantID.indexOf(ancestorID) === 0 && 
isBoundary(descendantID,ancestorID.length));}










function getParentID(id){
return id?id.substr(0,id.lastIndexOf(SEPARATOR)):'';}











function getNextDescendantID(ancestorID,destinationID){
invariant(
isValidID(ancestorID) && isValidID(destinationID),
'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
ancestorID,
destinationID);

invariant(
isAncestorIDOf(ancestorID,destinationID),
'getNextDescendantID(...): React has made an invalid assumption about ' + 
'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
ancestorID,
destinationID);

if(ancestorID === destinationID){
return ancestorID;}



var start=ancestorID.length + SEPARATOR_LENGTH;
for(var i=start;i < destinationID.length;i++) {
if(isBoundary(destinationID,i)){
break;}}


return destinationID.substr(0,i);}













function getFirstCommonAncestorID(oneID,twoID){
var minLength=Math.min(oneID.length,twoID.length);
if(minLength === 0){
return '';}

var lastCommonMarkerIndex=0;

for(var i=0;i <= minLength;i++) {
if(isBoundary(oneID,i) && isBoundary(twoID,i)){
lastCommonMarkerIndex = i;}else 
if(oneID.charAt(i) !== twoID.charAt(i)){
break;}}


var longestCommonID=oneID.substr(0,lastCommonMarkerIndex);
invariant(
isValidID(longestCommonID),
'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
oneID,
twoID,
longestCommonID);

return longestCommonID;}














function traverseParentPath(start,stop,cb,arg,skipFirst,skipLast){
start = start || '';
stop = stop || '';
invariant(
start !== stop,
'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
start);

var traverseUp=isAncestorIDOf(stop,start);
invariant(
traverseUp || isAncestorIDOf(start,stop),
'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 
'not have a parent path.',
start,
stop);


var depth=0;
var traverse=traverseUp?getParentID:getNextDescendantID;
for(var id=start;;id = traverse(id,stop)) {
var ret;
if((!skipFirst || id !== start) && (!skipLast || id !== stop)){
ret = cb(id,traverseUp,arg);}

if(ret === false || id === stop){

break;}

invariant(
depth++ < MAX_TREE_DEPTH,
'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 
'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
start,stop);}}











var ReactInstanceHandles={





createReactRootID:function(){
return getReactRootIDString(ReactRootIndex.createReactRootIndex());},










createReactID:function(rootID,name){
return rootID + name;},










getReactRootIDFromNodeID:function(id){
if(id && id.charAt(0) === SEPARATOR && id.length > 1){
var index=id.indexOf(SEPARATOR,1);
return index > -1?id.substr(0,index):id;}

return null;},
















traverseEnterLeave:function(leaveID,enterID,cb,upArg,downArg){
var ancestorID=getFirstCommonAncestorID(leaveID,enterID);
if(ancestorID !== leaveID){
traverseParentPath(leaveID,ancestorID,cb,upArg,false,true);}

if(ancestorID !== enterID){
traverseParentPath(ancestorID,enterID,cb,downArg,true,false);}},













traverseTwoPhase:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,false);
traverseParentPath(targetID,'',cb,arg,false,true);}},






traverseTwoPhaseSkipTarget:function(targetID,cb,arg){
if(targetID){
traverseParentPath('',targetID,cb,arg,true,true);
traverseParentPath(targetID,'',cb,arg,true,true);}},















traverseAncestors:function(targetID,cb,arg){
traverseParentPath('',targetID,cb,arg,true,false);},






_getFirstCommonAncestorID:getFirstCommonAncestorID,





_getNextDescendantID:getNextDescendantID,

isAncestorIDOf:isAncestorIDOf,

SEPARATOR:SEPARATOR};



module.exports = ReactInstanceHandles;});
__d('ReactRootIndex',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactRootIndexInjection={



injectCreateReactRootIndex:function(_createReactRootIndex){
ReactRootIndex.createReactRootIndex = _createReactRootIndex;}};



var ReactRootIndex={
createReactRootIndex:null,
injection:ReactRootIndexInjection};


module.exports = ReactRootIndex;});
__d('getIteratorFn',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ITERATOR_SYMBOL=typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL='@@iterator';















function getIteratorFn(maybeIterable){
var iteratorFn=maybeIterable && (
ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || 
maybeIterable[FAUX_ITERATOR_SYMBOL]);

if(typeof iteratorFn === 'function'){
return iteratorFn;}}



module.exports = getIteratorFn;});
__d('ReactClass',["ReactComponent","ReactCurrentOwner","ReactElement","ReactErrorUtils","ReactInstanceMap","ReactLifeCycle","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactUpdateQueue","Object.assign","invariant","keyMirror","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponent=require('ReactComponent');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactErrorUtils=require('ReactErrorUtils');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactUpdateQueue=require('ReactUpdateQueue');

var assign=require('Object.assign');
var invariant=require('invariant');
var keyMirror=require('keyMirror');
var keyOf=require('keyOf');
var warning=require('warning');

var MIXINS_KEY=keyOf({mixins:null});




var SpecPolicy=keyMirror({



DEFINE_ONCE:null,




DEFINE_MANY:null,



OVERRIDE_BASE:null,





DEFINE_MANY_MERGED:null});



var injectedMixins=[];























var ReactClassInterface={







mixins:SpecPolicy.DEFINE_MANY,








statics:SpecPolicy.DEFINE_MANY,







propTypes:SpecPolicy.DEFINE_MANY,







contextTypes:SpecPolicy.DEFINE_MANY,







childContextTypes:SpecPolicy.DEFINE_MANY,













getDefaultProps:SpecPolicy.DEFINE_MANY_MERGED,















getInitialState:SpecPolicy.DEFINE_MANY_MERGED,





getChildContext:SpecPolicy.DEFINE_MANY_MERGED,

















render:SpecPolicy.DEFINE_ONCE,












componentWillMount:SpecPolicy.DEFINE_MANY,











componentDidMount:SpecPolicy.DEFINE_MANY,




















componentWillReceiveProps:SpecPolicy.DEFINE_MANY,





















shouldComponentUpdate:SpecPolicy.DEFINE_ONCE,
















componentWillUpdate:SpecPolicy.DEFINE_MANY,













componentDidUpdate:SpecPolicy.DEFINE_MANY,












componentWillUnmount:SpecPolicy.DEFINE_MANY,















updateComponent:SpecPolicy.OVERRIDE_BASE};












var RESERVED_SPEC_KEYS={
displayName:function(Constructor,displayName){
Constructor.displayName = displayName;},

mixins:function(Constructor,mixins){
if(mixins){
for(var i=0;i < mixins.length;i++) {
mixSpecIntoComponent(Constructor,mixins[i]);}}},



childContextTypes:function(Constructor,childContextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
childContextTypes,
ReactPropTypeLocations.childContext);}


Constructor.childContextTypes = assign(
{},
Constructor.childContextTypes,
childContextTypes);},


contextTypes:function(Constructor,contextTypes){
if(__DEV__){
validateTypeDef(
Constructor,
contextTypes,
ReactPropTypeLocations.context);}


Constructor.contextTypes = assign(
{},
Constructor.contextTypes,
contextTypes);},






getDefaultProps:function(Constructor,getDefaultProps){
if(Constructor.getDefaultProps){
Constructor.getDefaultProps = createMergedResultFunction(
Constructor.getDefaultProps,
getDefaultProps);}else 

{
Constructor.getDefaultProps = getDefaultProps;}},


propTypes:function(Constructor,propTypes){
if(__DEV__){
validateTypeDef(
Constructor,
propTypes,
ReactPropTypeLocations.prop);}


Constructor.propTypes = assign(
{},
Constructor.propTypes,
propTypes);},


statics:function(Constructor,statics){
mixStaticSpecIntoComponent(Constructor,statics);}};



function validateTypeDef(Constructor,typeDef,location){
for(var propName in typeDef) {
if(typeDef.hasOwnProperty(propName)){


warning(
typeof typeDef[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
Constructor.displayName || 'ReactClass',
ReactPropTypeLocationNames[location],
propName);}}}





function validateMethodOverride(proto,name){
var specPolicy=ReactClassInterface.hasOwnProperty(name)?
ReactClassInterface[name]:
null;


if(ReactClassMixin.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.OVERRIDE_BASE,
'ReactClassInterface: You are attempting to override ' + 
'`%s` from your class specification. Ensure that your method names ' + 
'do not overlap with React methods.',
name);}




if(proto.hasOwnProperty(name)){
invariant(
specPolicy === SpecPolicy.DEFINE_MANY || 
specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
'ReactClassInterface: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be due ' + 
'to a mixin.',
name);}}








function mixSpecIntoComponent(Constructor,spec){
if(!spec){
return;}


invariant(
typeof spec !== 'function',
'ReactClass: You\'re attempting to ' + 
'use a component class as a mixin. Instead, just use a regular object.');

invariant(
!ReactElement.isValidElement(spec),
'ReactClass: You\'re attempting to ' + 
'use a component as a mixin. Instead, just use a regular object.');


var proto=Constructor.prototype;




if(spec.hasOwnProperty(MIXINS_KEY)){
RESERVED_SPEC_KEYS.mixins(Constructor,spec.mixins);}


for(var name in spec) {
if(!spec.hasOwnProperty(name)){
continue;}


if(name === MIXINS_KEY){

continue;}


var property=spec[name];
validateMethodOverride(proto,name);

if(RESERVED_SPEC_KEYS.hasOwnProperty(name)){
RESERVED_SPEC_KEYS[name](Constructor,property);}else 
{




var isReactClassMethod=
ReactClassInterface.hasOwnProperty(name);
var isAlreadyDefined=proto.hasOwnProperty(name);
var markedDontBind=property && property.__reactDontBind;
var isFunction=typeof property === 'function';
var shouldAutoBind=
isFunction && 
!isReactClassMethod && 
!isAlreadyDefined && 
!markedDontBind;

if(shouldAutoBind){
if(!proto.__reactAutoBindMap){
proto.__reactAutoBindMap = {};}

proto.__reactAutoBindMap[name] = property;
proto[name] = property;}else 
{
if(isAlreadyDefined){
var specPolicy=ReactClassInterface[name];


invariant(
isReactClassMethod && (
specPolicy === SpecPolicy.DEFINE_MANY_MERGED || 
specPolicy === SpecPolicy.DEFINE_MANY),

'ReactClass: Unexpected spec policy %s for key %s ' + 
'when mixing in component specs.',
specPolicy,
name);




if(specPolicy === SpecPolicy.DEFINE_MANY_MERGED){
proto[name] = createMergedResultFunction(proto[name],property);}else 
if(specPolicy === SpecPolicy.DEFINE_MANY){
proto[name] = createChainedFunction(proto[name],property);}}else 

{
proto[name] = property;
if(__DEV__){


if(typeof property === 'function' && spec.displayName){
proto[name].displayName = spec.displayName + '_' + name;}}}}}}}








function mixStaticSpecIntoComponent(Constructor,statics){
if(!statics){
return;}

for(var name in statics) {
var property=statics[name];
if(!statics.hasOwnProperty(name)){
continue;}


var isReserved=(name in RESERVED_SPEC_KEYS);
invariant(
!isReserved,
'ReactClass: You are attempting to define a reserved ' + 
'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 
'as an instance property instead; it will still be accessible on the ' + 
'constructor.',
name);


var isInherited=(name in Constructor);
invariant(
!isInherited,
'ReactClass: You are attempting to define ' + 
'`%s` on your component more than once. This conflict may be ' + 
'due to a mixin.',
name);

Constructor[name] = property;}}










function mergeIntoWithNoDuplicateKeys(one,two){
invariant(
one && two && typeof one === 'object' && typeof two === 'object',
'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');


for(var key in two) {
if(two.hasOwnProperty(key)){
invariant(
one[key] === undefined,
'mergeIntoWithNoDuplicateKeys(): ' + 
'Tried to merge two objects with the same key: `%s`. This conflict ' + 
'may be due to a mixin; in particular, this may be caused by two ' + 
'getInitialState() or getDefaultProps() methods returning objects ' + 
'with clashing keys.',
key);

one[key] = two[key];}}


return one;}










function createMergedResultFunction(one,two){
return function mergedResult(){
var a=one.apply(this,arguments);
var b=two.apply(this,arguments);
if(a == null){
return b;}else 
if(b == null){
return a;}

var c={};
mergeIntoWithNoDuplicateKeys(c,a);
mergeIntoWithNoDuplicateKeys(c,b);
return c;};}











function createChainedFunction(one,two){
return function chainedFunction(){
one.apply(this,arguments);
two.apply(this,arguments);};}










function bindAutoBindMethod(component,method){
var boundMethod=method.bind(component);
if(__DEV__){
boundMethod.__reactBoundContext = component;
boundMethod.__reactBoundMethod = method;
boundMethod.__reactBoundArguments = null;
var componentName=component.constructor.displayName;
var _bind=boundMethod.bind;

boundMethod.bind = function(newThis){for(var _len=arguments.length,args=Array(_len > 1?_len - 1:0),_key=1;_key < _len;_key++) {args[_key - 1] = arguments[_key];}



if(newThis !== component && newThis !== null){
warning(
false,
'bind(): React component methods may only be bound to the ' + 
'component instance. See %s',
componentName);}else 

if(!args.length){
warning(
false,
'bind(): You are binding a component method to the component. ' + 
'React does this for you automatically in a high-performance ' + 
'way, so you can safely remove this call. See %s',
componentName);

return boundMethod;}

var reboundMethod=_bind.apply(boundMethod,arguments);
reboundMethod.__reactBoundContext = component;
reboundMethod.__reactBoundMethod = method;
reboundMethod.__reactBoundArguments = args;
return reboundMethod;};}



return boundMethod;}







function bindAutoBindMethods(component){
for(var autoBindKey in component.__reactAutoBindMap) {
if(component.__reactAutoBindMap.hasOwnProperty(autoBindKey)){
var method=component.__reactAutoBindMap[autoBindKey];
component[autoBindKey] = bindAutoBindMethod(
component,
ReactErrorUtils.guard(
method,
component.constructor.displayName + '.' + autoBindKey));}}}






var typeDeprecationDescriptor={
enumerable:false,
get:function(){
var displayName=this.displayName || this.name || 'Component';
warning(
false,
'%s.type is deprecated. Use %s directly to access the class.',
displayName,
displayName);

Object.defineProperty(this,'type',{
value:this});

return this;}};







var ReactClassMixin={





replaceState:function(newState,callback){
ReactUpdateQueue.enqueueReplaceState(this,newState);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}},









isMounted:function(){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing isMounted inside its render() function. ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


var internalInstance=ReactInstanceMap.get(this);
return (
internalInstance && 
internalInstance !== ReactLifeCycle.currentlyMountingInstance);},












setProps:function(partialProps,callback){
ReactUpdateQueue.enqueueSetProps(this,partialProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}},












replaceProps:function(newProps,callback){
ReactUpdateQueue.enqueueReplaceProps(this,newProps);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}}};




var ReactClassComponent=function(){};
assign(
ReactClassComponent.prototype,
ReactComponent.prototype,
ReactClassMixin);







var ReactClass={








createClass:function(spec){
var Constructor=function(props,context){



if(__DEV__){
warning(
this instanceof Constructor,
'Something is calling a React component directly. Use a factory or ' + 
'JSX instead. See: http://fb.me/react-legacyfactory');}




if(this.__reactAutoBindMap){
bindAutoBindMethods(this);}


this.props = props;
this.context = context;
this.state = null;




var initialState=this.getInitialState?this.getInitialState():null;
if(__DEV__){

if(typeof initialState === 'undefined' && 
this.getInitialState._isMockFunction){


initialState = null;}}


invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.getInitialState(): must return an object or null',
Constructor.displayName || 'ReactCompositeComponent');


this.state = initialState;};

Constructor.prototype = new ReactClassComponent();
Constructor.prototype.constructor = Constructor;

injectedMixins.forEach(
mixSpecIntoComponent.bind(null,Constructor));


mixSpecIntoComponent(Constructor,spec);


if(Constructor.getDefaultProps){
Constructor.defaultProps = Constructor.getDefaultProps();}


if(__DEV__){




if(Constructor.getDefaultProps){
Constructor.getDefaultProps.isReactClassApproved = {};}

if(Constructor.prototype.getInitialState){
Constructor.prototype.getInitialState.isReactClassApproved = {};}}



invariant(
Constructor.prototype.render,
'createClass(...): Class specification must implement a `render` method.');


if(__DEV__){
warning(
!Constructor.prototype.componentShouldUpdate,
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
spec.displayName || 'A component');}




for(var methodName in ReactClassInterface) {
if(!Constructor.prototype[methodName]){
Constructor.prototype[methodName] = null;}}




Constructor.type = Constructor;
if(__DEV__){
try{
Object.defineProperty(Constructor,'type',typeDeprecationDescriptor);}
catch(x) {}}




return Constructor;},


injection:{
injectMixin:function(mixin){
injectedMixins.push(mixin);}}};





module.exports = ReactClass;});
__d('ReactComponent',["ReactUpdateQueue","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdateQueue=require('ReactUpdateQueue');

var invariant=require('invariant');
var warning=require('warning');




function ReactComponent(props,context){
this.props = props;
this.context = context;}



























ReactComponent.prototype.setState = function(partialState,callback){
invariant(
typeof partialState === 'object' || 
typeof partialState === 'function' || 
partialState == null,
'setState(...): takes an object of state variables to update or a ' + 
'function which returns an object of state variables.');

if(__DEV__){
warning(
partialState != null,
'setState(...): You passed an undefined or null state object; ' + 
'instead, use forceUpdate().');}


ReactUpdateQueue.enqueueSetState(this,partialState);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}};

















ReactComponent.prototype.forceUpdate = function(callback){
ReactUpdateQueue.enqueueForceUpdate(this);
if(callback){
ReactUpdateQueue.enqueueCallback(this,callback);}};








if(__DEV__){
var deprecatedAPIs={
getDOMNode:'getDOMNode',
isMounted:'isMounted',
replaceProps:'replaceProps',
replaceState:'replaceState',
setProps:'setProps'};

var defineDeprecationWarning=function(methodName,displayName){
try{
Object.defineProperty(ReactComponent.prototype,methodName,{
get:function(){
warning(
false,
'%s(...) is deprecated in plain JavaScript React classes.',
displayName);

return undefined;}});}


catch(x) {}};



for(var fnName in deprecatedAPIs) {
if(deprecatedAPIs.hasOwnProperty(fnName)){
defineDeprecationWarning(fnName,deprecatedAPIs[fnName]);}}}




module.exports = ReactComponent;});
__d('ReactUpdateQueue',["ReactLifeCycle","ReactCurrentOwner","ReactElement","ReactInstanceMap","ReactUpdates","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactLifeCycle=require('ReactLifeCycle');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

function enqueueUpdate(internalInstance){
if(internalInstance !== ReactLifeCycle.currentlyMountingInstance){




ReactUpdates.enqueueUpdate(internalInstance);}}



function getInternalInstanceReadyForUpdate(publicInstance,callerName){
invariant(
ReactCurrentOwner.current == null,
'%s(...): Cannot update during an existing state transition ' + 
'(such as within `render`). Render methods should be a pure function ' + 
'of props and state.',
callerName);


var internalInstance=ReactInstanceMap.get(publicInstance);
if(!internalInstance){
if(__DEV__){



warning(
!callerName,
'%s(...): Can only update a mounted or mounting component. ' + 
'This usually means you called %s() on an unmounted ' + 
'component. This is a no-op.',
callerName,
callerName);}


return null;}


if(internalInstance === ReactLifeCycle.currentlyUnmountingInstance){
return null;}


return internalInstance;}






var ReactUpdateQueue={









enqueueCallback:function(publicInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

var internalInstance=getInternalInstanceReadyForUpdate(publicInstance);






if(!internalInstance || 
internalInstance === ReactLifeCycle.currentlyMountingInstance){
return null;}


if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}





enqueueUpdate(internalInstance);},


enqueueCallbackInternal:function(internalInstance,callback){
invariant(
typeof callback === 'function',
'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + 
'`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 
'isn\'t callable.');

if(internalInstance._pendingCallbacks){
internalInstance._pendingCallbacks.push(callback);}else 
{
internalInstance._pendingCallbacks = [callback];}

enqueueUpdate(internalInstance);},















enqueueForceUpdate:function(publicInstance){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'forceUpdate');


if(!internalInstance){
return;}


internalInstance._pendingForceUpdate = true;

enqueueUpdate(internalInstance);},













enqueueReplaceState:function(publicInstance,completeState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceState');


if(!internalInstance){
return;}


internalInstance._pendingStateQueue = [completeState];
internalInstance._pendingReplaceState = true;

enqueueUpdate(internalInstance);},












enqueueSetState:function(publicInstance,partialState){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setState');


if(!internalInstance){
return;}


var queue=
internalInstance._pendingStateQueue || (
internalInstance._pendingStateQueue = []);
queue.push(partialState);

enqueueUpdate(internalInstance);},









enqueueSetProps:function(publicInstance,partialProps){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'setProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel,
'setProps(...): You called `setProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
var props=assign({},element.props,partialProps);
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element,
props);


enqueueUpdate(internalInstance);},









enqueueReplaceProps:function(publicInstance,props){
var internalInstance=getInternalInstanceReadyForUpdate(
publicInstance,
'replaceProps');


if(!internalInstance){
return;}


invariant(
internalInstance._isTopLevel,
'replaceProps(...): You called `replaceProps` on a ' + 
'component with a parent. This is an anti-pattern since props will ' + 
'get reactively updated when rendered. Instead, change the owner\'s ' + 
'`render` method to pass the correct value as props to the component ' + 
'where it is created.');




var element=internalInstance._pendingElement || 
internalInstance._currentElement;
internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
element,
props);


enqueueUpdate(internalInstance);},


enqueueElementInternal:function(internalInstance,newElement){
internalInstance._pendingElement = newElement;
enqueueUpdate(internalInstance);}};




module.exports = ReactUpdateQueue;});
__d('ReactLifeCycle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactLifeCycle={
currentlyMountingInstance:null,
currentlyUnmountingInstance:null};


module.exports = ReactLifeCycle;});
__d('ReactInstanceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var ReactInstanceMap={






remove:function(key){
key._reactInternalInstance = undefined;},


get:function(key){
return key._reactInternalInstance;},


has:function(key){
return key._reactInternalInstance !== undefined;},


set:function(key,value){
key._reactInternalInstance = value;}};




module.exports = ReactInstanceMap;});
__d('ReactUpdates',["CallbackQueue","PooledClass","ReactCurrentOwner","ReactPerf","ReactReconciler","Transaction","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');

var dirtyComponents=[];
var asapCallbackQueue=CallbackQueue.getPooled();
var asapEnqueued=false;

var batchingStrategy=null;

function ensureInjected(){
invariant(
ReactUpdates.ReactReconcileTransaction && batchingStrategy,
'ReactUpdates: must inject a reconcile transaction class and batching ' + 
'strategy');}



var NESTED_UPDATES={
initialize:function(){
this.dirtyComponentsLength = dirtyComponents.length;},

close:function(){
if(this.dirtyComponentsLength !== dirtyComponents.length){





dirtyComponents.splice(0,this.dirtyComponentsLength);
flushBatchedUpdates();}else 
{
dirtyComponents.length = 0;}}};




var UPDATE_QUEUEING={
initialize:function(){
this.callbackQueue.reset();},

close:function(){
this.callbackQueue.notifyAll();}};



var TRANSACTION_WRAPPERS=[NESTED_UPDATES,UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction(){
this.reinitializeTransaction();
this.dirtyComponentsLength = null;
this.callbackQueue = CallbackQueue.getPooled();
this.reconcileTransaction = 
ReactUpdates.ReactReconcileTransaction.getPooled();}


assign(
ReactUpdatesFlushTransaction.prototype,
Transaction.Mixin,{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},


destructor:function(){
this.dirtyComponentsLength = null;
CallbackQueue.release(this.callbackQueue);
this.callbackQueue = null;
ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
this.reconcileTransaction = null;},


perform:function(method,scope,a){


return Transaction.Mixin.perform.call(
this,
this.reconcileTransaction.perform,
this.reconcileTransaction,
method,
scope,
a);}});




PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback,a,b,c,d){
ensureInjected();
batchingStrategy.batchedUpdates(callback,a,b,c,d);}









function mountOrderComparator(c1,c2){
return c1._mountOrder - c2._mountOrder;}


function runBatchedUpdates(transaction){
var len=transaction.dirtyComponentsLength;
invariant(
len === dirtyComponents.length,
'Expected flush transaction\'s stored dirty-components length (%s) to ' + 
'match dirty-components array length (%s).',
len,
dirtyComponents.length);





dirtyComponents.sort(mountOrderComparator);

for(var i=0;i < len;i++) {



var component=dirtyComponents[i];




var callbacks=component._pendingCallbacks;
component._pendingCallbacks = null;

ReactReconciler.performUpdateIfNecessary(
component,
transaction.reconcileTransaction);


if(callbacks){
for(var j=0;j < callbacks.length;j++) {
transaction.callbackQueue.enqueue(
callbacks[j],
component.getPublicInstance());}}}}






var flushBatchedUpdates=function(){




while(dirtyComponents.length || asapEnqueued) {
if(dirtyComponents.length){
var transaction=ReactUpdatesFlushTransaction.getPooled();
transaction.perform(runBatchedUpdates,null,transaction);
ReactUpdatesFlushTransaction.release(transaction);}


if(asapEnqueued){
asapEnqueued = false;
var queue=asapCallbackQueue;
asapCallbackQueue = CallbackQueue.getPooled();
queue.notifyAll();
CallbackQueue.release(queue);}}};



flushBatchedUpdates = ReactPerf.measure(
'ReactUpdates',
'flushBatchedUpdates',
flushBatchedUpdates);






function enqueueUpdate(component){
ensureInjected();






warning(
ReactCurrentOwner.current == null,
'enqueueUpdate(): Render methods should be a pure function of props ' + 
'and state; triggering nested component updates from render is not ' + 
'allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


if(!batchingStrategy.isBatchingUpdates){
batchingStrategy.batchedUpdates(enqueueUpdate,component);
return;}


dirtyComponents.push(component);}






function asap(callback,context){
invariant(
batchingStrategy.isBatchingUpdates,
'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 
'updates are not being batched.');

asapCallbackQueue.enqueue(callback,context);
asapEnqueued = true;}


var ReactUpdatesInjection={
injectReconcileTransaction:function(ReconcileTransaction){
invariant(
ReconcileTransaction,
'ReactUpdates: must provide a reconcile transaction class');

ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;},


injectBatchingStrategy:function(_batchingStrategy){
invariant(
_batchingStrategy,
'ReactUpdates: must provide a batching strategy');

invariant(
typeof _batchingStrategy.batchedUpdates === 'function',
'ReactUpdates: must provide a batchedUpdates() function');

invariant(
typeof _batchingStrategy.isBatchingUpdates === 'boolean',
'ReactUpdates: must provide an isBatchingUpdates boolean attribute');

batchingStrategy = _batchingStrategy;}};



var ReactUpdates={






ReactReconcileTransaction:null,

batchedUpdates:batchedUpdates,
enqueueUpdate:enqueueUpdate,
flushBatchedUpdates:flushBatchedUpdates,
injection:ReactUpdatesInjection,
asap:asap};


module.exports = ReactUpdates;});
__d('CallbackQueue',["PooledClass","Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var invariant=require('invariant');












function CallbackQueue(){
this._callbacks = null;
this._contexts = null;}


assign(CallbackQueue.prototype,{








enqueue:function(callback,context){
this._callbacks = this._callbacks || [];
this._contexts = this._contexts || [];
this._callbacks.push(callback);
this._contexts.push(context);},








notifyAll:function(){
var callbacks=this._callbacks;
var contexts=this._contexts;
if(callbacks){
invariant(
callbacks.length === contexts.length,
'Mismatched list of contexts in callback queue');

this._callbacks = null;
this._contexts = null;
for(var i=0,l=callbacks.length;i < l;i++) {
callbacks[i].call(contexts[i]);}

callbacks.length = 0;
contexts.length = 0;}},








reset:function(){
this._callbacks = null;
this._contexts = null;},





destructor:function(){
this.reset();}});




PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;});
__d('ReactPerf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var ReactPerf={




enableMeasure:false,





storedMeasure:_noMeasure,






measureMethods:function(object,objectName,methodNames){
if(__DEV__){
for(var key in methodNames) {
if(!methodNames.hasOwnProperty(key)){
continue;}

object[key] = ReactPerf.measure(
objectName,
methodNames[key],
object[key]);}}},













measure:function(objName,fnName,func){
if(__DEV__){
var measuredFunc=null;
var wrapper=function(){
if(ReactPerf.enableMeasure){
if(!measuredFunc){
measuredFunc = ReactPerf.storedMeasure(objName,fnName,func);}

return measuredFunc.apply(this,arguments);}

return func.apply(this,arguments);};

wrapper.displayName = objName + '_' + fnName;
return wrapper;}

return func;},


injection:{



injectMeasure:function(measure){
ReactPerf.storedMeasure = measure;}}};












function _noMeasure(objName,fnName,func){
return func;}


module.exports = ReactPerf;});
__d('ReactReconciler',["ReactRef","ReactElementValidator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactRef=require('ReactRef');
var ReactElementValidator=require('ReactElementValidator');





function attachRefs(){
ReactRef.attachRefs(this,this._currentElement);}


var ReactReconciler={











mountComponent:function(internalInstance,rootID,transaction,context){
var markup=internalInstance.mountComponent(rootID,transaction,context);
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
internalInstance._currentElement);}


transaction.getReactMountReady().enqueue(attachRefs,internalInstance);
return markup;},








unmountComponent:function(internalInstance){
ReactRef.detachRefs(internalInstance,internalInstance._currentElement);
internalInstance.unmountComponent();},











receiveComponent:function(
internalInstance,nextElement,transaction,context)
{
var prevElement=internalInstance._currentElement;

if(nextElement === prevElement && nextElement._owner != null){







return;}


if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


var refsChanged=ReactRef.shouldUpdateRefs(
prevElement,
nextElement);


if(refsChanged){
ReactRef.detachRefs(internalInstance,prevElement);}


internalInstance.receiveComponent(nextElement,transaction,context);

if(refsChanged){
transaction.getReactMountReady().enqueue(attachRefs,internalInstance);}},










performUpdateIfNecessary:function(
internalInstance,
transaction)
{
internalInstance.performUpdateIfNecessary(transaction);}};




module.exports = ReactReconciler;});
__d('ReactRef',["ReactOwner"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactOwner=require('ReactOwner');

var ReactRef={};

function attachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(component.getPublicInstance());}else 
{

ReactOwner.addComponentAsRefTo(component,ref,owner);}}



function detachRef(ref,component,owner){
if(typeof ref === 'function'){
ref(null);}else 
{

ReactOwner.removeComponentAsRefFrom(component,ref,owner);}}



ReactRef.attachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
attachRef(ref,instance,element._owner);}};



ReactRef.shouldUpdateRefs = function(prevElement,nextElement){












return (
nextElement._owner !== prevElement._owner || 
nextElement.ref !== prevElement.ref);};



ReactRef.detachRefs = function(instance,element){
var ref=element.ref;
if(ref != null){
detachRef(ref,instance,element._owner);}};



module.exports = ReactRef;});
__d('ReactOwner',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');































var ReactOwner={






isValidOwner:function(object){
return !!(
object && 
typeof object.attachRef === 'function' && 
typeof object.detachRef === 'function');},












addComponentAsRefTo:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to add a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');

owner.attachRef(ref,component);},











removeComponentAsRefFrom:function(component,ref,owner){
invariant(
ReactOwner.isValidOwner(owner),
'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' + 
'usually means that you\'re trying to remove a ref to a component that ' + 
'doesn\'t have an owner (that is, was not created inside of another ' + 
'component\'s `render` method). Try rendering this component inside of ' + 
'a new top-level component which will hold the ref.');



if(owner.getPublicInstance().refs[ref] === component.getPublicInstance()){
owner.detachRef(ref);}}};





module.exports = ReactOwner;});
__d('ReactElementValidator',["ReactElement","ReactFragment","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactCurrentOwner","ReactNativeComponent","getIteratorFn","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactNativeComponent=require('ReactNativeComponent');

var getIteratorFn=require('getIteratorFn');
var invariant=require('invariant');
var warning=require('warning');

function getDeclarationErrorAddendum(){
if(ReactCurrentOwner.current){
var name=ReactCurrentOwner.current.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}







var ownerHasKeyUseWarning={};

var loggedTypeFailures={};

var NUMERIC_PROPERTY_REGEX=/^\d+$/;







function getName(instance){
var publicInstance=instance && instance.getPublicInstance();
if(!publicInstance){
return undefined;}

var constructor=publicInstance.constructor;
if(!constructor){
return undefined;}

return constructor.displayName || constructor.name || undefined;}








function getCurrentOwnerDisplayName(){
var current=ReactCurrentOwner.current;
return (
current && getName(current) || undefined);}













function validateExplicitKey(element,parentType){
if(element._store.validated || element.key != null){
return;}

element._store.validated = true;

warnAndMonitorForKeyUse(
'Each child in an array or iterator should have a unique "key" prop.',
element,
parentType);}












function validatePropertyKey(name,element,parentType){
if(!NUMERIC_PROPERTY_REGEX.test(name)){
return;}

warnAndMonitorForKeyUse(
'Child objects should have non-numeric keys so ordering is preserved.',
element,
parentType);}











function warnAndMonitorForKeyUse(message,element,parentType){
var ownerName=getCurrentOwnerDisplayName();
var parentName=typeof parentType === 'string'?
parentType:parentType.displayName || parentType.name;

var useName=ownerName || parentName;
var memoizer=ownerHasKeyUseWarning[message] || (
ownerHasKeyUseWarning[message] = {});

if(memoizer.hasOwnProperty(useName)){
return;}

memoizer[useName] = true;

var parentOrOwnerAddendum=
ownerName?' Check the render method of ' + ownerName + '.':
parentName?' Check the React.render call using <' + parentName + '>.':
'';




var childOwnerAddendum='';
if(element && 
element._owner && 
element._owner !== ReactCurrentOwner.current){

var childOwnerName=getName(element._owner);

childOwnerAddendum = ' It was passed a child from ' + childOwnerName + '.';}


warning(
false,
message + '%s%s See http://fb.me/react-warning-keys for more information.',
parentOrOwnerAddendum,
childOwnerAddendum);}












function validateChildKeys(node,parentType){
if(Array.isArray(node)){
for(var i=0;i < node.length;i++) {
var child=node[i];
if(ReactElement.isValidElement(child)){
validateExplicitKey(child,parentType);}}}else 


if(ReactElement.isValidElement(node)){

node._store.validated = true;}else 
if(node){
var iteratorFn=getIteratorFn(node);

if(iteratorFn){
if(iteratorFn !== node.entries){
var iterator=iteratorFn.call(node);
var step;
while(!(step = iterator.next()).done) {
if(ReactElement.isValidElement(step.value)){
validateExplicitKey(step.value,parentType);}}}}else 



if(typeof node === 'object'){
var fragment=ReactFragment.extractIfFragment(node);
for(var key in fragment) {
if(fragment.hasOwnProperty(key)){
validatePropertyKey(key,fragment[key],parentType);}}}}}















function checkPropTypes(componentName,propTypes,props,location){
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;



try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually from ' + 
'React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error && !(error.message in loggedTypeFailures)){


loggedTypeFailures[error.message] = true;

var addendum=getDeclarationErrorAddendum(this);
warning(false,'Failed propType: %s%s',error.message,addendum);}}}}





var warnedPropsMutations={};







function warnForPropsMutation(propName,element){
var type=element.type;
var elementName=typeof type === 'string'?type:type.displayName;
var ownerName=element._owner?
element._owner.getPublicInstance().constructor.displayName:null;

var warningKey=propName + '|' + elementName + '|' + ownerName;
if(warnedPropsMutations.hasOwnProperty(warningKey)){
return;}

warnedPropsMutations[warningKey] = true;

var elementInfo='';
if(elementName){
elementInfo = ' <' + elementName + ' />';}

var ownerInfo='';
if(ownerName){
ownerInfo = ' The element was created by ' + ownerName + '.';}


warning(
false,
'Don\'t set .props.%s of the React component%s. Instead, specify the ' + 
'correct value when initially creating the element or use ' + 
'React.cloneElement to make a new element with updated props.%s',
propName,
elementInfo,
ownerInfo);}




function is(a,b){
if(a !== a){

return b !== b;}

if(a === 0 && b === 0){

return 1 / a === 1 / b;}

return a === b;}










function checkAndWarnForMutatedProps(element){
if(!element._store){


return;}


var originalProps=element._store.originalProps;
var props=element.props;

for(var propName in props) {
if(props.hasOwnProperty(propName)){
if(!originalProps.hasOwnProperty(propName) || 
!is(originalProps[propName],props[propName])){
warnForPropsMutation(propName,element);


originalProps[propName] = props[propName];}}}}











function validatePropTypes(element){
if(element.type == null){

return;}





var componentClass=ReactNativeComponent.getComponentClassForElement(
element);

var name=componentClass.displayName || componentClass.name;
if(componentClass.propTypes){
checkPropTypes(
name,
componentClass.propTypes,
element.props,
ReactPropTypeLocations.prop);}


if(typeof componentClass.getDefaultProps === 'function'){
warning(
componentClass.getDefaultProps.isReactClassApproved,
'getDefaultProps is only used on classic React.createClass ' + 
'definitions. Use a static property named `defaultProps` instead.');}}




var ReactElementValidator={

checkAndWarnForMutatedProps:checkAndWarnForMutatedProps,

createElement:function(type,props,children){


warning(
type != null,
'React.createElement: type should not be null or undefined. It should ' + 
'be a string (for DOM elements) or a ReactClass (for composite ' + 
'components).');


var element=ReactElement.createElement.apply(this,arguments);



if(element == null){
return element;}


for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],type);}


validatePropTypes(element);

return element;},


createFactory:function(type){
var validatedFactory=ReactElementValidator.createElement.bind(
null,
type);


validatedFactory.type = type;

if(__DEV__){
try{
Object.defineProperty(
validatedFactory,
'type',
{
enumerable:false,
get:function(){
warning(
false,
'Factory.type is deprecated. Access the class directly ' + 
'before passing it to createFactory.');

Object.defineProperty(this,'type',{
value:type});

return type;}});}



catch(x) {}}





return validatedFactory;},


cloneElement:function(element,props,children){
var newElement=ReactElement.cloneElement.apply(this,arguments);
for(var i=2;i < arguments.length;i++) {
validateChildKeys(arguments[i],newElement.type);}

validatePropTypes(newElement);
return newElement;}};




module.exports = ReactElementValidator;});
__d('ReactPropTypeLocations',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var ReactPropTypeLocations=keyMirror({
prop:null,
context:null,
childContext:null});


module.exports = ReactPropTypeLocations;});
__d('keyMirror',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');



















var keyMirror=function(obj){
var ret={};
var key;
invariant(
obj instanceof Object && !Array.isArray(obj),
'keyMirror(...): Argument must be an object.');

for(key in obj) {
if(!obj.hasOwnProperty(key)){
continue;}

ret[key] = key;}

return ret;};


module.exports = keyMirror;});
__d('ReactPropTypeLocationNames',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames={};

if(__DEV__){
ReactPropTypeLocationNames = {
prop:'prop',
context:'context',
childContext:'child context'};}



module.exports = ReactPropTypeLocationNames;});
__d('ReactNativeComponent',["Object.assign","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var invariant=require('invariant');

var autoGenerateWrapperClass=null;
var genericComponentClass=null;

var tagToComponentClass={};
var textComponentClass=null;

var ReactNativeComponentInjection={


injectGenericComponentClass:function(componentClass){
genericComponentClass = componentClass;},



injectTextComponentClass:function(componentClass){
textComponentClass = componentClass;},



injectComponentClasses:function(componentClasses){
assign(tagToComponentClass,componentClasses);},



injectAutoWrapper:function(wrapperFactory){
autoGenerateWrapperClass = wrapperFactory;}};









function getComponentClassForElement(element){
if(typeof element.type === 'function'){
return element.type;}

var tag=element.type;
var componentClass=tagToComponentClass[tag];
if(componentClass == null){
tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);}

return componentClass;}








function createInternalComponent(element){
invariant(
genericComponentClass,
'There is no registered component for the tag %s',
element.type);

return new genericComponentClass(element.type,element.props);}






function createInstanceForText(text){
return new textComponentClass(text);}






function isTextComponent(component){
return component instanceof textComponentClass;}


var ReactNativeComponent={
getComponentClassForElement:getComponentClassForElement,
createInternalComponent:createInternalComponent,
createInstanceForText:createInstanceForText,
isTextComponent:isTextComponent,
injection:ReactNativeComponentInjection};


module.exports = ReactNativeComponent;});
__d('Transaction',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');






























































var Mixin={







reinitializeTransaction:function(){
this.transactionWrappers = this.getTransactionWrappers();
if(!this.wrapperInitData){
this.wrapperInitData = [];}else 
{
this.wrapperInitData.length = 0;}

this._isInTransaction = false;},


_isInTransaction:false,





getTransactionWrappers:null,

isInTransaction:function(){
return !!this._isInTransaction;},













perform:function(method,scope,a,b,c,d,e,f){
invariant(
!this.isInTransaction(),
'Transaction.perform(...): Cannot initialize a transaction when there ' + 
'is already an outstanding transaction.');

var errorThrown;
var ret;
try{
this._isInTransaction = true;




errorThrown = true;
this.initializeAll(0);
ret = method.call(scope,a,b,c,d,e,f);
errorThrown = false;}finally 
{
try{
if(errorThrown){


try{
this.closeAll(0);}
catch(err) {}}else 

{


this.closeAll(0);}}finally 

{
this._isInTransaction = false;}}


return ret;},


initializeAll:function(startIndex){
var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
try{




this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
this.wrapperInitData[i] = wrapper.initialize?
wrapper.initialize.call(this):
null;}finally 
{
if(this.wrapperInitData[i] === Transaction.OBSERVED_ERROR){



try{
this.initializeAll(i + 1);}
catch(err) {}}}}},












closeAll:function(startIndex){
invariant(
this.isInTransaction(),
'Transaction.closeAll(): Cannot close transaction when none are open.');

var transactionWrappers=this.transactionWrappers;
for(var i=startIndex;i < transactionWrappers.length;i++) {
var wrapper=transactionWrappers[i];
var initData=this.wrapperInitData[i];
var errorThrown;
try{




errorThrown = true;
if(initData !== Transaction.OBSERVED_ERROR && wrapper.close){
wrapper.close.call(this,initData);}

errorThrown = false;}finally 
{
if(errorThrown){



try{
this.closeAll(i + 1);}
catch(e) {}}}}




this.wrapperInitData.length = 0;}};



var Transaction={

Mixin:Mixin,




OBSERVED_ERROR:{}};



module.exports = Transaction;});
__d('ReactErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ReactErrorUtils={









guard:function(func,name){
return func;}};



module.exports = ReactErrorUtils;});
__d('keyOf',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




















keyOf=function(oneKeyObj){
var key;
for(key in oneKeyObj) {
if(!oneKeyObj.hasOwnProperty(key)){
continue;}

return key;}

return null;};



module.exports = keyOf;});
__d('ReactNativeDefaultInjection',["InitializeJavaScriptAppEngine","EventPluginHub","EventPluginUtils","IOSDefaultEventPluginOrder","IOSNativeBridgeEventPlugin","NodeHandle","ReactComponentEnvironment","ReactDefaultBatchingStrategy","ReactEmptyComponent","ReactInstanceHandles","ReactNativeComponentEnvironment","ReactNativeGlobalInteractionHandler","ReactNativeGlobalResponderHandler","ReactNativeMount","ReactNativeTextComponent","ReactNativeComponent","ReactUpdates","ResponderEventPlugin","UniversalWorkerNodeHandle","createReactNativeComponentClass","invariant","RCTEventEmitter","RCTLog","RCTJSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















require('InitializeJavaScriptAppEngine');
var EventPluginHub=require('EventPluginHub');
var EventPluginUtils=require('EventPluginUtils');
var IOSDefaultEventPluginOrder=require('IOSDefaultEventPluginOrder');
var IOSNativeBridgeEventPlugin=require('IOSNativeBridgeEventPlugin');
var NodeHandle=require('NodeHandle');
var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactDefaultBatchingStrategy=require('ReactDefaultBatchingStrategy');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactNativeComponentEnvironment=require('ReactNativeComponentEnvironment');
var ReactNativeGlobalInteractionHandler=require('ReactNativeGlobalInteractionHandler');
var ReactNativeGlobalResponderHandler=require('ReactNativeGlobalResponderHandler');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTextComponent=require('ReactNativeTextComponent');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactUpdates=require('ReactUpdates');
var ResponderEventPlugin=require('ResponderEventPlugin');
var UniversalWorkerNodeHandle=require('UniversalWorkerNodeHandle');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var invariant=require('invariant');


require('RCTEventEmitter');
require('RCTLog');
require('RCTJSTimers');

function inject(){



EventPluginHub.injection.injectEventPluginOrder(IOSDefaultEventPluginOrder);
EventPluginHub.injection.injectInstanceHandle(ReactInstanceHandles);

ResponderEventPlugin.injection.injectGlobalResponderHandler(
ReactNativeGlobalResponderHandler);


ResponderEventPlugin.injection.injectGlobalInteractionHandler(
ReactNativeGlobalInteractionHandler);






EventPluginHub.injection.injectEventPluginsByName({
'ResponderEventPlugin':ResponderEventPlugin,
'IOSNativeBridgeEventPlugin':IOSNativeBridgeEventPlugin});


ReactUpdates.injection.injectReconcileTransaction(
ReactNativeComponentEnvironment.ReactReconcileTransaction);


ReactUpdates.injection.injectBatchingStrategy(
ReactDefaultBatchingStrategy);


ReactComponentEnvironment.injection.injectEnvironment(
ReactNativeComponentEnvironment);



var RCTView=createReactNativeComponentClass({
validAttributes:{},
uiViewClassName:'RCTView'});

ReactEmptyComponent.injection.injectEmptyComponent(RCTView);

EventPluginUtils.injection.injectMount(ReactNativeMount);

ReactNativeComponent.injection.injectTextComponentClass(
ReactNativeTextComponent);

ReactNativeComponent.injection.injectAutoWrapper(function(tag){

var info='';
if(typeof tag === 'string' && /^[a-z]/.test(tag)){
info += ' Each component name should start with an uppercase letter.';}

invariant(false,'Expected a component class, got %s.%s',tag,info);});


NodeHandle.injection.injectImplementation(UniversalWorkerNodeHandle);}


module.exports = {
inject:inject};});
__d('InitializeJavaScriptAppEngine',["RCTDeviceEventEmitter","ExceptionsManager","ErrorUtils","ExceptionsManager","Platform","JSTimers","NativeModules","Promise","XMLHttpRequest","fetch","Geolocation","WebSocket"],function(global, require, requireDynamic, requireLazy, module, exports) {  require(
























'RCTDeviceEventEmitter');

if(typeof GLOBAL === 'undefined'){
GLOBAL = this;}


if(typeof window === 'undefined'){
window = GLOBAL;}


function handleError(e,isFatal){
try{
require('ExceptionsManager').handleException(e,isFatal);}
catch(ee) {
console.log('Failed to print error: ',ee.message);}}



function setUpRedBoxErrorHandler(){
var ErrorUtils=require('ErrorUtils');
ErrorUtils.setGlobalHandler(handleError);}


function setUpRedBoxConsoleErrorHandler(){

var ExceptionsManager=require('ExceptionsManager');
var Platform=require('Platform');

if(__DEV__ && Platform.OS === 'ios'){
ExceptionsManager.installConsoleErrorReporter();}}










function setUpTimers(){
var JSTimers=require('JSTimers');
GLOBAL.setTimeout = JSTimers.setTimeout;
GLOBAL.setInterval = JSTimers.setInterval;
GLOBAL.setImmediate = JSTimers.setImmediate;
GLOBAL.clearTimeout = JSTimers.clearTimeout;
GLOBAL.clearInterval = JSTimers.clearInterval;
GLOBAL.clearImmediate = JSTimers.clearImmediate;
GLOBAL.cancelAnimationFrame = JSTimers.clearInterval;
GLOBAL.requestAnimationFrame = function(cb){

return JSTimers.requestAnimationFrame(cb);};}



function setUpAlert(){
var RCTAlertManager=require('NativeModules').AlertManager;
if(!GLOBAL.alert){
GLOBAL.alert = function(text){
var alertOpts={
title:'Alert',
message:'' + text,
buttons:[{'cancel':'Okay'}]};

RCTAlertManager.alertWithArgs(alertOpts,null);};}}




function setUpPromise(){


GLOBAL.Promise = require('Promise');}


function setUpXHR(){


GLOBAL.XMLHttpRequest = require('XMLHttpRequest');

var fetchPolyfill=require('fetch');
GLOBAL.fetch = fetchPolyfill.fetch;
GLOBAL.Headers = fetchPolyfill.Headers;
GLOBAL.Request = fetchPolyfill.Request;
GLOBAL.Response = fetchPolyfill.Response;}


function setUpGeolocation(){
GLOBAL.navigator = GLOBAL.navigator || {};
GLOBAL.navigator.geolocation = require('Geolocation');}


function setUpWebSockets(){
GLOBAL.WebSocket = require('WebSocket');}


function setupProfile(){
console.profile = console.profile || GLOBAL.consoleProfile || function(){};
console.profileEnd = console.profileEnd || GLOBAL.consoleProfileEnd || function(){};}


setUpRedBoxErrorHandler();
setUpTimers();
setUpAlert();
setUpPromise();
setUpXHR();
setUpRedBoxConsoleErrorHandler();
setUpGeolocation();
setUpWebSockets();
setupProfile();});
__d('RCTDeviceEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTDeviceEventEmitter=new EventEmitter();

module.exports = RCTDeviceEventEmitter;});
__d('EventEmitter',["EmitterSubscription","ErrorUtils","EventSubscriptionVendor","emptyFunction","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var EmitterSubscription=require('EmitterSubscription');
var ErrorUtils=require('ErrorUtils');
var EventSubscriptionVendor=require('EventSubscriptionVendor');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');var 














EventEmitter=(function(){



function EventEmitter(){_classCallCheck(this,EventEmitter);
this._subscriber = new EventSubscriptionVendor();}_createClass(EventEmitter,[{key:'addListener',value:
















function addListener(
eventType,listener,context){
return this._subscriber.addSubscription(
eventType,
new EmitterSubscription(this._subscriber,listener,context));}},{key:'once',value:












function once(eventType,listener,context){
var emitter=this;
return this.addListener(eventType,function(){
emitter.removeCurrentListener();
listener.apply(context,arguments);});}},{key:'removeAllListeners',value:










function removeAllListeners(eventType){
this._subscriber.removeAllSubscriptions(eventType);}},{key:'removeCurrentListener',value:























function removeCurrentListener(){
invariant(
!!this._currentSubscription,
'Not in an emitting cycle; there is no current subscription');

this._subscriber.removeSubscription(this._currentSubscription);}},{key:'listeners',value:









function listeners(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
return subscriptions?
subscriptions.filter(emptyFunction.thatReturnsTrue).map(
function(subscription){
return subscription.listener;}):

[];}},{key:'emit',value:
















function emit(eventType){
var subscriptions=this._subscriber.getSubscriptionsForType(eventType);
if(subscriptions){
var keys=Object.keys(subscriptions);
for(var ii=0;ii < keys.length;ii++) {
var key=keys[ii];
var subscription=subscriptions[key];


if(subscription){
this._currentSubscription = subscription;

ErrorUtils.applyWithGuard(
subscription.listener,
subscription.context,
Array.prototype.slice.call(arguments,1),
null,
'EventEmitter:' + eventType);}}



this._currentSubscription = null;}}}]);return EventEmitter;})();




module.exports = EventEmitter;});
__d('EmitterSubscription',["EventSubscription"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}


















var EventSubscription=require('EventSubscription');var 




EmitterSubscription=(function(_EventSubscription){









function EmitterSubscription(subscriber,listener,context){_classCallCheck(this,EmitterSubscription);
_get(Object.getPrototypeOf(EmitterSubscription.prototype),'constructor',this).call(this,subscriber);
this.listener = listener;
this.context = context;}_inherits(EmitterSubscription,_EventSubscription);return EmitterSubscription;})(EventSubscription);



module.exports = EmitterSubscription;});
__d('EventSubscription',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






















EventSubscription=(function(){





function EventSubscription(subscriber){_classCallCheck(this,EventSubscription);
this.subscriber = subscriber;}_createClass(EventSubscription,[{key:'remove',value:





function remove(){
this.subscriber.removeSubscription(this);}}]);return EventSubscription;})();



module.exports = EventSubscription;});
__d('ErrorUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











GLOBAL=this;













module.exports = GLOBAL.ErrorUtils;});
__d('EventSubscriptionVendor',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 





EventSubscriptionVendor=(function(){

function EventSubscriptionVendor(){_classCallCheck(this,EventSubscriptionVendor);
this._subscriptionsForType = {};
this._currentSubscription = null;}_createClass(EventSubscriptionVendor,[{key:'addSubscription',value:








function addSubscription(
eventType,subscription){
invariant(
subscription.subscriber === this,
'The subscriber of the subscription is incorrectly set.');
if(!this._subscriptionsForType[eventType]){
this._subscriptionsForType[eventType] = [];}

var key=this._subscriptionsForType[eventType].length;
this._subscriptionsForType[eventType].push(subscription);
subscription.eventType = eventType;
subscription.key = key;
return subscription;}},{key:'removeAllSubscriptions',value:








function removeAllSubscriptions(eventType){
if(eventType === undefined){
this._subscriptionsForType = {};}else 
{
delete this._subscriptionsForType[eventType];}}},{key:'removeSubscription',value:









function removeSubscription(subscription){
var eventType=subscription.eventType;
var key=subscription.key;

var subscriptionsForType=this._subscriptionsForType[eventType];
if(subscriptionsForType){
delete subscriptionsForType[key];}}},{key:'getSubscriptionsForType',value:















function getSubscriptionsForType(eventType){
return this._subscriptionsForType[eventType];}}]);return EventSubscriptionVendor;})();



module.exports = EventSubscriptionVendor;});
__d('ExceptionsManager',["NativeModules","loadSourceMap","parseErrorStack","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTExceptionsManager=require('NativeModules').ExceptionsManager;

var loadSourceMap=require('loadSourceMap');
var parseErrorStack=require('parseErrorStack');
var stringifySafe=require('stringifySafe');

var sourceMapPromise;







function reportException(e,isFatal,stack){
if(RCTExceptionsManager){
if(!stack){
stack = parseErrorStack(e);}

if(isFatal){
RCTExceptionsManager.reportFatalException(e.message,stack);}else 
{
RCTExceptionsManager.reportSoftException(e.message,stack);}

if(__DEV__){
(sourceMapPromise = sourceMapPromise || loadSourceMap()).
then(function(map){
var prettyStack=parseErrorStack(e,map);
RCTExceptionsManager.updateExceptionMessage(e.message,prettyStack);}).

catch(function(error){


console.warn('Unable to load source map: ' + error.message);});}}}





function handleException(e,isFatal){
var stack=parseErrorStack(e);
var msg=
'Error: ' + e.message + 
'\n stack: \n' + stackToString(stack) + 
'\n URL: ' + e.sourceURL + 
'\n line: ' + e.line + 
'\n message: ' + e.message;
if(console.errorOriginal){
console.errorOriginal(msg);}else 
{
console.error(msg);}

reportException(e,isFatal,stack);}






function installConsoleErrorReporter(){
if(console.reportException){
return;}

console.reportException = reportException;
console.errorOriginal = console.error.bind(console);
console.error = function reactConsoleError(){
console.errorOriginal.apply(null,arguments);
if(!console.reportErrorsAsExceptions){
return;}

var str=Array.prototype.map.call(arguments,stringifySafe).join(', ');
var error=new Error('console.error: ' + str);
error.framesToPop = 1;
reportException(error,false);};

if(console.reportErrorsAsExceptions === undefined){
console.reportErrorsAsExceptions = true;}}



function stackToString(stack){
var maxLength=Math.max.apply(null,stack.map(function(frame){return frame.methodName.length;}));
return stack.map(function(frame){return stackFrameToString(frame,maxLength);}).join('\n');}


function stackFrameToString(stackFrame,maxLength){
var fileNameParts=stackFrame.file.split('/');
var fileName=fileNameParts[fileNameParts.length - 1];

if(fileName.length > 18){
fileName = fileName.substr(0,17) + '…';}


var spaces=fillSpaces(maxLength - stackFrame.methodName.length);
return '  ' + stackFrame.methodName + spaces + '  ' + fileName + ':' + stackFrame.lineNumber;}


function fillSpaces(n){
return new Array(n + 1).join(' ');}


module.exports = {handleException:handleException,installConsoleErrorReporter:installConsoleErrorReporter};});
__d('NativeModules',["BatchedBridge","nativeModulePrefixNormalizer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('BatchedBridge').RemoteModules;

var nativeModulePrefixNormalizer=require('nativeModulePrefixNormalizer');

nativeModulePrefixNormalizer(NativeModules);

module.exports = NativeModules;});
__d('BatchedBridge',["BatchedBridgeFactory","MessageQueue"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var BatchedBridgeFactory=require('BatchedBridgeFactory');
var MessageQueue=require('MessageQueue');










var remoteModulesConfig=__fbBatchedBridgeConfig.remoteModuleConfig;
var localModulesConfig=__fbBatchedBridgeConfig.localModulesConfig;


var BatchedBridge=BatchedBridgeFactory.create(
MessageQueue,
remoteModulesConfig,
localModulesConfig);


BatchedBridge._config = remoteModulesConfig;

module.exports = BatchedBridge;});
__d('BatchedBridgeFactory',["invariant","keyMirror","mapObject","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var mapObject=require('mapObject');
var warning=require('warning');

var slice=Array.prototype.slice;

var MethodTypes=keyMirror({
remote:null,
local:null});





var BatchedBridgeFactory={
MethodTypes:MethodTypes,







_createBridgedModule:function(messageQueue,moduleConfig,moduleName){
var remoteModule=mapObject(moduleConfig.methods,function(methodConfig,memberName){
return methodConfig.type === MethodTypes.local?null:function(){
var lastArg=arguments.length > 0?arguments[arguments.length - 1]:null;
var secondLastArg=arguments.length > 1?arguments[arguments.length - 2]:null;
var hasSuccCB=typeof lastArg === 'function';
var hasErrorCB=typeof secondLastArg === 'function';
hasErrorCB && invariant(
hasSuccCB,
'Cannot have a non-function arg after a function arg.');

var numCBs=(hasSuccCB?1:0) + (hasErrorCB?1:0);
var args=slice.call(arguments,0,arguments.length - numCBs);
var onSucc=hasSuccCB?lastArg:null;
var onFail=hasErrorCB?secondLastArg:null;
return messageQueue.call(moduleName,memberName,args,onFail,onSucc);};});


for(var constName in moduleConfig.constants) {
warning(!remoteModule[constName],'saw constant and method named %s',constName);
remoteModule[constName] = moduleConfig.constants[constName];}

return remoteModule;},



create:function(MessageQueue,modulesConfig,localModulesConfig){
var messageQueue=new MessageQueue(modulesConfig,localModulesConfig);
return {
callFunction:messageQueue.callFunction.bind(messageQueue),
callFunctionReturnFlushedQueue:
messageQueue.callFunctionReturnFlushedQueue.bind(messageQueue),
invokeCallback:messageQueue.invokeCallback.bind(messageQueue),
invokeCallbackAndReturnFlushedQueue:
messageQueue.invokeCallbackAndReturnFlushedQueue.bind(messageQueue),
flushedQueue:messageQueue.flushedQueue.bind(messageQueue),
RemoteModules:mapObject(modulesConfig,this._createBridgedModule.bind(this,messageQueue)),
setLoggingEnabled:messageQueue.setLoggingEnabled.bind(messageQueue),
getLoggedOutgoingItems:messageQueue.getLoggedOutgoingItems.bind(messageQueue),
getLoggedIncomingItems:messageQueue.getLoggedIncomingItems.bind(messageQueue),
replayPreviousLog:messageQueue.replayPreviousLog.bind(messageQueue),
processBatch:messageQueue.processBatch.bind(messageQueue)};}};




module.exports = BatchedBridgeFactory;});
__d('mapObject',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var hasOwnProperty=Object.prototype.hasOwnProperty;























function mapObject(object,callback,context){
if(!object){
return null;}

var result={};
for(var name in object) {
if(hasOwnProperty.call(object,name)){
result[name] = callback.call(context,object[name],name,object);}}


return result;}


module.exports = mapObject;});
__d('MessageQueue',["ErrorUtils","ReactUpdates","invariant","warning","BridgeProfiling","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var ReactUpdates=require('ReactUpdates');

var invariant=require('invariant');
var warning=require('warning');

var BridgeProfiling=require('BridgeProfiling');
var JSTimersExecution=require('JSTimersExecution');

var INTERNAL_ERROR='Error in MessageQueue implementation';


var DEBUG_SPY_MODE=false;
















var requireFunc=require;







var jsCall=function(module,methodName,params){
return module[methodName].apply(module,params);};














var MessageQueue=function(
remoteModulesConfig,
localModulesConfig,
customRequire)
{
this._requireFunc = customRequire || requireFunc;
this._initBookeeping();
this._initNamingMap(remoteModulesConfig,localModulesConfig);};



var REQUEST_MODULE_IDS=0;
var REQUEST_METHOD_IDS=1;
var REQUEST_PARAMSS=2;

var RESPONSE_CBIDS=3;
var RESPONSE_RETURN_VALUES=4;

var applyWithErrorReporter=function(fun,context,args){
try{
return fun.apply(context,args);}
catch(e) {
ErrorUtils.reportFatalError(e);}};

















var guardReturn=function(operation,operationArguments,getReturnValue,context){
if(operation){
applyWithErrorReporter(operation,context,operationArguments);}

if(getReturnValue){
return applyWithErrorReporter(getReturnValue,context,null);}

return null;};
















var createBookkeeping=function(){
return {




GUID:1,
errorCallbackIDForSuccessCallbackID:function(successID){
return successID + 1;},

successCallbackIDForErrorCallbackID:function(errorID){
return errorID - 1;},

allocateCallbackIDs:function(res){
res.successCallbackID = this.GUID++;
res.errorCallbackID = this.GUID++;},

isSuccessCallback:function(id){
return id % 2 === 1;}};};




var MessageQueueMixin={







_initNamingMap:function(
remoteModulesConfig,
localModulesConfig)
{
this._remoteModuleNameToModuleID = {};
this._remoteModuleIDToModuleName = {};

this._remoteModuleNameToMethodNameToID = {};
this._remoteModuleNameToMethodIDToName = {};

this._localModuleNameToModuleID = {};
this._localModuleIDToModuleName = {};

this._localModuleNameToMethodNameToID = {};
this._localModuleNameToMethodIDToName = {};

function fillMappings(
modulesConfig,
moduleNameToModuleID,
moduleIDToModuleName,
moduleNameToMethodNameToID,
moduleNameToMethodIDToName)
{
for(var moduleName in modulesConfig) {
var moduleConfig=modulesConfig[moduleName];
var moduleID=moduleConfig.moduleID;
moduleNameToModuleID[moduleName] = moduleID;
moduleIDToModuleName[moduleID] = moduleName;

moduleNameToMethodNameToID[moduleName] = {};
moduleNameToMethodIDToName[moduleName] = {};
var methods=moduleConfig.methods;
for(var methodName in methods) {
var methodID=methods[methodName].methodID;
moduleNameToMethodNameToID[moduleName][methodName] = 
methodID;
moduleNameToMethodIDToName[moduleName][methodID] = 
methodName;}}}



fillMappings(
remoteModulesConfig,
this._remoteModuleNameToModuleID,
this._remoteModuleIDToModuleName,
this._remoteModuleNameToMethodNameToID,
this._remoteModuleNameToMethodIDToName);


fillMappings(
localModulesConfig,
this._localModuleNameToModuleID,
this._localModuleIDToModuleName,
this._localModuleNameToMethodNameToID,
this._localModuleNameToMethodIDToName);},




_initBookeeping:function(){
this._POOLED_CBIDS = {errorCallbackID:null,successCallbackID:null};
this._bookkeeping = createBookkeeping();






this._threadLocalCallbacksByID = [];
this._threadLocalScopesByID = [];















this._outgoingItems = [
[],
[],
[],

[],

[]];






this._outgoingItemsSwap = [[],[],[],[],[]];},


invokeCallback:function(cbID,args){
return guardReturn(this._invokeCallback,[cbID,args],null,this);},


_invokeCallback:function(cbID,args){
try{
var cb=this._threadLocalCallbacksByID[cbID];
var scope=this._threadLocalScopesByID[cbID];
warning(
cb,
'Cannot find callback with CBID %s. Native module may have invoked ' + 
'both the success callback and the error callback.',
cbID);

if(DEBUG_SPY_MODE){
console.log('N->JS: Callback#' + cbID + '(' + JSON.stringify(args) + ')');}

BridgeProfiling.profile('Callback#' + cbID + '(' + JSON.stringify(args) + ')');
cb.apply(scope,args);
BridgeProfiling.profileEnd();}
catch(ie_requires_catch) {
throw ie_requires_catch;}finally 
{

this._freeResourcesForCallbackID(cbID);}},



invokeCallbackAndReturnFlushedQueue:function(cbID,args){
if(this._enableLogging){
this._loggedIncomingItems.push([new Date().getTime(),cbID,args]);}

return guardReturn(
this._invokeCallback,
[cbID,args],
this._flushedQueueUnguarded,
this);},



callFunction:function(moduleID,methodID,params){
return guardReturn(this._callFunction,[moduleID,methodID,params],null,this);},


_callFunction:function(moduleID,methodID,params){
var moduleName=this._localModuleIDToModuleName[moduleID];

var methodName=this._localModuleNameToMethodIDToName[moduleName][methodID];
if(DEBUG_SPY_MODE){
console.log(
'N->JS: ' + moduleName + '.' + methodName + 
'(' + JSON.stringify(params) + ')');}

BridgeProfiling.profile(moduleName + '.' + methodName + '(' + JSON.stringify(params) + ')');
var ret=jsCall(this._requireFunc(moduleName),methodName,params);
BridgeProfiling.profileEnd();

return ret;},


callFunctionReturnFlushedQueue:function(moduleID,methodID,params){
if(this._enableLogging){
this._loggedIncomingItems.push([new Date().getTime(),moduleID,methodID,params]);}

return guardReturn(
this._callFunction,
[moduleID,methodID,params],
this._flushedQueueUnguarded,
this);},



processBatch:function(batch){
var self=this;
BridgeProfiling.profile('MessageQueue.processBatch()');
var flushedQueue=guardReturn(function(){
ReactUpdates.batchedUpdates(function(){
batch.forEach(function(call){
invariant(
call.module === 'BatchedBridge',
'All the calls should pass through the BatchedBridge module');

if(call.method === 'callFunctionReturnFlushedQueue'){
self._callFunction.apply(self,call.args);}else 
if(call.method === 'invokeCallbackAndReturnFlushedQueue'){
self._invokeCallback.apply(self,call.args);}else 
{
throw new Error(
'Unrecognized method called on BatchedBridge: ' + call.method);}});


BridgeProfiling.profile('React.batchedUpdates()');});

BridgeProfiling.profileEnd();},
null,this._flushedQueueUnguarded,this);
BridgeProfiling.profileEnd();
return flushedQueue;},


setLoggingEnabled:function(enabled){
this._enableLogging = enabled;
this._loggedIncomingItems = [];
this._loggedOutgoingItems = [[],[],[],[],[]];},


getLoggedIncomingItems:function(){
return this._loggedIncomingItems;},


getLoggedOutgoingItems:function(){
return this._loggedOutgoingItems;},


replayPreviousLog:function(previousLog){
this._outgoingItems = previousLog;},







_swapAndReinitializeBuffer:function(){

var currentOutgoingItems=this._outgoingItems;
var nextOutgoingItems=this._outgoingItemsSwap;

nextOutgoingItems[REQUEST_MODULE_IDS].length = 0;
nextOutgoingItems[REQUEST_METHOD_IDS].length = 0;
nextOutgoingItems[REQUEST_PARAMSS].length = 0;


nextOutgoingItems[RESPONSE_CBIDS].length = 0;
nextOutgoingItems[RESPONSE_RETURN_VALUES].length = 0;

this._outgoingItemsSwap = currentOutgoingItems;
this._outgoingItems = nextOutgoingItems;},








_pushRequestToOutgoingItems:function(moduleID,methodName,params){
this._outgoingItems[REQUEST_MODULE_IDS].push(moduleID);
this._outgoingItems[REQUEST_METHOD_IDS].push(methodName);
this._outgoingItems[REQUEST_PARAMSS].push(params);

if(this._enableLogging){
this._loggedOutgoingItems[REQUEST_MODULE_IDS].push(moduleID);
this._loggedOutgoingItems[REQUEST_METHOD_IDS].push(methodName);
this._loggedOutgoingItems[REQUEST_PARAMSS].push(params);}},








_pushResponseToOutgoingItems:function(cbID,returnValue){
this._outgoingItems[RESPONSE_CBIDS].push(cbID);
this._outgoingItems[RESPONSE_RETURN_VALUES].push(returnValue);},


_freeResourcesForCallbackID:function(cbID){
var correspondingCBID=this._bookkeeping.isSuccessCallback(cbID)?
this._bookkeeping.errorCallbackIDForSuccessCallbackID(cbID):
this._bookkeeping.successCallbackIDForErrorCallbackID(cbID);
this._threadLocalCallbacksByID[cbID] = null;
this._threadLocalScopesByID[cbID] = null;
if(this._threadLocalCallbacksByID[correspondingCBID]){
this._threadLocalCallbacksByID[correspondingCBID] = null;
this._threadLocalScopesByID[correspondingCBID] = null;}},











_storeCallbacksInCurrentThread:function(onFail,onSucc,scope){
invariant(onFail || onSucc,INTERNAL_ERROR);
this._bookkeeping.allocateCallbackIDs(this._POOLED_CBIDS);
var succCBID=this._POOLED_CBIDS.successCallbackID;
var errorCBID=this._POOLED_CBIDS.errorCallbackID;
this._threadLocalCallbacksByID[errorCBID] = onFail;
this._threadLocalCallbacksByID[succCBID] = onSucc;
this._threadLocalScopesByID[errorCBID] = scope;
this._threadLocalScopesByID[succCBID] = scope;},




















flushedQueue:function(){
return guardReturn(null,null,this._flushedQueueUnguarded,this);},


_flushedQueueUnguarded:function(){
BridgeProfiling.profile('JSTimersExecution.callImmediates()');

JSTimersExecution.callImmediates();
BridgeProfiling.profileEnd();

var currentOutgoingItems=this._outgoingItems;
this._swapAndReinitializeBuffer();
var ret=currentOutgoingItems[REQUEST_MODULE_IDS].length || 
currentOutgoingItems[RESPONSE_RETURN_VALUES].length?currentOutgoingItems:null;

if(DEBUG_SPY_MODE && ret){
for(var i=0;i < currentOutgoingItems[0].length;i++) {
var moduleName=this._remoteModuleIDToModuleName[currentOutgoingItems[0][i]];
var methodName=
this._remoteModuleNameToMethodIDToName[moduleName][currentOutgoingItems[1][i]];
console.log(
'JS->N: ' + moduleName + '.' + methodName + 
'(' + JSON.stringify(currentOutgoingItems[2][i]) + ')');}}



return ret;},


call:function(moduleName,methodName,params,onFail,onSucc,scope){
invariant(
(!onFail || typeof onFail === 'function') && (
!onSucc || typeof onSucc === 'function'),
'Callbacks must be functions');



if(onSucc){
this._storeCallbacksInCurrentThread(onFail,onSucc,scope,this._POOLED_CBIDS);
onFail && params.push(this._POOLED_CBIDS.errorCallbackID);
params.push(this._POOLED_CBIDS.successCallbackID);}

var moduleID=this._remoteModuleNameToModuleID[moduleName];
if(moduleID === undefined || moduleID === null){
throw new Error('Unrecognized module name:' + moduleName);}

var methodID=this._remoteModuleNameToMethodNameToID[moduleName][methodName];
if(methodID === undefined || moduleID === null){
throw new Error('Unrecognized method name:' + methodName);}

this._pushRequestToOutgoingItems(moduleID,methodID,params);},

__numPendingCallbacksOnlyUseMeInTestCases:function(){
var callbacks=this._threadLocalCallbacksByID;
var total=0;
for(var i=0;i < callbacks.length;i++) {
if(callbacks[i]){
total++;}}


return total;}};



Object.assign(MessageQueue.prototype,MessageQueueMixin);
module.exports = MessageQueue;});
__d('BridgeProfiling',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var GLOBAL=GLOBAL || this;

var BridgeProfiling={
profile:function(profileName,args){
if(GLOBAL.__BridgeProfilingIsProfiling){
if(args){
try{
args = JSON.stringify(args);}
catch(err) {
args = err.message;}}


console.profile(profileName,args);}},



profileEnd:function(){
if(GLOBAL.__BridgeProfilingIsProfiling){
console.profileEnd();}}};




module.exports = BridgeProfiling;});
__d('JSTimersExecution',["invariant","keyMirror","performanceNow","warning","JSTimers","JSTimers"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var invariant=require('invariant');
var keyMirror=require('keyMirror');
var performanceNow=require('performanceNow');
var warning=require('warning');






var JSTimersExecution={
GUID:1,
Type:keyMirror({
setTimeout:null,
setInterval:null,
requestAnimationFrame:null,
setImmediate:null}),



callbacks:[],
types:[],
timerIDs:[],
immediates:[],






callTimer:function(timerID){
warning(timerID <= JSTimersExecution.GUID,'Tried to call timer with ID ' + timerID + ' but no such timer exists');
var timerIndex=JSTimersExecution.timerIDs.indexOf(timerID);





if(timerIndex === -1){
return;}

var type=JSTimersExecution.types[timerIndex];
var callback=JSTimersExecution.callbacks[timerIndex];


if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setImmediate || 
type === JSTimersExecution.Type.requestAnimationFrame){
JSTimersExecution._clearIndex(timerIndex);}


try{
if(type === JSTimersExecution.Type.setTimeout || 
type === JSTimersExecution.Type.setInterval || 
type === JSTimersExecution.Type.setImmediate){
callback();}else 
if(type === JSTimersExecution.Type.requestAnimationFrame){
var currentTime=performanceNow();
callback(currentTime);}else 
{
console.error('Tried to call a callback with invalid type: ' + type);
return;}}

catch(e) {

JSTimersExecution.errors = JSTimersExecution.errors || [];
JSTimersExecution.errors.push(e);}},







callTimers:function(timerIDs){
invariant(timerIDs.length !== 0,'Probably shouldn\'t call "callTimers" with no timerIDs');

JSTimersExecution.errors = null;
timerIDs.forEach(JSTimersExecution.callTimer);

var errors=JSTimersExecution.errors;
if(errors){
var errorCount=errors.length;
if(errorCount > 1){


for(var ii=1;ii < errorCount;ii++) {
require('JSTimers').setTimeout(
(function(error){throw error;}).bind(null,errors[ii]),
0);}}



throw errors[0];}},







callImmediates:function(){
JSTimersExecution.errors = null;
while(JSTimersExecution.immediates.length !== 0) {
JSTimersExecution.callTimer(JSTimersExecution.immediates.shift());}

if(JSTimersExecution.errors){
JSTimersExecution.errors.forEach(function(error){return (
require('JSTimers').setTimeout(function(){throw error;},0));});}},




_clearIndex:function(i){
JSTimersExecution.timerIDs[i] = null;
JSTimersExecution.callbacks[i] = null;
JSTimersExecution.types[i] = null;}};



module.exports = JSTimersExecution;});
__d('performanceNow',["performance"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











performance=require('performance');






if(!performance || !performance.now){
performance = Date;}


var performanceNow=performance.now.bind(performance);

module.exports = performanceNow;});
__d('performance',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";













var ExecutionEnvironment=require("ExecutionEnvironment");

var performance;

if(ExecutionEnvironment.canUseDOM){
performance = 
window.performance || 
window.msPerformance || 
window.webkitPerformance;}


module.exports = performance || {};});
__d('ExecutionEnvironment',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var canUseDOM=!!(
typeof window !== 'undefined' && 
window.document && 
window.document.createElement);








var ExecutionEnvironment={

canUseDOM:canUseDOM,

canUseWorkers:typeof Worker !== 'undefined',

canUseEventListeners:
canUseDOM && !!(window.addEventListener || window.attachEvent),

canUseViewport:canUseDOM && !!window.screen,

isInWorker:!canUseDOM};



module.exports = ExecutionEnvironment;});
__d('JSTimers',["NativeModules","JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var RCTTiming=require('NativeModules').Timing;
var JSTimersExecution=require('JSTimersExecution');






var JSTimers={
Types:JSTimersExecution.Types,





_getFreeIndex:function(){
var freeIndex=JSTimersExecution.timerIDs.indexOf(null);
if(freeIndex === -1){
freeIndex = JSTimersExecution.timerIDs.length;}

return freeIndex;},






setTimeout:function(func,duration){for(var _len=arguments.length,args=Array(_len > 2?_len - 2:0),_key=2;_key < _len;_key++) {args[_key - 2] = arguments[_key];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setTimeout;
RCTTiming.createTimer(newID,duration,Date.now(),false);
return newID;},






setInterval:function(func,duration){for(var _len2=arguments.length,args=Array(_len2 > 2?_len2 - 2:0),_key2=2;_key2 < _len2;_key2++) {args[_key2 - 2] = arguments[_key2];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setInterval;
RCTTiming.createTimer(newID,duration,Date.now(),true);
return newID;},






setImmediate:function(func){for(var _len3=arguments.length,args=Array(_len3 > 1?_len3 - 1:0),_key3=1;_key3 < _len3;_key3++) {args[_key3 - 1] = arguments[_key3];}
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = function(){
return func.apply(undefined,args);};

JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.setImmediate;
JSTimersExecution.immediates.push(newID);
return newID;},





requestAnimationFrame:function(func){
var newID=JSTimersExecution.GUID++;
var freeIndex=JSTimers._getFreeIndex();
JSTimersExecution.timerIDs[freeIndex] = newID;
JSTimersExecution.callbacks[freeIndex] = func;
JSTimersExecution.types[freeIndex] = JSTimersExecution.Type.requestAnimationFrame;
RCTTiming.createTimer(newID,1,Date.now(),false);
return newID;},


clearTimeout:function(timerID){
JSTimers._clearTimerID(timerID);},


clearInterval:function(timerID){
JSTimers._clearTimerID(timerID);},


clearImmediate:function(timerID){
JSTimers._clearTimerID(timerID);
JSTimersExecution.immediates.splice(
JSTimersExecution.immediates.indexOf(timerID),
1);},



cancelAnimationFrame:function(timerID){
JSTimers._clearTimerID(timerID);},


_clearTimerID:function(timerID){


if(timerID == null){
return;}


var index=JSTimersExecution.timerIDs.indexOf(timerID);

if(index !== -1){
JSTimersExecution._clearIndex(index);
if(JSTimersExecution.types[index] !== JSTimersExecution.Type.setImmediate){
RCTTiming.deleteTimer(timerID);}}}};





module.exports = JSTimers;});
__d('nativeModulePrefixNormalizer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













function nativeModulePrefixNormalizer(
modules)
{
Object.keys(modules).forEach(function(moduleName){
var strippedName=moduleName.replace(/^(RCT|RK)/,'');
if(modules['RCT' + strippedName] && modules['RK' + strippedName]){
throw new Error(
'Module cannot be registered as both RCT and RK: ' + moduleName);}


if(strippedName !== moduleName){
modules[strippedName] = modules[moduleName];
delete modules[moduleName];}});}




module.exports = nativeModulePrefixNormalizer;});
__d('loadSourceMap',["Promise","NativeModules","SourceMap","react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Promise=require('Promise');
var NativeModules=require('NativeModules');
var SourceMapConsumer=require('SourceMap').SourceMapConsumer;
var SourceMapURL=require('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url');

var RCTSourceCode=NativeModules.SourceCode;
var RCTDataManager=NativeModules.DataManager;

function loadSourceMap(){
return fetchSourceMap().
then(function(map){return new SourceMapConsumer(map);});}


function fetchSourceMap(){
if(global.RAW_SOURCE_MAP){
return Promise.resolve(global.RAW_SOURCE_MAP);}


if(!RCTSourceCode){
return Promise.reject(new Error('RCTSourceCode module is not available'));}


if(!RCTDataManager){

return Promise.reject(new Error('RCTDataManager module is not available'));}


return new Promise(RCTSourceCode.getScriptText).
then(extractSourceMapURL).
then(function(url){
if(url === null){
return Promise.reject(new Error('No source map URL found. May be running from bundled file.'));}

return Promise.resolve(url);}).

then(fetch).
then(function(response){return response.text();});}


function extractSourceMapURL(_ref){var url=_ref.url;var text=_ref.text;var fullSourceMappingURL=_ref.fullSourceMappingURL;
if(fullSourceMappingURL){
return fullSourceMappingURL;}

var mapURL=SourceMapURL.getFrom(text);
if(!mapURL){
return null;}

var baseURL=url.match(/(.+:\/\/.*?)\//)[1];
return baseURL + mapURL;}


module.exports = loadSourceMap;});
__d('Promise',["setImmediate","promise/setimmediate/es6-extensions","promise/setimmediate/done"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























global.setImmediate = require('setImmediate');
var Promise=require('promise/setimmediate/es6-extensions');
require('promise/setimmediate/done');




Promise.prototype.finally = function(onSettled){
return this.then(onSettled,onSettled);};



module.exports = Promise;});
__d('setImmediate',["ImmediateImplementation"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.
















exports = global.setImmediate || 
require('ImmediateImplementation').setImmediate;});
__d('ImmediateImplementation',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (







































function(global,undefined){
"use strict";

var nextHandle=1;
var tasksByHandle={};
var queueHead={};
var queueTail=queueHead;
var currentlyRunningATask=false;
var doc=global.document;
var setImmediate;

function addFromSetImmediateArguments(args){
var handler=args[0];
args = Array.prototype.slice.call(args,1);
tasksByHandle[nextHandle] = function(){
handler.apply(undefined,args);};

queueTail = queueTail.next = {handle:nextHandle++};
return queueTail.handle;}


function flushQueue(){
var next,task;
while(!currentlyRunningATask && (next = queueHead.next)) {
queueHead = next;
if(task = tasksByHandle[next.handle]){
currentlyRunningATask = true;
try{
task();
currentlyRunningATask = false;}finally 
{
clearImmediate(next.handle);
if(currentlyRunningATask){
currentlyRunningATask = false;






if(queueHead.next){
setImmediate(flushQueue);}}}}}}







function clearImmediate(handle){
delete tasksByHandle[handle];}


function canUsePostMessage(){


if(global.postMessage && !global.importScripts){
var postMessageIsAsynchronous=true;

var onMessage=function(){
postMessageIsAsynchronous = false;
if(global.removeEventListener){
global.removeEventListener("message",onMessage,false);}else 
{
global.detachEvent("onmessage",onMessage);}};



if(global.addEventListener){
global.addEventListener("message",onMessage,false);}else 
if(global.attachEvent){
global.attachEvent("onmessage",onMessage);}else 
{
return false;}


global.postMessage("","*");
return postMessageIsAsynchronous;}}



function installPostMessageImplementation(){


var messagePrefix="setImmediate$" + Math.random() + "$";
var onGlobalMessage=function(event){
if(event.source === global && 
typeof event.data === "string" && 
event.data.indexOf(messagePrefix) === 0){
flushQueue();}};



if(global.addEventListener){
global.addEventListener("message",onGlobalMessage,false);}else 
{
global.attachEvent("onmessage",onGlobalMessage);}


setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
global.postMessage(messagePrefix + handle,"*");
return handle;};}



function installMessageChannelImplementation(){
var channel=new MessageChannel();
channel.port1.onmessage = flushQueue;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);
channel.port2.postMessage(handle);
return handle;};}



function installReadyStateChangeImplementation(){
var html=doc.documentElement;
setImmediate = function(){
var handle=addFromSetImmediateArguments(arguments);


var script=doc.createElement("script");
script.onreadystatechange = function(){
script.onreadystatechange = null;
html.removeChild(script);
script = null;
flushQueue();};

html.appendChild(script);
return handle;};}



function installSetTimeoutImplementation(){
setImmediate = function(){
setTimeout(flushQueue,0);
return addFromSetImmediateArguments(arguments);};}



if(canUsePostMessage()){

installPostMessageImplementation();}else 

if(global.MessageChannel){

installMessageChannelImplementation();}else 

if(doc && "onreadystatechange" in doc.createElement("script")){

installReadyStateChangeImplementation();}else 

{

installSetTimeoutImplementation();}


exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;})(
Function("return this")());});
__d('promise/setimmediate/es6-extensions',["promise/setimmediate/core"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



var Promise=require('promise/setimmediate/core');


module.exports = Promise;



var TRUE=valuePromise(true);
var FALSE=valuePromise(false);
var NULL=valuePromise(null);
var UNDEFINED=valuePromise(undefined);
var ZERO=valuePromise(0);
var EMPTYSTRING=valuePromise('');

function valuePromise(value){
var p=new Promise(Promise._1);
p._41 = 1;
p._86 = value;
return p;}

Promise.resolve = function(value){
if(value instanceof Promise)return value;

if(value === null)return NULL;
if(value === undefined)return UNDEFINED;
if(value === true)return TRUE;
if(value === false)return FALSE;
if(value === 0)return ZERO;
if(value === '')return EMPTYSTRING;

if(typeof value === 'object' || typeof value === 'function'){
try{
var then=value.then;
if(typeof then === 'function'){
return new Promise(then.bind(value));}}

catch(ex) {
return new Promise(function(resolve,reject){
reject(ex);});}}



return valuePromise(value);};


Promise.all = function(arr){
var args=Array.prototype.slice.call(arr);

return new Promise(function(resolve,reject){
if(args.length === 0)return resolve([]);
var remaining=args.length;
function res(i,val){
if(val && (typeof val === 'object' || typeof val === 'function')){
if(val instanceof Promise && val.then === Promise.prototype.then){
while(val._41 === 3) {
val = val._86;}

if(val._41 === 1)return res(i,val._86);
if(val._41 === 2)reject(val._86);
val.then(function(val){
res(i,val);},
reject);
return;}else 
{
var then=val.then;
if(typeof then === 'function'){
var p=new Promise(then.bind(val));
p.then(function(val){
res(i,val);},
reject);
return;}}}



args[i] = val;
if(--remaining === 0){
resolve(args);}}


for(var i=0;i < args.length;i++) {
res(i,args[i]);}});};




Promise.reject = function(value){
return new Promise(function(resolve,reject){
reject(value);});};



Promise.race = function(values){
return new Promise(function(resolve,reject){
values.forEach(function(value){
Promise.resolve(value).then(resolve,reject);});});};






Promise.prototype['catch'] = function(onRejected){
return this.then(null,onRejected);};});
__d('promise/setimmediate/core',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



function noop(){}


















var LAST_ERROR=null;
var IS_ERROR={};
function getThen(obj){
try{
return obj.then;}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



function tryCallOne(fn,a){
try{
return fn(a);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}


function tryCallTwo(fn,a,b){
try{
fn(a,b);}
catch(ex) {
LAST_ERROR = ex;
return IS_ERROR;}}



module.exports = Promise;

function Promise(fn){
if(typeof this !== 'object'){
throw new TypeError('Promises must be constructed via new');}

if(typeof fn !== 'function'){
throw new TypeError('not a function');}

this._41 = 0;
this._86 = null;
this._17 = [];
if(fn === noop)return;
doResolve(fn,this);}

Promise._1 = noop;

Promise.prototype.then = function(onFulfilled,onRejected){
if(this.constructor !== Promise){
return safeThen(this,onFulfilled,onRejected);}

var res=new Promise(noop);
handle(this,new Handler(onFulfilled,onRejected,res));
return res;};


function safeThen(self,onFulfilled,onRejected){
return new self.constructor(function(resolve,reject){
var res=new Promise(noop);
res.then(resolve,reject);
handle(self,new Handler(onFulfilled,onRejected,res));});}

;
function handle(self,deferred){
while(self._41 === 3) {
self = self._86;}

if(self._41 === 0){
self._17.push(deferred);
return;}

setImmediate(function(){
var cb=self._41 === 1?deferred.onFulfilled:deferred.onRejected;
if(cb === null){
if(self._41 === 1){
resolve(deferred.promise,self._86);}else 
{
reject(deferred.promise,self._86);}

return;}

var ret=tryCallOne(cb,self._86);
if(ret === IS_ERROR){
reject(deferred.promise,LAST_ERROR);}else 
{
resolve(deferred.promise,ret);}});}



function resolve(self,newValue){

if(newValue === self){
return reject(
self,
new TypeError('A promise cannot be resolved with itself.'));}


if(
newValue && (
typeof newValue === 'object' || typeof newValue === 'function'))
{
var then=getThen(newValue);
if(then === IS_ERROR){
return reject(self,LAST_ERROR);}

if(
then === self.then && 
newValue instanceof Promise)
{
self._41 = 3;
self._86 = newValue;
finale(self);
return;}else 
if(typeof then === 'function'){
doResolve(then.bind(newValue),self);
return;}}


self._41 = 1;
self._86 = newValue;
finale(self);}


function reject(self,newValue){
self._41 = 2;
self._86 = newValue;
finale(self);}

function finale(self){
for(var i=0;i < self._17.length;i++) {
handle(self,self._17[i]);}

self._17 = null;}


function Handler(onFulfilled,onRejected,promise){
this.onFulfilled = typeof onFulfilled === 'function'?onFulfilled:null;
this.onRejected = typeof onRejected === 'function'?onRejected:null;
this.promise = promise;}








function doResolve(fn,promise){
var done=false;
var res=tryCallTwo(fn,function(value){
if(done)return;
done = true;
resolve(promise,value);},
function(reason){
if(done)return;
done = true;
reject(promise,reason);});

if(!done && res === IS_ERROR){
done = true;
reject(promise,LAST_ERROR);}}});
__d('promise/setimmediate/done',["promise/setimmediate/core"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var Promise=require('promise/setimmediate/core');

module.exports = Promise;
Promise.prototype.done = function(onFulfilled,onRejected){
var self=arguments.length?this.then.apply(this,arguments):this;
self.then(null,function(err){
setTimeout(function(){
throw err;},
0);});};});
__d('SourceMap',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 





















scope={};
wrapper.call(scope);

module.exports = scope.sourceMap;

function wrapper(){














function define(moduleName,deps,payload){
if(typeof moduleName != "string"){
throw new TypeError("Expected string, got: " + moduleName);}


if(arguments.length == 2){
payload = deps;}


if(moduleName in define.modules){
throw new Error("Module already defined: " + moduleName);}

define.modules[moduleName] = payload;}
;




define.modules = {};










function Domain(){
this.modules = {};
this._currentModule = null;}


(function(){
















Domain.prototype.require = function(deps,callback){
if(Array.isArray(deps)){
var params=deps.map(function(dep){
return this.lookup(dep);},
this);
if(callback){
callback.apply(null,params);}

return undefined;}else 

{
return this.lookup(deps);}};



function normalize(path){
var bits=path.split("/");
var i=1;
while(i < bits.length) {
if(bits[i] === ".."){
bits.splice(i - 1,1);}else 
if(bits[i] === "."){
bits.splice(i,1);}else 
{
i++;}}


return bits.join("/");}


function join(a,b){
a = a.trim();
b = b.trim();
if(/^\//.test(b)){
return b;}else 
{
return a.replace(/\/*$/,"/") + b;}}



function dirname(path){
var bits=path.split("/");
bits.pop();
return bits.join("/");}








Domain.prototype.lookup = function(moduleName){
if(/^\./.test(moduleName)){
moduleName = normalize(join(dirname(this._currentModule),moduleName));}


if(moduleName in this.modules){
var module=this.modules[moduleName];
return module;}


if(!(moduleName in define.modules)){
throw new Error("Module not defined: " + moduleName);}


var module=define.modules[moduleName];

if(typeof module == "function"){
var exports={};
var previousModule=this._currentModule;
this._currentModule = moduleName;
module(this.require.bind(this),exports,{id:moduleName,uri:""});
this._currentModule = previousModule;
module = exports;}



this.modules[moduleName] = module;

return module;};})();




define.Domain = Domain;
define.globalDomain = new Domain();
var require=define.globalDomain.require.bind(define.globalDomain);






define("source-map/source-map-generator",["require","exports","module","source-map/base64-vlq","source-map/util","source-map/array-set"],function(require,exports,module){

var base64VLQ=require("./base64-vlq");
var util=require("./util");
var ArraySet=require("./array-set").ArraySet;









function SourceMapGenerator(aArgs){
this._file = util.getArg(aArgs,"file");
this._sourceRoot = util.getArg(aArgs,"sourceRoot",null);
this._sources = new ArraySet();
this._names = new ArraySet();
this._mappings = [];
this._sourcesContents = null;}


SourceMapGenerator.prototype._version = 3;






SourceMapGenerator.fromSourceMap = 
function SourceMapGenerator_fromSourceMap(aSourceMapConsumer){
var sourceRoot=aSourceMapConsumer.sourceRoot;
var generator=new SourceMapGenerator({
file:aSourceMapConsumer.file,
sourceRoot:sourceRoot});

aSourceMapConsumer.eachMapping(function(mapping){
var newMapping={
generated:{
line:mapping.generatedLine,
column:mapping.generatedColumn}};



if(mapping.source){
newMapping.source = mapping.source;
if(sourceRoot){
newMapping.source = util.relative(sourceRoot,newMapping.source);}


newMapping.original = {
line:mapping.originalLine,
column:mapping.originalColumn};


if(mapping.name){
newMapping.name = mapping.name;}}



generator.addMapping(newMapping);});

aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
generator.setSourceContent(sourceFile,content);}});


return generator;};












SourceMapGenerator.prototype.addMapping = 
function SourceMapGenerator_addMapping(aArgs){
var generated=util.getArg(aArgs,"generated");
var original=util.getArg(aArgs,"original",null);
var source=util.getArg(aArgs,"source",null);
var name=util.getArg(aArgs,"name",null);

this._validateMapping(generated,original,source,name);

if(source && !this._sources.has(source)){
this._sources.add(source);}


if(name && !this._names.has(name)){
this._names.add(name);}


this._mappings.push({
generatedLine:generated.line,
generatedColumn:generated.column,
originalLine:original != null && original.line,
originalColumn:original != null && original.column,
source:source,
name:name});};






SourceMapGenerator.prototype.setSourceContent = 
function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){
var source=aSourceFile;
if(this._sourceRoot){
source = util.relative(this._sourceRoot,source);}


if(aSourceContent !== null){


if(!this._sourcesContents){
this._sourcesContents = {};}

this._sourcesContents[util.toSetString(source)] = aSourceContent;}else 
{


delete this._sourcesContents[util.toSetString(source)];
if(Object.keys(this._sourcesContents).length === 0){
this._sourcesContents = null;}}};














SourceMapGenerator.prototype.applySourceMap = 
function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile){

if(!aSourceFile){
aSourceFile = aSourceMapConsumer.file;}

var sourceRoot=this._sourceRoot;

if(sourceRoot){
aSourceFile = util.relative(sourceRoot,aSourceFile);}



var newSources=new ArraySet();
var newNames=new ArraySet();


this._mappings.forEach(function(mapping){
if(mapping.source === aSourceFile && mapping.originalLine){

var original=aSourceMapConsumer.originalPositionFor({
line:mapping.originalLine,
column:mapping.originalColumn});

if(original.source !== null){

if(sourceRoot){
mapping.source = util.relative(sourceRoot,original.source);}else 
{
mapping.source = original.source;}

mapping.originalLine = original.line;
mapping.originalColumn = original.column;
if(original.name !== null && mapping.name !== null){


mapping.name = original.name;}}}




var source=mapping.source;
if(source && !newSources.has(source)){
newSources.add(source);}


var name=mapping.name;
if(name && !newNames.has(name)){
newNames.add(name);}},


this);
this._sources = newSources;
this._names = newNames;


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
if(sourceRoot){
sourceFile = util.relative(sourceRoot,sourceFile);}

this.setSourceContent(sourceFile,content);}},

this);};













SourceMapGenerator.prototype._validateMapping = 
function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,
aName){
if(aGenerated && "line" in aGenerated && "column" in aGenerated && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
!aOriginal && !aSource && !aName){

return;}else 

if(aGenerated && "line" in aGenerated && "column" in aGenerated && 
aOriginal && "line" in aOriginal && "column" in aOriginal && 
aGenerated.line > 0 && aGenerated.column >= 0 && 
aOriginal.line > 0 && aOriginal.column >= 0 && 
aSource){

return;}else 

{
throw new Error("Invalid mapping: " + JSON.stringify({
generated:aGenerated,
source:aSource,
orginal:aOriginal,
name:aName}));}};








SourceMapGenerator.prototype._serializeMappings = 
function SourceMapGenerator_serializeMappings(){
var previousGeneratedColumn=0;
var previousGeneratedLine=1;
var previousOriginalColumn=0;
var previousOriginalLine=0;
var previousName=0;
var previousSource=0;
var result="";
var mapping;






this._mappings.sort(util.compareByGeneratedPositions);

for(var i=0,len=this._mappings.length;i < len;i++) {
mapping = this._mappings[i];

if(mapping.generatedLine !== previousGeneratedLine){
previousGeneratedColumn = 0;
while(mapping.generatedLine !== previousGeneratedLine) {
result += ";";
previousGeneratedLine++;}}else 


{
if(i > 0){
if(!util.compareByGeneratedPositions(mapping,this._mappings[i - 1])){
continue;}

result += ",";}}



result += base64VLQ.encode(mapping.generatedColumn - 
previousGeneratedColumn);
previousGeneratedColumn = mapping.generatedColumn;

if(mapping.source){
result += base64VLQ.encode(this._sources.indexOf(mapping.source) - 
previousSource);
previousSource = this._sources.indexOf(mapping.source);


result += base64VLQ.encode(mapping.originalLine - 1 - 
previousOriginalLine);
previousOriginalLine = mapping.originalLine - 1;

result += base64VLQ.encode(mapping.originalColumn - 
previousOriginalColumn);
previousOriginalColumn = mapping.originalColumn;

if(mapping.name){
result += base64VLQ.encode(this._names.indexOf(mapping.name) - 
previousName);
previousName = this._names.indexOf(mapping.name);}}}




return result;};


SourceMapGenerator.prototype._generateSourcesContent = 
function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){
return aSources.map(function(source){
if(!this._sourcesContents){
return null;}

if(aSourceRoot){
source = util.relative(aSourceRoot,source);}

var key=util.toSetString(source);
return Object.prototype.hasOwnProperty.call(this._sourcesContents,
key)?
this._sourcesContents[key]:
null;},
this);};





SourceMapGenerator.prototype.toJSON = 
function SourceMapGenerator_toJSON(){
var map={
version:this._version,
file:this._file,
sources:this._sources.toArray(),
names:this._names.toArray(),
mappings:this._serializeMappings()};

if(this._sourceRoot){
map.sourceRoot = this._sourceRoot;}

if(this._sourcesContents){
map.sourcesContent = this._generateSourcesContent(map.sources,map.sourceRoot);}


return map;};





SourceMapGenerator.prototype.toString = 
function SourceMapGenerator_toString(){
return JSON.stringify(this);};


exports.SourceMapGenerator = SourceMapGenerator;});






































define("source-map/base64-vlq",["require","exports","module","source-map/base64"],function(require,exports,module){

var base64=require("./base64");













var VLQ_BASE_SHIFT=5;


var VLQ_BASE=1 << VLQ_BASE_SHIFT;


var VLQ_BASE_MASK=VLQ_BASE - 1;


var VLQ_CONTINUATION_BIT=VLQ_BASE;







function toVLQSigned(aValue){
return aValue < 0?
(-aValue << 1) + 1:
(aValue << 1) + 0;}








function fromVLQSigned(aValue){
var isNegative=(aValue & 1) === 1;
var shifted=aValue >> 1;
return isNegative?
-shifted:
shifted;}





exports.encode = function base64VLQ_encode(aValue){
var encoded="";
var digit;

var vlq=toVLQSigned(aValue);

do {
digit = vlq & VLQ_BASE_MASK;
vlq >>>= VLQ_BASE_SHIFT;
if(vlq > 0){


digit |= VLQ_CONTINUATION_BIT;}

encoded += base64.encode(digit);}while(
vlq > 0);

return encoded;};






exports.decode = function base64VLQ_decode(aStr){
var i=0;
var strLen=aStr.length;
var result=0;
var shift=0;
var continuation,digit;

do {
if(i >= strLen){
throw new Error("Expected more digits in base 64 VLQ value.");}

digit = base64.decode(aStr.charAt(i++));
continuation = !!(digit & VLQ_CONTINUATION_BIT);
digit &= VLQ_BASE_MASK;
result = result + (digit << shift);
shift += VLQ_BASE_SHIFT;}while(
continuation);

return {
value:fromVLQSigned(result),
rest:aStr.slice(i)};};});










define("source-map/base64",["require","exports","module"],function(require,exports,module){

var charToIntMap={};
var intToCharMap={};

"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".
split("").
forEach(function(ch,index){
charToIntMap[ch] = index;
intToCharMap[index] = ch;});





exports.encode = function base64_encode(aNumber){
if(aNumber in intToCharMap){
return intToCharMap[aNumber];}

throw new TypeError("Must be between 0 and 63: " + aNumber);};





exports.decode = function base64_decode(aChar){
if(aChar in charToIntMap){
return charToIntMap[aChar];}

throw new TypeError("Not a valid base 64 digit: " + aChar);};});









define("source-map/util",["require","exports","module"],function(require,exports,module){











function getArg(aArgs,aName,aDefaultValue){
if(aName in aArgs){
return aArgs[aName];}else 
if(arguments.length === 3){
return aDefaultValue;}else 
{
throw new Error("\"" + aName + "\" is a required argument.");}}


exports.getArg = getArg;

var urlRegexp=/([\w+\-.]+):\/\/((\w+:\w+)@)?([\w.]+)?(:(\d+))?(\S+)?/;
var dataUrlRegexp=/^data:.+\,.+/;

function urlParse(aUrl){
var match=aUrl.match(urlRegexp);
if(!match){
return null;}

return {
scheme:match[1],
auth:match[3],
host:match[4],
port:match[6],
path:match[7]};}


exports.urlParse = urlParse;

function urlGenerate(aParsedUrl){
var url=aParsedUrl.scheme + "://";
if(aParsedUrl.auth){
url += aParsedUrl.auth + "@";}

if(aParsedUrl.host){
url += aParsedUrl.host;}

if(aParsedUrl.port){
url += ":" + aParsedUrl.port;}

if(aParsedUrl.path){
url += aParsedUrl.path;}

return url;}

exports.urlGenerate = urlGenerate;

function join(aRoot,aPath){
var url;

if(aPath.match(urlRegexp) || aPath.match(dataUrlRegexp)){
return aPath;}


if(aPath.charAt(0) === "/" && (url = urlParse(aRoot))){
url.path = aPath;
return urlGenerate(url);}


return aRoot.replace(/\/$/,"") + "/" + aPath;}

exports.join = join;










function toSetString(aStr){
return "$" + aStr;}

exports.toSetString = toSetString;

function fromSetString(aStr){
return aStr.substr(1);}

exports.fromSetString = fromSetString;

function relative(aRoot,aPath){
aRoot = aRoot.replace(/\/$/,"");

var url=urlParse(aRoot);
if(aPath.charAt(0) == "/" && url && url.path == "/"){
return aPath.slice(1);}


return aPath.indexOf(aRoot + "/") === 0?
aPath.substr(aRoot.length + 1):
aPath;}

exports.relative = relative;

function strcmp(aStr1,aStr2){
var s1=aStr1 || "";
var s2=aStr2 || "";
return (s1 > s2) - (s1 < s2);}










function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){
var cmp;

cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp || onlyCompareOriginal){
return cmp;}


cmp = strcmp(mappingA.name,mappingB.name);
if(cmp){
return cmp;}


cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


return mappingA.generatedColumn - mappingB.generatedColumn;}
;
exports.compareByOriginalPositions = compareByOriginalPositions;










function compareByGeneratedPositions(mappingA,mappingB,onlyCompareGenerated){
var cmp;

cmp = mappingA.generatedLine - mappingB.generatedLine;
if(cmp){
return cmp;}


cmp = mappingA.generatedColumn - mappingB.generatedColumn;
if(cmp || onlyCompareGenerated){
return cmp;}


cmp = strcmp(mappingA.source,mappingB.source);
if(cmp){
return cmp;}


cmp = mappingA.originalLine - mappingB.originalLine;
if(cmp){
return cmp;}


cmp = mappingA.originalColumn - mappingB.originalColumn;
if(cmp){
return cmp;}


return strcmp(mappingA.name,mappingB.name);}
;
exports.compareByGeneratedPositions = compareByGeneratedPositions;});








define("source-map/array-set",["require","exports","module","source-map/util"],function(require,exports,module){

var util=require("./util");







function ArraySet(){
this._array = [];
this._set = {};}





ArraySet.fromArray = function ArraySet_fromArray(aArray,aAllowDuplicates){
var set=new ArraySet();
for(var i=0,len=aArray.length;i < len;i++) {
set.add(aArray[i],aAllowDuplicates);}

return set;};







ArraySet.prototype.add = function ArraySet_add(aStr,aAllowDuplicates){
var isDuplicate=this.has(aStr);
var idx=this._array.length;
if(!isDuplicate || aAllowDuplicates){
this._array.push(aStr);}

if(!isDuplicate){
this._set[util.toSetString(aStr)] = idx;}};








ArraySet.prototype.has = function ArraySet_has(aStr){
return Object.prototype.hasOwnProperty.call(this._set,
util.toSetString(aStr));};







ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr){
if(this.has(aStr)){
return this._set[util.toSetString(aStr)];}

throw new Error("\"" + aStr + "\" is not in the set.");};







ArraySet.prototype.at = function ArraySet_at(aIdx){
if(aIdx >= 0 && aIdx < this._array.length){
return this._array[aIdx];}

throw new Error("No element indexed by " + aIdx);};







ArraySet.prototype.toArray = function ArraySet_toArray(){
return this._array.slice();};


exports.ArraySet = ArraySet;});








define("source-map/source-map-consumer",["require","exports","module","source-map/util","source-map/binary-search","source-map/array-set","source-map/base64-vlq"],function(require,exports,module){

var util=require("./util");
var binarySearch=require("./binary-search");
var ArraySet=require("./array-set").ArraySet;
var base64VLQ=require("./base64-vlq");































function SourceMapConsumer(aSourceMap){
var sourceMap=aSourceMap;
if(typeof aSourceMap === "string"){
sourceMap = JSON.parse(aSourceMap.replace(/^\)\]\}'/,""));}


var version=util.getArg(sourceMap,"version");
var sources=util.getArg(sourceMap,"sources");


var names=util.getArg(sourceMap,"names",[]);
var sourceRoot=util.getArg(sourceMap,"sourceRoot",null);
var sourcesContent=util.getArg(sourceMap,"sourcesContent",null);
var mappings=util.getArg(sourceMap,"mappings");
var file=util.getArg(sourceMap,"file",null);



if(version != this._version){
throw new Error("Unsupported version: " + version);}






this._names = ArraySet.fromArray(names,true);
this._sources = ArraySet.fromArray(sources,true);

this.sourceRoot = sourceRoot;
this.sourcesContent = sourcesContent;
this._mappings = mappings;
this.file = file;}









SourceMapConsumer.fromSourceMap = 
function SourceMapConsumer_fromSourceMap(aSourceMap){
var smc=Object.create(SourceMapConsumer.prototype);

smc._names = ArraySet.fromArray(aSourceMap._names.toArray(),true);
smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(),true);
smc.sourceRoot = aSourceMap._sourceRoot;
smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
smc.sourceRoot);
smc.file = aSourceMap._file;

smc.__generatedMappings = aSourceMap._mappings.slice().
sort(util.compareByGeneratedPositions);
smc.__originalMappings = aSourceMap._mappings.slice().
sort(util.compareByOriginalPositions);

return smc;};





SourceMapConsumer.prototype._version = 3;




Object.defineProperty(SourceMapConsumer.prototype,"sources",{
get:function(){
return this._sources.toArray().map(function(s){
return this.sourceRoot?util.join(this.sourceRoot,s):s;},
this);}});

































SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,"_generatedMappings",{
get:function(){
if(!this.__generatedMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__generatedMappings;}});



SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype,"_originalMappings",{
get:function(){
if(!this.__originalMappings){
this.__generatedMappings = [];
this.__originalMappings = [];
this._parseMappings(this._mappings,this.sourceRoot);}


return this.__originalMappings;}});








SourceMapConsumer.prototype._parseMappings = 
function SourceMapConsumer_parseMappings(aStr,aSourceRoot){
var generatedLine=1;
var previousGeneratedColumn=0;
var previousOriginalLine=0;
var previousOriginalColumn=0;
var previousSource=0;
var previousName=0;
var mappingSeparator=/^[,;]/;
var str=aStr;
var mapping;
var temp;

while(str.length > 0) {
if(str.charAt(0) === ";"){
generatedLine++;
str = str.slice(1);
previousGeneratedColumn = 0;}else 

if(str.charAt(0) === ","){
str = str.slice(1);}else 

{
mapping = {};
mapping.generatedLine = generatedLine;


temp = base64VLQ.decode(str);
mapping.generatedColumn = previousGeneratedColumn + temp.value;
previousGeneratedColumn = mapping.generatedColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.source = this._sources.at(previousSource + temp.value);
previousSource += temp.value;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error("Found a source, but no line and column");}



temp = base64VLQ.decode(str);
mapping.originalLine = previousOriginalLine + temp.value;
previousOriginalLine = mapping.originalLine;

mapping.originalLine += 1;
str = temp.rest;
if(str.length === 0 || mappingSeparator.test(str.charAt(0))){
throw new Error("Found a source and line, but no column");}



temp = base64VLQ.decode(str);
mapping.originalColumn = previousOriginalColumn + temp.value;
previousOriginalColumn = mapping.originalColumn;
str = temp.rest;

if(str.length > 0 && !mappingSeparator.test(str.charAt(0))){

temp = base64VLQ.decode(str);
mapping.name = this._names.at(previousName + temp.value);
previousName += temp.value;
str = temp.rest;}}



this.__generatedMappings.push(mapping);
if(typeof mapping.originalLine === "number"){
this.__originalMappings.push(mapping);}}}




this.__originalMappings.sort(util.compareByOriginalPositions);};






SourceMapConsumer.prototype._findMapping = 
function SourceMapConsumer_findMapping(aNeedle,aMappings,aLineName,
aColumnName,aComparator){





if(aNeedle[aLineName] <= 0){
throw new TypeError("Line must be greater than or equal to 1, got " + 
aNeedle[aLineName]);}

if(aNeedle[aColumnName] < 0){
throw new TypeError("Column must be greater than or equal to 0, got " + 
aNeedle[aColumnName]);}


return binarySearch.search(aNeedle,aMappings,aComparator);};

















SourceMapConsumer.prototype.originalPositionFor = 
function SourceMapConsumer_originalPositionFor(aArgs){
var needle={
generatedLine:util.getArg(aArgs,"line"),
generatedColumn:util.getArg(aArgs,"column")};


var mapping=this._findMapping(needle,
this._generatedMappings,
"generatedLine",
"generatedColumn",
util.compareByGeneratedPositions);

if(mapping){
var source=util.getArg(mapping,"source",null);
if(source && this.sourceRoot){
source = util.join(this.sourceRoot,source);}

return {
source:source,
line:util.getArg(mapping,"originalLine",null),
column:util.getArg(mapping,"originalColumn",null),
name:util.getArg(mapping,"name",null)};}



return {
source:null,
line:null,
column:null,
name:null};};








SourceMapConsumer.prototype.sourceContentFor = 
function SourceMapConsumer_sourceContentFor(aSource){
if(!this.sourcesContent){
return null;}


if(this.sourceRoot){
aSource = util.relative(this.sourceRoot,aSource);}


if(this._sources.has(aSource)){
return this.sourcesContent[this._sources.indexOf(aSource)];}


var url;
if(this.sourceRoot && (
url = util.urlParse(this.sourceRoot))){




var fileUriAbsPath=aSource.replace(/^file:\/\//,"");
if(url.scheme == "file" && 
this._sources.has(fileUriAbsPath)){
return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];}


if((!url.path || url.path == "/") && 
this._sources.has("/" + aSource)){
return this.sourcesContent[this._sources.indexOf("/" + aSource)];}}



throw new Error("\"" + aSource + "\" is not in the SourceMap.");};
















SourceMapConsumer.prototype.generatedPositionFor = 
function SourceMapConsumer_generatedPositionFor(aArgs){
var needle={
source:util.getArg(aArgs,"source"),
originalLine:util.getArg(aArgs,"line"),
originalColumn:util.getArg(aArgs,"column")};


if(this.sourceRoot){
needle.source = util.relative(this.sourceRoot,needle.source);}


var mapping=this._findMapping(needle,
this._originalMappings,
"originalLine",
"originalColumn",
util.compareByOriginalPositions);

if(mapping){
return {
line:util.getArg(mapping,"generatedLine",null),
column:util.getArg(mapping,"generatedColumn",null)};}



return {
line:null,
column:null};};



SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

















SourceMapConsumer.prototype.eachMapping = 
function SourceMapConsumer_eachMapping(aCallback,aContext,aOrder){
var context=aContext || null;
var order=aOrder || SourceMapConsumer.GENERATED_ORDER;

var mappings;
switch(order){
case SourceMapConsumer.GENERATED_ORDER:
mappings = this._generatedMappings;
break;
case SourceMapConsumer.ORIGINAL_ORDER:
mappings = this._originalMappings;
break;
default:
throw new Error("Unknown order of iteration.");}


var sourceRoot=this.sourceRoot;
mappings.map(function(mapping){
var source=mapping.source;
if(source && sourceRoot){
source = util.join(sourceRoot,source);}

return {
source:source,
generatedLine:mapping.generatedLine,
generatedColumn:mapping.generatedColumn,
originalLine:mapping.originalLine,
originalColumn:mapping.originalColumn,
name:mapping.name};}).

forEach(aCallback,context);};


exports.SourceMapConsumer = SourceMapConsumer;});








define("source-map/binary-search",["require","exports","module"],function(require,exports,module){










function recursiveSearch(aLow,aHigh,aNeedle,aHaystack,aCompare){










var mid=Math.floor((aHigh - aLow) / 2) + aLow;
var cmp=aCompare(aNeedle,aHaystack[mid],true);
if(cmp === 0){

return aHaystack[mid];}else 

if(cmp > 0){

if(aHigh - mid > 1){

return recursiveSearch(mid,aHigh,aNeedle,aHaystack,aCompare);}



return aHaystack[mid];}else 

{

if(mid - aLow > 1){

return recursiveSearch(aLow,mid,aNeedle,aHaystack,aCompare);}



return aLow < 0?
null:
aHaystack[aLow];}}
















exports.search = function search(aNeedle,aHaystack,aCompare){
return aHaystack.length > 0?
recursiveSearch(-1,aHaystack.length,aNeedle,aHaystack,aCompare):
null;};});









define("source-map/source-node",["require","exports","module","source-map/source-map-generator","source-map/util"],function(require,exports,module){

var SourceMapGenerator=require("./source-map-generator").SourceMapGenerator;
var util=require("./util");













function SourceNode(aLine,aColumn,aSource,aChunks,aName){
this.children = [];
this.sourceContents = {};
this.line = aLine === undefined?null:aLine;
this.column = aColumn === undefined?null:aColumn;
this.source = aSource === undefined?null:aSource;
this.name = aName === undefined?null:aName;
if(aChunks != null)this.add(aChunks);}








SourceNode.fromStringWithSourceMap = 
function SourceNode_fromStringWithSourceMap(aGeneratedCode,aSourceMapConsumer){


var node=new SourceNode();



var remainingLines=aGeneratedCode.split("\n");


var lastGeneratedLine=1,lastGeneratedColumn=0;




var lastMapping=null;

aSourceMapConsumer.eachMapping(function(mapping){
if(lastMapping === null){



while(lastGeneratedLine < mapping.generatedLine) {
node.add(remainingLines.shift() + "\n");
lastGeneratedLine++;}

if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
node.add(nextLine.substr(0,mapping.generatedColumn));
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}}else 

{


if(lastGeneratedLine < mapping.generatedLine){
var code="";

do {
code += remainingLines.shift() + "\n";
lastGeneratedLine++;
lastGeneratedColumn = 0;}while(
lastGeneratedLine < mapping.generatedLine);


if(lastGeneratedColumn < mapping.generatedColumn){
var nextLine=remainingLines[0];
code += nextLine.substr(0,mapping.generatedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn);
lastGeneratedColumn = mapping.generatedColumn;}


addMappingWithCode(lastMapping,code);}else 
{



var nextLine=remainingLines[0];
var code=nextLine.substr(0,mapping.generatedColumn - 
lastGeneratedColumn);
remainingLines[0] = nextLine.substr(mapping.generatedColumn - 
lastGeneratedColumn);
lastGeneratedColumn = mapping.generatedColumn;
addMappingWithCode(lastMapping,code);}}


lastMapping = mapping;},
this);



addMappingWithCode(lastMapping,remainingLines.join("\n"));


aSourceMapConsumer.sources.forEach(function(sourceFile){
var content=aSourceMapConsumer.sourceContentFor(sourceFile);
if(content){
node.setSourceContent(sourceFile,content);}});



return node;

function addMappingWithCode(mapping,code){
if(mapping === null || mapping.source === undefined){
node.add(code);}else 
{
node.add(new SourceNode(mapping.originalLine,
mapping.originalColumn,
mapping.source,
code,
mapping.name));}}};










SourceNode.prototype.add = function SourceNode_add(aChunk){
if(Array.isArray(aChunk)){
aChunk.forEach(function(chunk){
this.add(chunk);},
this);}else 

if(aChunk instanceof SourceNode || typeof aChunk === "string"){
if(aChunk){
this.children.push(aChunk);}}else 


{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};








SourceNode.prototype.prepend = function SourceNode_prepend(aChunk){
if(Array.isArray(aChunk)){
for(var i=aChunk.length - 1;i >= 0;i--) {
this.prepend(aChunk[i]);}}else 


if(aChunk instanceof SourceNode || typeof aChunk === "string"){
this.children.unshift(aChunk);}else 

{
throw new TypeError(
"Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk);}


return this;};









SourceNode.prototype.walk = function SourceNode_walk(aFn){
var chunk;
for(var i=0,len=this.children.length;i < len;i++) {
chunk = this.children[i];
if(chunk instanceof SourceNode){
chunk.walk(aFn);}else 

{
if(chunk !== ""){
aFn(chunk,{source:this.source,
line:this.line,
column:this.column,
name:this.name});}}}};











SourceNode.prototype.join = function SourceNode_join(aSep){
var newChildren;
var i;
var len=this.children.length;
if(len > 0){
newChildren = [];
for(i = 0;i < len - 1;i++) {
newChildren.push(this.children[i]);
newChildren.push(aSep);}

newChildren.push(this.children[i]);
this.children = newChildren;}

return this;};









SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern,aReplacement){
var lastChild=this.children[this.children.length - 1];
if(lastChild instanceof SourceNode){
lastChild.replaceRight(aPattern,aReplacement);}else 

if(typeof lastChild === "string"){
this.children[this.children.length - 1] = lastChild.replace(aPattern,aReplacement);}else 

{
this.children.push("".replace(aPattern,aReplacement));}

return this;};









SourceNode.prototype.setSourceContent = 
function SourceNode_setSourceContent(aSourceFile,aSourceContent){
this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;};








SourceNode.prototype.walkSourceContents = 
function SourceNode_walkSourceContents(aFn){
for(var i=0,len=this.children.length;i < len;i++) {
if(this.children[i] instanceof SourceNode){
this.children[i].walkSourceContents(aFn);}}



var sources=Object.keys(this.sourceContents);
for(var i=0,len=sources.length;i < len;i++) {
aFn(util.fromSetString(sources[i]),this.sourceContents[sources[i]]);}};







SourceNode.prototype.toString = function SourceNode_toString(){
var str="";
this.walk(function(chunk){
str += chunk;});

return str;};






SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs){
var generated={
code:"",
line:1,
column:0};

var map=new SourceMapGenerator(aArgs);
var sourceMappingActive=false;
var lastOriginalSource=null;
var lastOriginalLine=null;
var lastOriginalColumn=null;
var lastOriginalName=null;
this.walk(function(chunk,original){
generated.code += chunk;
if(original.source !== null && 
original.line !== null && 
original.column !== null){
if(lastOriginalSource !== original.source || 
lastOriginalLine !== original.line || 
lastOriginalColumn !== original.column || 
lastOriginalName !== original.name){
map.addMapping({
source:original.source,
original:{
line:original.line,
column:original.column},

generated:{
line:generated.line,
column:generated.column},

name:original.name});}


lastOriginalSource = original.source;
lastOriginalLine = original.line;
lastOriginalColumn = original.column;
lastOriginalName = original.name;
sourceMappingActive = true;}else 
if(sourceMappingActive){
map.addMapping({
generated:{
line:generated.line,
column:generated.column}});


lastOriginalSource = null;
sourceMappingActive = false;}

chunk.split("").forEach(function(ch){
if(ch === "\n"){
generated.line++;
generated.column = 0;}else 
{
generated.column++;}});});



this.walkSourceContents(function(sourceFile,sourceContent){
map.setSourceContent(sourceFile,sourceContent);});


return {code:generated.code,map:map};};


exports.SourceNode = SourceNode;});





this.sourceMap = {
SourceMapConsumer:require("source-map/source-map-consumer").SourceMapConsumer,
SourceMapGenerator:require("source-map/source-map-generator").SourceMapGenerator,
SourceNode:require("source-map/source-node").SourceNode};}});
__d('react-native/Libraries/JavaScriptAppEngine/Initialization/source-map-url',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (














function(){
var define=null;




void (function(root,factory){
if(typeof define === "function" && define.amd){
define(factory);}else 
if(typeof exports === "object"){
module.exports = factory();}else 
{
root.sourceMappingURL = factory();}})(

this,function(){

var innerRegex=/[#@] sourceMappingURL=([^\s'"]*)/;

var regex=RegExp(
"(?:" + 
"/\\*" + 
"(?:\\s*\r?\n(?://)?)?" + 
"(?:" + innerRegex.source + ")" + 
"\\s*" + 
"\\*/" + 
"|" + 
"//(?:" + innerRegex.source + ")" + 
")" + 
"\\s*$");


return {

regex:regex,
_innerRegex:innerRegex,

getFrom:function(code){
var match=code.match(regex);
return match?match[1] || match[2] || "":null;},


existsIn:function(code){
return regex.test(code);},


removeFrom:function(code){
return code.replace(regex,"");},


insertBefore:function(code,string){
var match=code.match(regex);
if(match){
return code.slice(0,match.index) + string + code.slice(match.index);}else 
{
return code + string;}}};});})();});
__d('parseErrorStack',["stacktrace-parser/index"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var stacktraceParser=require('stacktrace-parser/index');

function resolveSourceMaps(sourceMapInstance,stackFrame){
try{
var orig=sourceMapInstance.originalPositionFor({
line:stackFrame.lineNumber,
column:stackFrame.column});

if(orig){
stackFrame.file = orig.source;
stackFrame.lineNumber = orig.line;
stackFrame.column = orig.column;}}

catch(innerEx) {}}



function parseErrorStack(e,sourceMapInstance){
var stack=stacktraceParser.parse(e.stack);

var framesToPop=e.framesToPop || 0;
while(framesToPop--) {
stack.shift();}


if(sourceMapInstance){
stack.forEach(resolveSourceMaps.bind(null,sourceMapInstance));}


return stack;}


module.exports = parseErrorStack;});
__d('stacktrace-parser/index',["stacktrace-parser/lib/stacktrace-parser"],function(global, require, requireDynamic, requireLazy, module, exports) {  module.exports = require('stacktrace-parser/lib/stacktrace-parser');});
__d('stacktrace-parser/lib/stacktrace-parser',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

UNKNOWN_FUNCTION='<unknown>';

var StackTraceParser={




parse:function(stackString){
var chrome=/^\s*at (?:(?:(?:Anonymous function)?|((?:\[object object\])?\S+(?: \[as \S+\])?)) )?\(?((?:file|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
gecko=/^(?:\s*(\S*)(?:\((.*?)\))?@)?((?:\w).*?):(\d+)(?::(\d+))?\s*$/i,
node=/^\s*at (?:((?:\[object object\])?\S+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i,
lines=stackString.split('\n'),
stack=[],
parts,
element;

for(var i=0,j=lines.length;i < j;++i) {
if(parts = gecko.exec(lines[i])){
element = {
'file':parts[3],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[4],
'column':parts[5]?+parts[5]:null};}else 

if(parts = chrome.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

if(parts = node.exec(lines[i])){
element = {
'file':parts[2],
'methodName':parts[1] || UNKNOWN_FUNCTION,
'lineNumber':+parts[3],
'column':parts[4]?+parts[4]:null};}else 

{
continue;}


stack.push(element);}


return stack;}};




module.exports = StackTraceParser;});
__d('stringifySafe',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















function stringifySafe(arg){
var ret;
var type=typeof arg;
if(arg === undefined){
ret = 'undefined';}else 
if(arg === null){
ret = 'null';}else 
if(type === 'string'){
ret = '"' + arg + '"';}else 
if(type === 'function'){
try{
ret = arg.toString();}
catch(e) {
ret = '[function unknown]';}}else 

{


try{
ret = JSON.stringify(arg);}
catch(e) {
if(typeof arg.toString === 'function'){
try{
ret = arg.toString();}
catch(E) {}}}}



return ret || '["' + type + '" failed to stringify]';}


module.exports = stringifySafe;});
__d('Platform',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var Platform={
OS:'ios'};


module.exports = Platform;});
__d('XMLHttpRequest',["NativeModules","XMLHttpRequestBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var RCTDataManager=require('NativeModules').DataManager;

var XMLHttpRequestBase=require('XMLHttpRequestBase');var 

XMLHttpRequest=(function(_XMLHttpRequestBase){function XMLHttpRequest(){_classCallCheck(this,XMLHttpRequest);_get(Object.getPrototypeOf(XMLHttpRequest.prototype),'constructor',this).apply(this,arguments);}_inherits(XMLHttpRequest,_XMLHttpRequestBase);_createClass(XMLHttpRequest,[{key:'sendImpl',value:

function sendImpl(method,url,headers,data){
RCTDataManager.queryData(
'http',
{
method:method,
url:url,
data:data,
headers:headers},

this.callback.bind(this));}},{key:'abortImpl',value:



function abortImpl(){
console.warn(
'XMLHttpRequest: abort() cancels JS callbacks ' + 
'but not native HTTP request.');}}]);return XMLHttpRequest;})(XMLHttpRequestBase);




module.exports = XMLHttpRequest;});
__d('XMLHttpRequestBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 










XMLHttpRequestBase=(function(){





















function XMLHttpRequestBase(){_classCallCheck(this,XMLHttpRequestBase);
this.UNSENT = 0;
this.OPENED = 1;
this.HEADERS_RECEIVED = 2;
this.LOADING = 3;
this.DONE = 4;

this.onreadystatechange = undefined;
this.upload = undefined;
this.readyState = this.UNSENT;
this.responseHeaders = undefined;
this.responseText = undefined;
this.status = 0;

this._method = null;
this._url = null;
this._headers = {};
this._sent = false;
this._aborted = false;}_createClass(XMLHttpRequestBase,[{key:'getAllResponseHeaders',value:


function getAllResponseHeaders(){
if(this.responseHeaders){
var headers=[];
for(var headerName in this.responseHeaders) {
headers.push(headerName + ': ' + this.responseHeaders[headerName]);}

return headers.join('\n');}


return null;}},{key:'getResponseHeader',value:


function getResponseHeader(header){
if(this.responseHeaders){
var value=this.responseHeaders[header.toLowerCase()];
return value !== undefined?value:null;}

return null;}},{key:'setRequestHeader',value:


function setRequestHeader(header,value){
this._headers[header.toLowerCase()] = value;}},{key:'open',value:


function open(method,url,async){

if(this.readyState !== this.UNSENT){
throw new Error('Cannot open, already sending');}

if(async !== undefined && !async){

throw new Error('Synchronous http requests are not supported');}

this._method = method;
this._url = url;
this._aborted = false;
this._setReadyState(this.OPENED);}},{key:'sendImpl',value:


function sendImpl(method,url,headers,data){
throw new Error('Subclass must define sendImpl method');}},{key:'abortImpl',value:


function abortImpl(){
throw new Error('Subclass must define abortImpl method');}},{key:'send',value:


function send(data){
if(this.readyState !== this.OPENED){
throw new Error('Request has not been opened');}

if(this._sent){
throw new Error('Request has already been sent');}

this._sent = true;
this.sendImpl(this._method,this._url,this._headers,data);}},{key:'abort',value:


function abort(){
this.abortImpl();


if(!(this.readyState === this.UNSENT || 
this.readyState === this.OPENED && !this._sent || 
this.readyState === this.DONE)){
this._sent = false;
this._setReadyState(this.DONE);}

if(this.readyState === this.DONE){
this._sendLoad();}

this.readyState = this.UNSENT;
this._aborted = true;}},{key:'callback',value:


function callback(status,responseHeaders,responseText){
if(this._aborted){
return;}

this.status = status;

var lcResponseHeaders={};
for(var header in responseHeaders) {
lcResponseHeaders[header.toLowerCase()] = responseHeaders[header];}

this.responseHeaders = lcResponseHeaders;
this.responseText = responseText;
this._setReadyState(this.DONE);
this._sendLoad();}},{key:'_setReadyState',value:


function _setReadyState(newState){
this.readyState = newState;

var onreadystatechange=this.onreadystatechange;
if(onreadystatechange){


onreadystatechange(null);}}},{key:'_sendLoad',value:



function _sendLoad(){

var onload=this.onload;
if(onload){


onload(null);}}}]);return XMLHttpRequestBase;})();




module.exports = XMLHttpRequestBase;});
__d('fetch',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var self={};

























(function(){
'use strict';

if(self.fetch){
return;}


function normalizeName(name){
if(typeof name !== 'string'){
name = name.toString();}

if(/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)){
throw new TypeError('Invalid character in header field name');}

return name.toLowerCase();}


function normalizeValue(value){
if(typeof value !== 'string'){
value = value.toString();}

return value;}


function Headers(headers){
this.map = {};

var self=this;
if(headers instanceof Headers){
headers.forEach(function(name,values){
values.forEach(function(value){
self.append(name,value);});});}else 



if(headers){
Object.getOwnPropertyNames(headers).forEach(function(name){
self.append(name,headers[name]);});}}




Headers.prototype.append = function(name,value){
name = normalizeName(name);
value = normalizeValue(value);
var list=this.map[name];
if(!list){
list = [];
this.map[name] = list;}

list.push(value);};


Headers.prototype['delete'] = function(name){
delete this.map[normalizeName(name)];};


Headers.prototype.get = function(name){
var values=this.map[normalizeName(name)];
return values?values[0]:null;};


Headers.prototype.getAll = function(name){
return this.map[normalizeName(name)] || [];};


Headers.prototype.has = function(name){
return this.map.hasOwnProperty(normalizeName(name));};


Headers.prototype.set = function(name,value){
this.map[normalizeName(name)] = [normalizeValue(value)];};



Headers.prototype.forEach = function(callback){
var self=this;
Object.getOwnPropertyNames(this.map).forEach(function(name){
callback(name,self.map[name]);});};



function consumed(body){
if(body.bodyUsed){
return Promise.reject(new TypeError('Already read'));}

body.bodyUsed = true;}


function fileReaderReady(reader){
return new Promise(function(resolve,reject){
reader.onload = function(){
resolve(reader.result);};

reader.onerror = function(){
reject(reader.error);};});}




function readBlobAsArrayBuffer(blob){
var reader=new FileReader();
reader.readAsArrayBuffer(blob);
return fileReaderReady(reader);}


function readBlobAsText(blob){
var reader=new FileReader();
reader.readAsText(blob);
return fileReaderReady(reader);}


var support={
blob:'FileReader' in self && 'Blob' in self && (function(){
try{
new Blob();
return true;}
catch(e) {
return false;}})(),


formData:'FormData' in self};


function Body(){
this.bodyUsed = false;


this._initBody = function(body){
this._bodyInit = body;
if(typeof body === 'string'){
this._bodyText = body;}else 
if(support.blob && Blob.prototype.isPrototypeOf(body)){
this._bodyBlob = body;}else 
if(support.formData && FormData.prototype.isPrototypeOf(body)){
this._bodyFormData = body;}else 
if(!body){
this._bodyText = '';}else 
{
throw new Error('unsupported BodyInit type');}};



if(support.blob){
this.blob = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return Promise.resolve(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as blob');}else 
{
return Promise.resolve(new Blob([this._bodyText]));}};



this.arrayBuffer = function(){
return this.blob().then(readBlobAsArrayBuffer);};


this.text = function(){
var rejected=consumed(this);
if(rejected){
return rejected;}


if(this._bodyBlob){
return readBlobAsText(this._bodyBlob);}else 
if(this._bodyFormData){
throw new Error('could not read FormData body as text');}else 
{
return Promise.resolve(this._bodyText);}};}else 


{
this.text = function(){
var rejected=consumed(this);
return rejected?rejected:Promise.resolve(this._bodyText);};}



if(support.formData){
this.formData = function(){
return this.text().then(decode);};}



this.json = function(){
return this.text().then(JSON.parse);};


return this;}



var methods=['DELETE','GET','HEAD','OPTIONS','POST','PUT'];

function normalizeMethod(method){
var upcased=method.toUpperCase();
return methods.indexOf(upcased) > -1?upcased:method;}


function Request(url,options){
options = options || {};
this.url = url;

this.credentials = options.credentials || 'omit';
this.headers = new Headers(options.headers);
this.method = normalizeMethod(options.method || 'GET');
this.mode = options.mode || null;
this.referrer = null;

if((this.method === 'GET' || this.method === 'HEAD') && options.body){
throw new TypeError('Body not allowed for GET or HEAD requests');}

this._initBody(options.body);}


function decode(body){
var form=new FormData();
body.trim().split('&').forEach(function(bytes){
if(bytes){
var split=bytes.split('=');
var name=split.shift().replace(/\+/g,' ');
var value=split.join('=').replace(/\+/g,' ');
form.append(decodeURIComponent(name),decodeURIComponent(value));}});


return form;}


function headers(xhr){
var head=new Headers();
var pairs=xhr.getAllResponseHeaders().trim().split('\n');
pairs.forEach(function(header){
var split=header.trim().split(':');
var key=split.shift().trim();
var value=split.join(':').trim();
head.append(key,value);});

return head;}


Body.call(Request.prototype);

function Response(bodyInit,options){
if(!options){
options = {};}


this._initBody(bodyInit);
this.type = 'default';
this.url = null;
this.status = options.status;
this.ok = this.status >= 200 && this.status < 300;
this.statusText = options.statusText;
this.headers = options.headers instanceof Headers?options.headers:new Headers(options.headers);
this.url = options.url || '';}


Body.call(Response.prototype);

self.Headers = Headers;
self.Request = Request;
self.Response = Response;

self.fetch = function(input,init){

var request;
if(Request.prototype.isPrototypeOf(input) && !init){
request = input;}else 
{
request = new Request(input,init);}


return new Promise(function(resolve,reject){
var xhr=new XMLHttpRequest();
if(request.credentials === 'cors'){
xhr.withCredentials = true;}


function responseURL(){
if('responseURL' in xhr){
return xhr.responseURL;}



if(/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())){
return xhr.getResponseHeader('X-Request-URL');}


return;}


xhr.onload = function(){
var status=xhr.status === 1223?204:xhr.status;
if(status < 100 || status > 599){
reject(new TypeError('Network request failed'));
return;}

var options={
status:status,
statusText:xhr.statusText,
headers:headers(xhr),
url:responseURL()};

var body='response' in xhr?xhr.response:xhr.responseText;
resolve(new Response(body,options));};


xhr.onerror = function(){
reject(new TypeError('Network request failed'));};


xhr.open(request.method,request.url,true);

if('responseType' in xhr && support.blob){
xhr.responseType = 'blob';}


request.headers.forEach(function(name,values){
values.forEach(function(value){
xhr.setRequestHeader(name,value);});});



xhr.send(typeof request._bodyInit === 'undefined'?null:request._bodyInit);});};


self.fetch.polyfill = true;})();




module.exports = self;});
__d('Geolocation',["RCTDeviceEventEmitter","NativeModules","invariant","logError","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLocationObserver=require('NativeModules').LocationObserver;

var invariant=require('invariant');
var logError=require('logError');
var warning=require('warning');

var subscriptions=[];

var updatesEnabled=false;















var Geolocation={





getCurrentPosition:function(
geo_success,
geo_error,
geo_options)
{
invariant(
typeof geo_success === 'function',
'Must provide a valid geo_success callback.');

RCTLocationObserver.getCurrentPosition(
geo_options || {},
geo_success,
geo_error || logError);},







watchPosition:function(success,error,options){
if(!updatesEnabled){
RCTLocationObserver.startObserving(options || {});
updatesEnabled = true;}

var watchID=subscriptions.length;
subscriptions.push([
RCTDeviceEventEmitter.addListener(
'geolocationDidChange',
success),

error?RCTDeviceEventEmitter.addListener(
'geolocationError',
error):
null]);

return watchID;},


clearWatch:function(watchID){
var sub=subscriptions[watchID];
if(!sub){


return;}


sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();
subscriptions[watchID] = undefined;
var noWatchers=true;
for(var ii=0;ii < subscriptions.length;ii++) {
if(subscriptions[ii]){
noWatchers = false;}}


if(noWatchers){
Geolocation.stopObserving();}},



stopObserving:function(){
if(updatesEnabled){
RCTLocationObserver.stopObserving();
updatesEnabled = false;
for(var ii=0;ii < subscriptions.length;ii++) {
var sub=subscriptions[ii];
if(sub){
warning('Called stopObserving with existing subscriptions.');
sub[0].remove();

var sub1=sub[1];sub1 && sub1.remove();}}


subscriptions = [];}}};




module.exports = Geolocation;});
__d('logError',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var logError=function(){
if(arguments.length === 1 && arguments[0] instanceof Error){
var err=arguments[0];
console.error('Error: "' + err.message + '".  Stack:\n' + err.stack);}else 
{
console.error.apply(console,arguments);}};



module.exports = logError;});
__d('WebSocket',["RCTDeviceEventEmitter","NativeModules","WebSocketBase"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTWebSocketManager=require('NativeModules').WebSocketManager;

var WebSocketBase=require('WebSocketBase');

var WebSocketId=0;var 

WebSocket=(function(_WebSocketBase){function WebSocket(){_classCallCheck(this,WebSocket);_get(Object.getPrototypeOf(WebSocket.prototype),'constructor',this).apply(this,arguments);}_inherits(WebSocket,_WebSocketBase);_createClass(WebSocket,[{key:'connectToSocketImpl',value:



function connectToSocketImpl(url){
this._socketId = WebSocketId++;
RCTWebSocketManager.connect(url,this._socketId);
this._registerEvents(this._socketId);}},{key:'closeConnectionImpl',value:


function closeConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
RCTWebSocketManager.close(this._socketId);}},{key:'sendStringImpl',value:


function sendStringImpl(message){
RCTWebSocketManager.send(message,this._socketId);}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){

console.warn('Sending ArrayBuffers is not yet supported');}},{key:'_unregisterEvents',value:


function _unregisterEvents(){
this._subs.forEach(function(e){return e.remove();});
this._subs = [];}},{key:'_registerEvents',value:


function _registerEvents(id){
this._subs = [
RCTDeviceEventEmitter.addListener(
'websocketMessage',
(function(ev){
if(ev.id !== id){
return;}

this.onmessage && this.onmessage({
data:ev.data});}).

bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketOpen',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.OPEN;
this.onopen && this.onopen();}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketClosed',
(function(ev){
if(ev.id !== id){
return;}

this.readyState = this.CLOSED;
this.onclose && this.onclose(ev);
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this)),

RCTDeviceEventEmitter.addListener(
'websocketFailed',
(function(ev){
if(ev.id !== id){
return;}

this.onerror && this.onerror(new Error(ev.message));
this._unregisterEvents();
RCTWebSocketManager.close(id);}).
bind(this))];}}]);return WebSocket;})(WebSocketBase);






module.exports = WebSocket;});
__d('WebSocketBase',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 















WebSocketBase=(function(){

















function WebSocketBase(url,protocols){_classCallCheck(this,WebSocketBase);
this.CONNECTING = 0;
this.OPEN = 1;
this.CLOSING = 2;
this.CLOSED = 3;

if(!protocols){
protocols = [];}


this.connectToSocketImpl(url);}_createClass(WebSocketBase,[{key:'close',value:


function close(){
if(this.readyState === WebSocketBase.CLOSING || 
this.readyState === WebSocketBase.CLOSED){
return;}


if(this.readyState === WebSocketBase.CONNECTING){
this.cancelConnectionImpl();}


this.closeConnectionImpl();}},{key:'send',value:


function send(data){
if(this.readyState === WebSocketBase.CONNECTING){
throw new Error('INVALID_STATE_ERR');}


if(typeof data === 'string'){
this.sendStringImpl(data);}else 
if(data instanceof ArrayBuffer){
this.sendArrayBufferImpl(data);}else 
{
throw new Error('Not supported data type');}}},{key:'closeConnectionImpl',value:



function closeConnectionImpl(){
throw new Error('Subclass must define closeConnectionImpl method');}},{key:'connectToSocketImpl',value:


function connectToSocketImpl(){
throw new Error('Subclass must define connectToSocketImpl method');}},{key:'cancelConnectionImpl',value:


function cancelConnectionImpl(){
throw new Error('Subclass must define cancelConnectionImpl method');}},{key:'sendStringImpl',value:


function sendStringImpl(){
throw new Error('Subclass must define sendStringImpl method');}},{key:'sendArrayBufferImpl',value:


function sendArrayBufferImpl(){
throw new Error('Subclass must define sendArrayBufferImpl method');}}]);return WebSocketBase;})();




module.exports = WebSocketBase;});
__d('EventPluginHub',["EventPluginRegistry","EventPluginUtils","accumulateInto","forEachAccumulated","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginRegistry=require('EventPluginRegistry');
var EventPluginUtils=require('EventPluginUtils');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');
var invariant=require('invariant');




var listenerBank={};





var eventQueue=null;







var executeDispatchesAndRelease=function(event){
if(event){
var executeDispatch=EventPluginUtils.executeDispatch;

var PluginModule=EventPluginRegistry.getPluginModuleForEvent(event);
if(PluginModule && PluginModule.executeDispatch){
executeDispatch = PluginModule.executeDispatch;}

EventPluginUtils.executeDispatchesInOrder(event,executeDispatch);

if(!event.isPersistent()){
event.constructor.release(event);}}};








var InstanceHandle=null;

function validateInstanceHandle(){
var valid=
InstanceHandle && 
InstanceHandle.traverseTwoPhase && 
InstanceHandle.traverseEnterLeave;
invariant(
valid,
'InstanceHandle not injected before use!');}

























var EventPluginHub={




injection:{





injectMount:EventPluginUtils.injection.injectMount,





injectInstanceHandle:function(InjectedInstanceHandle){
InstanceHandle = InjectedInstanceHandle;
if(__DEV__){
validateInstanceHandle();}},



getInstanceHandle:function(){
if(__DEV__){
validateInstanceHandle();}

return InstanceHandle;},






injectEventPluginOrder:EventPluginRegistry.injectEventPluginOrder,




injectEventPluginsByName:EventPluginRegistry.injectEventPluginsByName},



eventNameDispatchConfigs:EventPluginRegistry.eventNameDispatchConfigs,

registrationNameModules:EventPluginRegistry.registrationNameModules,








putListener:function(id,registrationName,listener){
invariant(
!listener || typeof listener === 'function',
'Expected %s listener to be a function, instead got type %s',
registrationName,typeof listener);


var bankForRegistrationName=
listenerBank[registrationName] || (listenerBank[registrationName] = {});
bankForRegistrationName[id] = listener;},







getListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
return bankForRegistrationName && bankForRegistrationName[id];},








deleteListener:function(id,registrationName){
var bankForRegistrationName=listenerBank[registrationName];
if(bankForRegistrationName){
delete bankForRegistrationName[id];}},








deleteAllListeners:function(id){
for(var registrationName in listenerBank) {
delete listenerBank[registrationName][id];}},














extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var events;
var plugins=EventPluginRegistry.plugins;
for(var i=0,l=plugins.length;i < l;i++) {

var possiblePlugin=plugins[i];
if(possiblePlugin){
var extractedEvents=possiblePlugin.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent);

if(extractedEvents){
events = accumulateInto(events,extractedEvents);}}}



return events;},









enqueueEvents:function(events){
if(events){
eventQueue = accumulateInto(eventQueue,events);}},








processEventQueue:function(){


var processingEventQueue=eventQueue;
eventQueue = null;
forEachAccumulated(processingEventQueue,executeDispatchesAndRelease);
invariant(
!eventQueue,
'processEventQueue(): Additional events were enqueued while processing ' + 
'an event queue. Support for this has not yet been implemented.');},






__purge:function(){
listenerBank = {};},


__getListenerBank:function(){
return listenerBank;}};




module.exports = EventPluginHub;});
__d('EventPluginRegistry',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var invariant=require('invariant');




var EventPluginOrder=null;




var namesToPlugins={};






function recomputePluginOrdering(){
if(!EventPluginOrder){

return;}

for(var pluginName in namesToPlugins) {
var PluginModule=namesToPlugins[pluginName];
var pluginIndex=EventPluginOrder.indexOf(pluginName);
invariant(
pluginIndex > -1,
'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 
'the plugin ordering, `%s`.',
pluginName);

if(EventPluginRegistry.plugins[pluginIndex]){
continue;}

invariant(
PluginModule.extractEvents,
'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 
'method, but `%s` does not.',
pluginName);

EventPluginRegistry.plugins[pluginIndex] = PluginModule;
var publishedEvents=PluginModule.eventTypes;
for(var eventName in publishedEvents) {
invariant(
publishEventForPlugin(
publishedEvents[eventName],
PluginModule,
eventName),

'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
eventName,
pluginName);}}}













function publishEventForPlugin(dispatchConfig,PluginModule,eventName){
invariant(
!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'event name, `%s`.',
eventName);

EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

var phasedRegistrationNames=dispatchConfig.phasedRegistrationNames;
if(phasedRegistrationNames){
for(var phaseName in phasedRegistrationNames) {
if(phasedRegistrationNames.hasOwnProperty(phaseName)){
var phasedRegistrationName=phasedRegistrationNames[phaseName];
publishRegistrationName(
phasedRegistrationName,
PluginModule,
eventName);}}



return true;}else 
if(dispatchConfig.registrationName){
publishRegistrationName(
dispatchConfig.registrationName,
PluginModule,
eventName);

return true;}

return false;}










function publishRegistrationName(registrationName,PluginModule,eventName){
invariant(
!EventPluginRegistry.registrationNameModules[registrationName],
'EventPluginHub: More than one plugin attempted to publish the same ' + 
'registration name, `%s`.',
registrationName);

EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
EventPluginRegistry.registrationNameDependencies[registrationName] = 
PluginModule.eventTypes[eventName].dependencies;}







var EventPluginRegistry={




plugins:[],




eventNameDispatchConfigs:{},




registrationNameModules:{},




registrationNameDependencies:{},










injectEventPluginOrder:function(InjectedEventPluginOrder){
invariant(
!EventPluginOrder,
'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 
'once. You are likely trying to load more than one copy of React.');


EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
recomputePluginOrdering();},












injectEventPluginsByName:function(injectedNamesToPlugins){
var isOrderingDirty=false;
for(var pluginName in injectedNamesToPlugins) {
if(!injectedNamesToPlugins.hasOwnProperty(pluginName)){
continue;}

var PluginModule=injectedNamesToPlugins[pluginName];
if(!namesToPlugins.hasOwnProperty(pluginName) || 
namesToPlugins[pluginName] !== PluginModule){
invariant(
!namesToPlugins[pluginName],
'EventPluginRegistry: Cannot inject two different event plugins ' + 
'using the same name, `%s`.',
pluginName);

namesToPlugins[pluginName] = PluginModule;
isOrderingDirty = true;}}


if(isOrderingDirty){
recomputePluginOrdering();}},










getPluginModuleForEvent:function(event){
var dispatchConfig=event.dispatchConfig;
if(dispatchConfig.registrationName){
return EventPluginRegistry.registrationNameModules[
dispatchConfig.registrationName] || 
null;}

for(var phase in dispatchConfig.phasedRegistrationNames) {
if(!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)){
continue;}

var PluginModule=EventPluginRegistry.registrationNameModules[
dispatchConfig.phasedRegistrationNames[phase]];

if(PluginModule){
return PluginModule;}}


return null;},






_resetEventPlugins:function(){
EventPluginOrder = null;
for(var pluginName in namesToPlugins) {
if(namesToPlugins.hasOwnProperty(pluginName)){
delete namesToPlugins[pluginName];}}


EventPluginRegistry.plugins.length = 0;

var eventNameDispatchConfigs=EventPluginRegistry.eventNameDispatchConfigs;
for(var eventName in eventNameDispatchConfigs) {
if(eventNameDispatchConfigs.hasOwnProperty(eventName)){
delete eventNameDispatchConfigs[eventName];}}



var registrationNameModules=EventPluginRegistry.registrationNameModules;
for(var registrationName in registrationNameModules) {
if(registrationNameModules.hasOwnProperty(registrationName)){
delete registrationNameModules[registrationName];}}}};






module.exports = EventPluginRegistry;});
__d('EventPluginUtils',["EventConstants","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');

var invariant=require('invariant');









var injection={
Mount:null,
injectMount:function(InjectedMount){
injection.Mount = InjectedMount;
if(__DEV__){
invariant(
InjectedMount && InjectedMount.getNode,
'EventPluginUtils.injection.injectMount(...): Injected Mount module ' + 
'is missing getNode.');}}};





var topLevelTypes=EventConstants.topLevelTypes;

function isEndish(topLevelType){
return topLevelType === topLevelTypes.topMouseUp || 
topLevelType === topLevelTypes.topTouchEnd || 
topLevelType === topLevelTypes.topTouchCancel;}


function isMoveish(topLevelType){
return topLevelType === topLevelTypes.topMouseMove || 
topLevelType === topLevelTypes.topTouchMove;}

function isStartish(topLevelType){
return topLevelType === topLevelTypes.topMouseDown || 
topLevelType === topLevelTypes.topTouchStart;}



var validateEventDispatches;
if(__DEV__){
validateEventDispatches = function(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;

var listenersIsArr=Array.isArray(dispatchListeners);
var idsIsArr=Array.isArray(dispatchIDs);
var IDsLen=idsIsArr?dispatchIDs.length:dispatchIDs?1:0;
var listenersLen=listenersIsArr?
dispatchListeners.length:
dispatchListeners?1:0;

invariant(
idsIsArr === listenersIsArr && IDsLen === listenersLen,
'EventPluginUtils: Invalid `event`.');};}









function forEachEventDispatch(event,cb){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


cb(event,dispatchListeners[i],dispatchIDs[i]);}}else 

if(dispatchListeners){
cb(event,dispatchListeners,dispatchIDs);}}









function executeDispatch(event,listener,domID){
event.currentTarget = injection.Mount.getNode(domID);
var returnValue=listener(event,domID);
event.currentTarget = null;
return returnValue;}





function executeDispatchesInOrder(event,cb){
forEachEventDispatch(event,cb);
event._dispatchListeners = null;
event._dispatchIDs = null;}









function executeDispatchesInOrderStopAtTrueImpl(event){
var dispatchListeners=event._dispatchListeners;
var dispatchIDs=event._dispatchIDs;
if(__DEV__){
validateEventDispatches(event);}

if(Array.isArray(dispatchListeners)){
for(var i=0;i < dispatchListeners.length;i++) {
if(event.isPropagationStopped()){
break;}


if(dispatchListeners[i](event,dispatchIDs[i])){
return dispatchIDs[i];}}}else 


if(dispatchListeners){
if(dispatchListeners(event,dispatchIDs)){
return dispatchIDs;}}


return null;}





function executeDispatchesInOrderStopAtTrue(event){
var ret=executeDispatchesInOrderStopAtTrueImpl(event);
event._dispatchIDs = null;
event._dispatchListeners = null;
return ret;}











function executeDirectDispatch(event){
if(__DEV__){
validateEventDispatches(event);}

var dispatchListener=event._dispatchListeners;
var dispatchID=event._dispatchIDs;
invariant(
!Array.isArray(dispatchListener),
'executeDirectDispatch(...): Invalid `event`.');

var res=dispatchListener?
dispatchListener(event,dispatchID):
null;
event._dispatchListeners = null;
event._dispatchIDs = null;
return res;}






function hasDispatches(event){
return !!event._dispatchListeners;}





var EventPluginUtils={
isEndish:isEndish,
isMoveish:isMoveish,
isStartish:isStartish,

executeDirectDispatch:executeDirectDispatch,
executeDispatch:executeDispatch,
executeDispatchesInOrder:executeDispatchesInOrder,
executeDispatchesInOrderStopAtTrue:executeDispatchesInOrderStopAtTrue,
hasDispatches:hasDispatches,
injection:injection,
useTouchEvents:false};


module.exports = EventPluginUtils;});
__d('EventConstants',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');

var PropagationPhases=keyMirror({bubbled:null,captured:null});




var topLevelTypes=keyMirror({
topBlur:null,
topChange:null,
topClick:null,
topCompositionEnd:null,
topCompositionStart:null,
topCompositionUpdate:null,
topContextMenu:null,
topCopy:null,
topCut:null,
topDoubleClick:null,
topDrag:null,
topDragEnd:null,
topDragEnter:null,
topDragExit:null,
topDragLeave:null,
topDragOver:null,
topDragStart:null,
topDrop:null,
topError:null,
topFocus:null,
topInput:null,
topKeyDown:null,
topKeyPress:null,
topKeyUp:null,
topLoad:null,
topMouseDown:null,
topMouseMove:null,
topMouseOut:null,
topMouseOver:null,
topMouseUp:null,
topPaste:null,
topReset:null,
topScroll:null,
topSelectionChange:null,
topSubmit:null,
topTextInput:null,
topTouchCancel:null,
topTouchEnd:null,
topTouchMove:null,
topTouchStart:null,
topWheel:null});


var EventConstants={
topLevelTypes:topLevelTypes,
PropagationPhases:PropagationPhases};


module.exports = EventConstants;});
__d('accumulateInto',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');















function accumulateInto(current,next){
invariant(
next != null,
'accumulateInto(...): Accumulated items must not be null or undefined.');

if(current == null){
return next;}




var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);

if(currentIsArray && nextIsArray){
current.push.apply(current,next);
return current;}


if(currentIsArray){
current.push(next);
return current;}


if(nextIsArray){

return [current].concat(next);}


return [current,next];}


module.exports = accumulateInto;});
__d('forEachAccumulated',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var forEachAccumulated=function(arr,cb,scope){
if(Array.isArray(arr)){
arr.forEach(cb,scope);}else 
if(arr){
cb.call(scope,arr);}};



module.exports = forEachAccumulated;});
__d('IOSDefaultEventPluginOrder',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var IOSDefaultEventPluginOrder=[
'ResponderEventPlugin',
'IOSNativeBridgeEventPlugin'];


module.exports = IOSDefaultEventPluginOrder;});
__d('IOSNativeBridgeEventPlugin',["EventPropagators","NativeModules","SyntheticEvent","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPropagators=require('EventPropagators');
var NativeModules=require('NativeModules');
var SyntheticEvent=require('SyntheticEvent');

var merge=require('merge');
var warning=require('warning');

var RCTUIManager=NativeModules.UIManager;

var customBubblingEventTypes=RCTUIManager.customBubblingEventTypes;
var customDirectEventTypes=RCTUIManager.customDirectEventTypes;

var allTypesByEventName={};

for(var bubblingTypeName in customBubblingEventTypes) {
allTypesByEventName[bubblingTypeName] = customBubblingEventTypes[bubblingTypeName];}


for(var directTypeName in customDirectEventTypes) {
warning(
!customBubblingEventTypes[directTypeName],
'Event cannot be both direct and bubbling: %s',
directTypeName);

allTypesByEventName[directTypeName] = customDirectEventTypes[directTypeName];}


var IOSNativeBridgeEventPlugin={

eventTypes:merge(customBubblingEventTypes,customDirectEventTypes),









extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent)
{
var bubbleDispatchConfig=customBubblingEventTypes[topLevelType];
var directDispatchConfig=customDirectEventTypes[topLevelType];
var event=SyntheticEvent.getPooled(
bubbleDispatchConfig || directDispatchConfig,
topLevelTargetID,
nativeEvent);

if(bubbleDispatchConfig){
EventPropagators.accumulateTwoPhaseDispatches(event);}else 
if(directDispatchConfig){
EventPropagators.accumulateDirectDispatches(event);}else 
{
return null;}

return event;}};



module.exports = IOSNativeBridgeEventPlugin;});
__d('EventPropagators',["EventConstants","EventPluginHub","accumulateInto","forEachAccumulated"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');

var accumulateInto=require('accumulateInto');
var forEachAccumulated=require('forEachAccumulated');

var PropagationPhases=EventConstants.PropagationPhases;
var getListener=EventPluginHub.getListener;





function listenerAtPhase(id,event,propagationPhase){
var registrationName=
event.dispatchConfig.phasedRegistrationNames[propagationPhase];
return getListener(id,registrationName);}








function accumulateDirectionalDispatches(domID,upwards,event){
if(__DEV__){
if(!domID){
throw new Error('Dispatching id must not be null');}}


var phase=upwards?PropagationPhases.bubbled:PropagationPhases.captured;
var listener=listenerAtPhase(domID,event,phase);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,domID);}}










function accumulateTwoPhaseDispatchesSingle(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}







function accumulateTwoPhaseDispatchesSingleSkipTarget(event){
if(event && event.dispatchConfig.phasedRegistrationNames){
EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(
event.dispatchMarker,
accumulateDirectionalDispatches,
event);}}










function accumulateDispatches(id,ignoredDirection,event){
if(event && event.dispatchConfig.registrationName){
var registrationName=event.dispatchConfig.registrationName;
var listener=getListener(id,registrationName);
if(listener){
event._dispatchListeners = 
accumulateInto(event._dispatchListeners,listener);
event._dispatchIDs = accumulateInto(event._dispatchIDs,id);}}}









function accumulateDirectDispatchesSingle(event){
if(event && event.dispatchConfig.registrationName){
accumulateDispatches(event.dispatchMarker,null,event);}}



function accumulateTwoPhaseDispatches(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingle);}


function accumulateTwoPhaseDispatchesSkipTarget(events){
forEachAccumulated(events,accumulateTwoPhaseDispatchesSingleSkipTarget);}


function accumulateEnterLeaveDispatches(leave,enter,fromID,toID){
EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
fromID,
toID,
accumulateDispatches,
leave,
enter);}




function accumulateDirectDispatches(events){
forEachAccumulated(events,accumulateDirectDispatchesSingle);}















var EventPropagators={
accumulateTwoPhaseDispatches:accumulateTwoPhaseDispatches,
accumulateTwoPhaseDispatchesSkipTarget:accumulateTwoPhaseDispatchesSkipTarget,
accumulateDirectDispatches:accumulateDirectDispatches,
accumulateEnterLeaveDispatches:accumulateEnterLeaveDispatches};


module.exports = EventPropagators;});
__d('SyntheticEvent',["PooledClass","Object.assign","emptyFunction","getEventTarget"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var PooledClass=require('PooledClass');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var getEventTarget=require('getEventTarget');





var EventInterface={
type:null,
target:getEventTarget,

currentTarget:emptyFunction.thatReturnsNull,
eventPhase:null,
bubbles:null,
cancelable:null,
timeStamp:function(event){
return event.timeStamp || Date.now();},

defaultPrevented:null,
isTrusted:null};



















function SyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent){
this.dispatchConfig = dispatchConfig;
this.dispatchMarker = dispatchMarker;
this.nativeEvent = nativeEvent;

var Interface=this.constructor.Interface;
for(var propName in Interface) {
if(!Interface.hasOwnProperty(propName)){
continue;}

var normalize=Interface[propName];
if(normalize){
this[propName] = normalize(nativeEvent);}else 
{
this[propName] = nativeEvent[propName];}}



var defaultPrevented=nativeEvent.defaultPrevented != null?
nativeEvent.defaultPrevented:
nativeEvent.returnValue === false;
if(defaultPrevented){
this.isDefaultPrevented = emptyFunction.thatReturnsTrue;}else 
{
this.isDefaultPrevented = emptyFunction.thatReturnsFalse;}

this.isPropagationStopped = emptyFunction.thatReturnsFalse;}


assign(SyntheticEvent.prototype,{

preventDefault:function(){
this.defaultPrevented = true;
var event=this.nativeEvent;
if(event.preventDefault){
event.preventDefault();}else 
{
event.returnValue = false;}

this.isDefaultPrevented = emptyFunction.thatReturnsTrue;},


stopPropagation:function(){
var event=this.nativeEvent;
if(event.stopPropagation){
event.stopPropagation();}else 
{
event.cancelBubble = true;}

this.isPropagationStopped = emptyFunction.thatReturnsTrue;},







persist:function(){
this.isPersistent = emptyFunction.thatReturnsTrue;},







isPersistent:emptyFunction.thatReturnsFalse,




destructor:function(){
var Interface=this.constructor.Interface;
for(var propName in Interface) {
this[propName] = null;}

this.dispatchConfig = null;
this.dispatchMarker = null;
this.nativeEvent = null;}});




SyntheticEvent.Interface = EventInterface;







SyntheticEvent.augmentClass = function(Class,Interface){
var Super=this;

var prototype=Object.create(Super.prototype);
assign(prototype,Class.prototype);
Class.prototype = prototype;
Class.prototype.constructor = Class;

Class.Interface = assign({},Super.Interface,Interface);
Class.augmentClass = Super.augmentClass;

PooledClass.addPoolingTo(Class,PooledClass.threeArgumentPooler);};


PooledClass.addPoolingTo(SyntheticEvent,PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;});
__d('getEventTarget',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function getEventTarget(nativeEvent){
var target=nativeEvent.target || nativeEvent.srcElement || window;


return target.nodeType === 3?target.parentNode:target;}


module.exports = getEventTarget;});
__d('merge',["mergeInto"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";
































var mergeInto=require("mergeInto");








var merge=function(one,two){
var result={};
mergeInto(result,one);
mergeInto(result,two);
return result;};


module.exports = merge;});
__d('mergeInto',["mergeHelpers"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";

































var mergeHelpers=require("mergeHelpers");

var checkMergeObjectArg=mergeHelpers.checkMergeObjectArg;
var checkMergeIntoObjectArg=mergeHelpers.checkMergeIntoObjectArg;







function mergeInto(one,two){
checkMergeIntoObjectArg(one);
if(two != null){
checkMergeObjectArg(two);
for(var key in two) {
if(!two.hasOwnProperty(key)){
continue;}

one[key] = two[key];}}}




module.exports = mergeInto;});
__d('mergeHelpers',["invariant","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';


































var invariant=require('invariant');
var keyMirror=require('keyMirror');





var MAX_MERGE_DEPTH=36;







var isTerminal=function(o){
return typeof o !== 'object' || o === null;};


var mergeHelpers={

MAX_MERGE_DEPTH:MAX_MERGE_DEPTH,

isTerminal:isTerminal,







normalizeMergeArg:function(arg){
return arg === undefined || arg === null?{}:arg;},










checkMergeArrayArgs:function(one,two){
invariant(
Array.isArray(one) && Array.isArray(two),
'Tried to merge arrays, instead got %s and %s.',
one,
two);},







checkMergeObjectArgs:function(one,two){
mergeHelpers.checkMergeObjectArg(one);
mergeHelpers.checkMergeObjectArg(two);},





checkMergeObjectArg:function(arg){
invariant(
!isTerminal(arg) && !Array.isArray(arg),
'Tried to merge an object, instead got %s.',
arg);},






checkMergeIntoObjectArg:function(arg){
invariant(
(!isTerminal(arg) || typeof arg === 'function') && !Array.isArray(arg),
'Tried to merge into an object, instead got %s.',
arg);},









checkMergeLevel:function(level){
invariant(
level < MAX_MERGE_DEPTH,
'Maximum deep merge depth exceeded. You may be attempting to merge ' + 
'circular structures in an unsupported way.');},








checkArrayStrategy:function(strategy){
invariant(
strategy === undefined || strategy in mergeHelpers.ArrayStrategies,
'You must provide an array strategy to deep merge functions to ' + 
'instruct the deep merge how to resolve merging two arrays.');},










ArrayStrategies:keyMirror({
Clobber:true,
IndexByIndex:true})};




module.exports = mergeHelpers;});
__d('NodeHandle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 




























































NodeHandle={



injection:{
injectImplementation:function(Impl){
NodeHandle._Implementation = Impl;}},



_Implementation:null,





getRootNodeID:function(nodeHandle){
return NodeHandle._Implementation.getRootNodeID(nodeHandle);}};



module.exports = NodeHandle;});
__d('ReactComponentEnvironment',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var injected=false;

var ReactComponentEnvironment={






unmountIDFromEnvironment:null,





replaceNodeWithMarkupByID:null,





processChildrenUpdates:null,

injection:{
injectEnvironment:function(environment){
invariant(
!injected,
'ReactCompositeComponent: injectEnvironment() can only be called once.');

ReactComponentEnvironment.unmountIDFromEnvironment = 
environment.unmountIDFromEnvironment;
ReactComponentEnvironment.replaceNodeWithMarkupByID = 
environment.replaceNodeWithMarkupByID;
ReactComponentEnvironment.processChildrenUpdates = 
environment.processChildrenUpdates;
injected = true;}}};





module.exports = ReactComponentEnvironment;});
__d('ReactDefaultBatchingStrategy',["ReactUpdates","Transaction","Object.assign","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactUpdates=require('ReactUpdates');
var Transaction=require('Transaction');

var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');

var RESET_BATCHED_UPDATES={
initialize:emptyFunction,
close:function(){
ReactDefaultBatchingStrategy.isBatchingUpdates = false;}};



var FLUSH_BATCHED_UPDATES={
initialize:emptyFunction,
close:ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)};


var TRANSACTION_WRAPPERS=[FLUSH_BATCHED_UPDATES,RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction(){
this.reinitializeTransaction();}


assign(
ReactDefaultBatchingStrategyTransaction.prototype,
Transaction.Mixin,
{
getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;}});




var transaction=new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy={
isBatchingUpdates:false,





batchedUpdates:function(callback,a,b,c,d){
var alreadyBatchingUpdates=ReactDefaultBatchingStrategy.isBatchingUpdates;

ReactDefaultBatchingStrategy.isBatchingUpdates = true;


if(alreadyBatchingUpdates){
callback(a,b,c,d);}else 
{
transaction.perform(callback,null,a,b,c,d);}}};




module.exports = ReactDefaultBatchingStrategy;});
__d('ReactEmptyComponent',["ReactElement","ReactInstanceMap","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactInstanceMap=require('ReactInstanceMap');

var invariant=require('invariant');

var component;


var nullComponentIDsRegistry={};

var ReactEmptyComponentInjection={
injectEmptyComponent:function(emptyComponent){
component = ReactElement.createFactory(emptyComponent);}};



var ReactEmptyComponentType=function(){};
ReactEmptyComponentType.prototype.componentDidMount = function(){
var internalInstance=ReactInstanceMap.get(this);




if(!internalInstance){
return;}

registerNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.componentWillUnmount = function(){
var internalInstance=ReactInstanceMap.get(this);

if(!internalInstance){
return;}

deregisterNullComponentID(internalInstance._rootNodeID);};

ReactEmptyComponentType.prototype.render = function(){
invariant(
component,
'Trying to return null from a render, but no null placeholder component ' + 
'was injected.');

return component();};


var emptyElement=ReactElement.createElement(ReactEmptyComponentType);





function registerNullComponentID(id){
nullComponentIDsRegistry[id] = true;}






function deregisterNullComponentID(id){
delete nullComponentIDsRegistry[id];}






function isNullComponentID(id){
return !!nullComponentIDsRegistry[id];}


var ReactEmptyComponent={
emptyElement:emptyElement,
injection:ReactEmptyComponentInjection,
isNullComponentID:isNullComponentID};


module.exports = ReactEmptyComponent;});
__d('ReactNativeComponentEnvironment',["ReactNativeDOMIDOperations","ReactNativeReconcileTransaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeDOMIDOperations=require('ReactNativeDOMIDOperations');
var ReactNativeReconcileTransaction=require('ReactNativeReconcileTransaction');

var ReactNativeComponentEnvironment={

processChildrenUpdates:ReactNativeDOMIDOperations.dangerouslyProcessChildrenUpdates,

replaceNodeWithMarkupByID:ReactNativeDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,






unmountIDFromEnvironment:function(){},






clearNode:function(){},



ReactReconcileTransaction:ReactNativeReconcileTransaction};


module.exports = ReactNativeComponentEnvironment;});
__d('ReactNativeDOMIDOperations',["ReactNativeTagHandles","ReactMultiChildUpdateTypes","NativeModules","ReactPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');
var RCTUIManager=require('NativeModules').UIManager;
var ReactPerf=require('ReactPerf');













var dangerouslyProcessChildrenUpdates=function(childrenUpdates,markupList){
if(!childrenUpdates.length){
return;}

var byContainerTag={};


for(var i=0;i < childrenUpdates.length;i++) {
var update=childrenUpdates[i];
var containerTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(update.parentID);
var updates=byContainerTag[containerTag] || (byContainerTag[containerTag] = {});
if(update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING){
(updates.moveFromIndices || (updates.moveFromIndices = [])).push(update.fromIndex);
(updates.moveToIndices || (updates.moveToIndices = [])).push(update.toIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.REMOVE_NODE){
(updates.removeAtIndices || (updates.removeAtIndices = [])).push(update.fromIndex);}else 
if(update.type === ReactMultiChildUpdateTypes.INSERT_MARKUP){
var mountImage=markupList[update.markupIndex];
var tag=mountImage.tag;
var rootNodeID=mountImage.rootNodeID;
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(rootNodeID,tag);
(updates.addAtIndices || (updates.addAtIndices = [])).push(update.toIndex);
(updates.addChildTags || (updates.addChildTags = [])).push(tag);}}





for(var updateParentTagString in byContainerTag) {
var updateParentTagNumber=+updateParentTagString;
var childUpdatesToSend=byContainerTag[updateParentTagNumber];
RCTUIManager.manageChildren(
updateParentTagNumber,
childUpdatesToSend.moveFromIndices,
childUpdatesToSend.moveToIndices,
childUpdatesToSend.addChildTags,
childUpdatesToSend.addAtIndices,
childUpdatesToSend.removeAtIndices);}};








var ReactNativeDOMIDOperations={
dangerouslyProcessChildrenUpdates:ReactPerf.measure(

'ReactDOMIDOperations',
'dangerouslyProcessChildrenUpdates',
dangerouslyProcessChildrenUpdates),








dangerouslyReplaceNodeWithMarkupByID:ReactPerf.measure(
'ReactDOMIDOperations',
'dangerouslyReplaceNodeWithMarkupByID',
function(id,mountImage){
var oldTag=ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(id);
RCTUIManager.replaceExistingNonRootView(oldTag,mountImage.tag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(id,mountImage.tag);})};




module.exports = ReactNativeDOMIDOperations;});
__d('ReactNativeTagHandles',["invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var warning=require('warning');














var INITIAL_TAG_COUNT=1;
var ReactNativeTagHandles={
tagsStartAt:INITIAL_TAG_COUNT,
tagCount:INITIAL_TAG_COUNT,

allocateTag:function(){

while(this.reactTagIsNativeTopRootID(ReactNativeTagHandles.tagCount)) {
ReactNativeTagHandles.tagCount++;}

var tag=ReactNativeTagHandles.tagCount;
ReactNativeTagHandles.tagCount++;
return tag;},











associateRootNodeIDWithMountedNodeHandle:function(
rootNodeID,
tag)
{
warning(rootNodeID && tag,'Root node or tag is null when associating');
if(rootNodeID && tag){
ReactNativeTagHandles.tagToRootNodeID[tag] = rootNodeID;
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID] = tag;}},



allocateRootNodeIDForTag:function(tag){
invariant(
this.reactTagIsNativeTopRootID(tag),
'Expect a native root tag, instead got ',tag);

return '.r[' + tag + ']{TOP_LEVEL}';},


reactTagIsNativeTopRootID:function(reactTag){

return reactTag % 10 === 1;},














mostRecentMountedNodeHandleForRootNodeID:function(
rootNodeID)
{
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];},


tagToRootNodeID:[],

rootNodeIDToTag:{}};


module.exports = ReactNativeTagHandles;});
__d('ReactMultiChildUpdateTypes',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');









var ReactMultiChildUpdateTypes=keyMirror({
INSERT_MARKUP:null,
MOVE_EXISTING:null,
REMOVE_NODE:null,
TEXT_CONTENT:null});


module.exports = ReactMultiChildUpdateTypes;});
__d('ReactNativeReconcileTransaction',["CallbackQueue","PooledClass","Transaction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var CallbackQueue=require('CallbackQueue');
var PooledClass=require('PooledClass');
var Transaction=require('Transaction');





var ON_DOM_READY_QUEUEING={



initialize:function(){
this.reactMountReady.reset();},





close:function(){
this.reactMountReady.notifyAll();}};








var TRANSACTION_WRAPPERS=[ON_DOM_READY_QUEUEING];















function ReactNativeReconcileTransaction(){
this.reinitializeTransaction();
this.reactMountReady = CallbackQueue.getPooled(null);}


var Mixin={







getTransactionWrappers:function(){
return TRANSACTION_WRAPPERS;},






getReactMountReady:function(){
return this.reactMountReady;},






destructor:function(){
CallbackQueue.release(this.reactMountReady);
this.reactMountReady = null;}};



Object.assign(
ReactNativeReconcileTransaction.prototype,
Transaction.Mixin,
ReactNativeReconcileTransaction,
Mixin);


PooledClass.addPoolingTo(ReactNativeReconcileTransaction);

module.exports = ReactNativeReconcileTransaction;});
__d('ReactNativeGlobalInteractionHandler',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var InteractionManager=require('InteractionManager');



var interactionHandle=null;

var ReactNativeGlobalInteractionHandler={
onChange:function(numberActiveTouches){
if(numberActiveTouches === 0){
if(interactionHandle){
InteractionManager.clearInteractionHandle(interactionHandle);
interactionHandle = null;}}else 

if(!interactionHandle){
interactionHandle = InteractionManager.createInteractionHandle();}}};




module.exports = ReactNativeGlobalInteractionHandler;});
__d('InteractionManager',["ErrorUtils","EventEmitter","Set","invariant","keyMirror","setImmediate"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ErrorUtils=require('ErrorUtils');
var EventEmitter=require('EventEmitter');
var Set=require('Set');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var setImmediate=require('setImmediate');






var DEV_TIMEOUT=2000;

var _emitter=new EventEmitter();
var _interactionSet=new Set();
var _addInteractionSet=new Set();
var _deleteInteractionSet=new Set();
var _nextUpdateHandle=null;
var _queue=[];
var _inc=0;




































var InteractionManager={
Events:keyMirror({
interactionStart:true,
interactionComplete:true}),





runAfterInteractions:function(callback){
invariant(
typeof callback === 'function',
'Must specify a function to schedule.');

scheduleUpdate();
_queue.push(callback);},





createInteractionHandle:function(){
scheduleUpdate();
var handle=++_inc;
_addInteractionSet.add(handle);
if(__DEV__){

var error=new Error(
'InteractionManager: interaction handle not cleared within ' + 
DEV_TIMEOUT + ' ms.');

setDevTimeoutHandle(handle,error,DEV_TIMEOUT);}

return handle;},





clearInteractionHandle:function(handle){
invariant(
!!handle,
'Must provide a handle to clear.');

scheduleUpdate();
_addInteractionSet.delete(handle);
_deleteInteractionSet.add(handle);},


addListener:_emitter.addListener.bind(_emitter)};





function scheduleUpdate(){
if(!_nextUpdateHandle){
_nextUpdateHandle = setImmediate(processUpdate);}}






function processUpdate(){
_nextUpdateHandle = null;

var interactionCount=_interactionSet.size;
_addInteractionSet.forEach(function(handle){return (
_interactionSet.add(handle));});

_deleteInteractionSet.forEach(function(handle){return (
_interactionSet.delete(handle));});

var nextInteractionCount=_interactionSet.size;

if(interactionCount !== 0 && nextInteractionCount === 0){

_emitter.emit(InteractionManager.Events.interactionComplete);}else 
if(interactionCount === 0 && nextInteractionCount !== 0){

_emitter.emit(InteractionManager.Events.interactionStart);}



if(nextInteractionCount === 0){
var queue=_queue;
_queue = [];
queue.forEach(function(callback){
ErrorUtils.applyWithGuard(callback);});}



_addInteractionSet.clear();
_deleteInteractionSet.clear();}





function setDevTimeoutHandle(
handle,
error,
timeout)
{
setTimeout(function(){
if(_interactionSet.has(handle)){
console.warn(error.message + '\n' + error.stack);}},

timeout);}


module.exports = InteractionManager;});
__d('Set',["Map","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var Map=require('Map');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){





if(!_shouldPolyfillES6Collection('Set')){
return global.Set;}var 











































Set=(function(){










function Set(iterable){_classCallCheck(this,Set);
if(this == null || 
typeof this !== 'object' && typeof this !== 'function'){
throw new TypeError('Wrong set object type.');}


initSet(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
this.add(next.value);}}}_createClass(Set,[{key:'add',value:












function add(value){
this._map.set(value,value);
this.size = this._map.size;
return this;}},{key:'clear',value:







function clear(){
initSet(this);}},{key:'delete',value:











function _delete(value){
var ret=this._map.delete(value);
this.size = this._map.size;
return ret;}},{key:'entries',value:







function entries(){
return this._map.entries();}},{key:'forEach',value:









function forEach(callback){
var thisArg=arguments[1];
var it=this._map.keys();
var next;
while(!(next = it.next()).done) {
callback.call(thisArg,next.value,next.value,this);}}},{key:'has',value:











function has(value){
return this._map.has(value);}},{key:'values',value:







function values(){
return this._map.values();}}]);return Set;})();




Set.prototype[toIterator.ITERATOR_SYMBOL] = Set.prototype.values;


Set.prototype.keys = Set.prototype.values;

function initSet(set){
set._map = new Map();
set.size = set._map.size;}


return Set;})(
Function('return this')());});
__d('Map',["guid","isNode","toIterator","_shouldPolyfillES6Collection"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}



















var guid=require('guid');
var isNode=require('isNode');
var toIterator=require('toIterator');
var _shouldPolyfillES6Collection=require('_shouldPolyfillES6Collection');

module.exports = (function(global,undefined){




if(!_shouldPolyfillES6Collection('Map')){
return global.Map;}

























































var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VALUE='key+value';



var KEY_PREFIX='$map_';



var SECRET_SIZE_PROP;
if(__DEV__){
SECRET_SIZE_PROP = '$size' + guid();}



var OLD_IE_HASH_PREFIX='IE_HASH_';var 

Map=(function(){










function Map(iterable){_classCallCheck(this,Map);
if(!isObject(this)){
throw new TypeError('Wrong map object type.');}


initMap(this);

if(iterable != null){
var it=toIterator(iterable);
var next;
while(!(next = it.next()).done) {
if(!isObject(next.value)){
throw new TypeError('Expected iterable items to be pair objects.');}

this.set(next.value[0],next.value[1]);}}}_createClass(Map,[{key:'clear',value:








function clear(){
initMap(this);}},{key:'has',value:









function has(key){
var index=getIndex(this,key);
return !!(index != null && this._mapData[index]);}},{key:'set',value:










function set(key,value){
var index=getIndex(this,key);

if(index != null && this._mapData[index]){
this._mapData[index][1] = value;}else 
{
index = this._mapData.push([
key,
value]) - 
1;
setIndex(this,key,index);
if(__DEV__){
this[SECRET_SIZE_PROP] += 1;}else 
{
this.size += 1;}}



return this;}},{key:'get',value:









function get(key){
var index=getIndex(this,key);
if(index == null){
return undefined;}else 
{
return this._mapData[index][1];}}},{key:'delete',value:











function _delete(key){
var index=getIndex(this,key);
if(index != null && this._mapData[index]){
setIndex(this,key,undefined);
this._mapData[index] = undefined;
if(__DEV__){
this[SECRET_SIZE_PROP] -= 1;}else 
{
this.size -= 1;}

return true;}else 
{
return false;}}},{key:'entries',value:










function entries(){
return new MapIterator(this,KIND_KEY_VALUE);}},{key:'keys',value:








function keys(){
return new MapIterator(this,KIND_KEY);}},{key:'values',value:








function values(){
return new MapIterator(this,KIND_VALUE);}},{key:'forEach',value:











function forEach(callback,thisArg){
if(typeof callback !== 'function'){
throw new TypeError('Callback must be callable.');}


var boundCallback=callback.bind(thisArg || undefined);
var mapData=this._mapData;




for(var i=0;i < mapData.length;i++) {
var entry=mapData[i];
if(entry != null){
boundCallback(entry[1],entry[0],this);}}}}]);return Map;})();






Map.prototype[toIterator.ITERATOR_SYMBOL] = Map.prototype.entries;var 

MapIterator=(function(){









function MapIterator(map,kind){_classCallCheck(this,MapIterator);
if(!(isObject(map) && map['_mapData'])){
throw new TypeError('Object is not a map.');}


if([KIND_KEY,KIND_KEY_VALUE,KIND_VALUE].indexOf(kind) === -1){
throw new Error('Invalid iteration kind.');}


this._map = map;
this._nextIndex = 0;
this._kind = kind;}_createClass(MapIterator,[{key:'next',value:








function next(){
if(!this instanceof Map){
throw new TypeError('Expected to be called on a MapIterator.');}


var map=this._map;
var index=this._nextIndex;
var kind=this._kind;

if(map == null){
return createIterResultObject(undefined,true);}


var entries=map['_mapData'];

while(index < entries.length) {
var record=entries[index];

index += 1;
this._nextIndex = index;

if(record){
if(kind === KIND_KEY){
return createIterResultObject(record[0],false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(record[1],false);}else 
if(kind){
return createIterResultObject(record,false);}}}




this._map = undefined;

return createIterResultObject(undefined,true);}}]);return MapIterator;})();






MapIterator.prototype[toIterator.ITERATOR_SYMBOL] = function(){
return this;};













function getIndex(map,key){
if(isObject(key)){
var hash=getHash(key);
return map._objectIndex[hash];}else 
{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
return map._stringIndex[prefixedKey];}else 
{
return map._otherIndex[prefixedKey];}}}










function setIndex(map,key,index){
var shouldDelete=index == null;

if(isObject(key)){
var hash=getHash(key);
if(shouldDelete){
delete map._objectIndex[hash];}else 
{
map._objectIndex[hash] = index;}}else 

{
var prefixedKey=KEY_PREFIX + key;
if(typeof key === 'string'){
if(shouldDelete){
delete map._stringIndex[prefixedKey];}else 
{
map._stringIndex[prefixedKey] = index;}}else 

{
if(shouldDelete){
delete map._otherIndex[prefixedKey];}else 
{
map._otherIndex[prefixedKey] = index;}}}}










function initMap(map){






map._mapData = [];







map._objectIndex = {};


map._stringIndex = {};


map._otherIndex = {};







if(__DEV__){
if(isES5){



if(map.hasOwnProperty(SECRET_SIZE_PROP)){
map[SECRET_SIZE_PROP] = 0;}else 
{
Object.defineProperty(map,SECRET_SIZE_PROP,{
value:0,
writable:true});

Object.defineProperty(map,'size',{
set:function(v){
console.error(
'PLEASE FIX ME: You are changing the map size property which ' + 
'should not be writable and will break in production.');

throw new Error('The map size property is not writable.');},

get:function(){return map[SECRET_SIZE_PROP];}});}




return;}}





map.size = 0;}








function isObject(o){
return o != null && (typeof o === 'object' || typeof o === 'function');}









function createIterResultObject(value,done){
return {value:value,done:done};}



var isES5=(function(){
try{
Object.defineProperty({},'x',{});
return true;}
catch(e) {
return false;}})();









function isExtensible(o){
if(!isES5){
return true;}else 
{
return Object.isExtensible(o);}}











function getIENodeHash(node){
var uniqueID;
switch(node.nodeType){
case 1:
uniqueID = node.uniqueID;
break;
case 9:
uniqueID = node.documentElement.uniqueID;
break;
default:
return null;}


if(uniqueID){
return OLD_IE_HASH_PREFIX + uniqueID;}else 
{
return null;}}



var getHash=(function(){
var propIsEnumerable=Object.prototype.propertyIsEnumerable;
var hashProperty=guid();
var hashCounter=0;







return function getHash(o){
if(o[hashProperty]){
return o[hashProperty];}else 
if(!isES5 && 
o.propertyIsEnumerable && 
o.propertyIsEnumerable[hashProperty]){
return o.propertyIsEnumerable[hashProperty];}else 
if(!isES5 && 
isNode(o) && 
getIENodeHash(o)){
return getIENodeHash(o);}else 
if(!isES5 && o[hashProperty]){
return o[hashProperty];}


if(isExtensible(o)){
hashCounter += 1;
if(isES5){
Object.defineProperty(o,hashProperty,{
enumerable:false,
writable:false,
configurable:false,
value:hashCounter});}else 

if(o.propertyIsEnumerable){




o.propertyIsEnumerable = function(){
return propIsEnumerable.apply(this,arguments);};

o.propertyIsEnumerable[hashProperty] = hashCounter;}else 
if(isNode(o)){




o[hashProperty] = hashCounter;}else 
{
throw new Error('Unable to set a non-enumerable property on object.');}

return hashCounter;}else 
{
throw new Error('Non-extensible objects are not allowed as keys.');}};})();




return Map;})(
Function('return this')());});
__d('guid',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 

























guid(){
return 'f' + (Math.random() * (1 << 30)).toString(16).replace('.','');}


module.exports = guid;});
__d('isNode',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 















isNode(object){
return !!(object && (
typeof Node === 'function'?object instanceof Node:
typeof object === 'object' && 
typeof object.nodeType === 'number' && 
typeof object.nodeName === 'string'));}



module.exports = isNode;});
__d('toIterator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}






























var KIND_KEY='key';
var KIND_VALUE='value';
var KIND_KEY_VAL='key+value';

var ITERATOR_SYMBOL=typeof Symbol === 'function'?
Symbol.iterator:
'@@iterator';

var toIterator=(function(){
if(!(Array.prototype[ITERATOR_SYMBOL] && 
String.prototype[ITERATOR_SYMBOL])){

return (function(){var 
ArrayIterator=(function(){

function ArrayIterator(array,kind){_classCallCheck(this,ArrayIterator);
if(!Array.isArray(array)){
throw new TypeError('Object is not an Array');}

this._iteratedObject = array;
this._kind = kind;
this._nextIndex = 0;}_createClass(ArrayIterator,[{key:'next',value:



function next(){
if(!this instanceof ArrayIterator){
throw new TypeError('Object is not an ArrayIterator');}


if(this._iteratedObject == null){
return createIterResultObject(undefined,true);}


var array=this._iteratedObject;
var len=this._iteratedObject.length;
var index=this._nextIndex;
var kind=this._kind;

if(index >= len){
this._iteratedObject = undefined;
return createIterResultObject(undefined,true);}


this._nextIndex = index + 1;

if(kind === KIND_KEY){
return createIterResultObject(index,false);}else 
if(kind === KIND_VALUE){
return createIterResultObject(array[index],false);}else 
if(kind === KIND_KEY_VAL){
return createIterResultObject([index,array[index]],false);}}},{key:




'@@iterator',value:function iterator(){
return this;}}]);return ArrayIterator;})();var 



StringIterator=(function(){

function StringIterator(string){_classCallCheck(this,StringIterator);
if(typeof string !== 'string'){
throw new TypeError('Object is not a string');}

this._iteratedString = string;
this._nextIndex = 0;}_createClass(StringIterator,[{key:'next',value:



function next(){
if(!this instanceof StringIterator){
throw new TypeError('Object is not a StringIterator');}


if(this._iteratedString == null){
return createIterResultObject(undefined,true);}


var index=this._nextIndex;
var s=this._iteratedString;
var len=s.length;

if(index >= len){
this._iteratedString = undefined;
return createIterResultObject(undefined,true);}


var ret;
var first=s.charCodeAt(index);

if(first < 0xD800 || first > 0xDBFF || index + 1 === len){
ret = s[index];}else 
{
var second=s.charCodeAt(index + 1);
if(second < 0xDC00 || second > 0xDFFF){
ret = s[index];}else 
{
ret = s[index] + s[index + 1];}}



this._nextIndex = index + ret.length;

return createIterResultObject(ret,false);}},{key:



'@@iterator',value:function iterator(){
return this;}}]);return StringIterator;})();




function createIterResultObject(value,done){
return {value:value,done:done};}


return function(object,kind){
if(typeof object === 'string'){
return new StringIterator(object);}else 
if(Array.isArray(object)){
return new ArrayIterator(object,kind || KIND_VALUE);}else 
{
return object[ITERATOR_SYMBOL]();}};})();}else 



{
return function(object){
return object[ITERATOR_SYMBOL]();};}})();








Object.assign(toIterator,{
KIND_KEY:KIND_KEY,
KIND_VALUE:KIND_VALUE,
KIND_KEY_VAL:KIND_KEY_VAL,
ITERATOR_SYMBOL:ITERATOR_SYMBOL});


module.exports = toIterator;});
__d('_shouldPolyfillES6Collection',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}

























function shouldPolyfillES6Collection(collectionName){
var Collection=global[collectionName];
if(Collection == null){
return true;}


var proto=Collection.prototype;


return Collection == null || 
typeof Collection !== 'function' || 
typeof proto.clear !== 'function' || 
new Collection().size !== 0 || 
typeof proto.keys !== 'function' || 
typeof proto.forEach !== 'function' || 
isCallableWithoutNew(Collection) || 
!supportsSubclassing(Collection);}







function supportsSubclassing(Collection){var 
SubCollection=(function(_Collection){function SubCollection(){_classCallCheck(this,SubCollection);_get(Object.getPrototypeOf(SubCollection.prototype),'constructor',this).apply(this,arguments);}_inherits(SubCollection,_Collection);return SubCollection;})(Collection);
try{
var s=new SubCollection([]);


s.size;
return s instanceof Collection;}
catch(e) {
return false;}}








function isCallableWithoutNew(Collection){
try{
Collection();}
catch(e) {
return false;}

return true;}


module.exports = shouldPolyfillES6Collection;});
__d('ReactNativeGlobalResponderHandler',["NativeModules","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var ReactNativeGlobalResponderHandler={
onChange:function(from,to){
if(to !== null){
RCTUIManager.setJSResponder(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(to));}else 

{
RCTUIManager.clearJSResponder();}}};




module.exports = ReactNativeGlobalResponderHandler;});
__d('ReactNativeMount',["NativeModules","ReactNativeTagHandles","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTUIManager=require('NativeModules').UIManager;

var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');

function instanceNumberToChildRootID(rootNodeID,instanceNumber){
return rootNodeID + '[' + instanceNumber + ']';}










function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._isTopLevel = true;
ReactNativeMount._mountImageIntoNode(markup,container);}









function batchedMountComponentIntoNode(
componentInstance,
rootID,
container){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction);

ReactUpdates.ReactReconcileTransaction.release(transaction);}






var ReactNativeMount={
instanceCount:0,

_instancesByContainerID:{},





renderComponent:function(
nextElement,
containerTag,
callback)
{
var topRootNodeID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
if(topRootNodeID){
var prevComponent=ReactNativeMount._instancesByContainerID[topRootNodeID];
if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}

return prevComponent;}else 
{
ReactNativeMount.unmountComponentAtNode(containerTag);}}}




if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return;}


var topRootNodeID=ReactNativeTagHandles.allocateRootNodeIDForTag(containerTag);
ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
topRootNodeID,
containerTag);


var instance=instantiateReactComponent(nextElement);
ReactNativeMount._instancesByContainerID[topRootNodeID] = instance;

var childRootNodeID=instanceNumberToChildRootID(
topRootNodeID,
ReactNativeMount.instanceCount++);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
instance,
childRootNodeID,
topRootNodeID);

var component=instance.getPublicInstance();
if(callback){
callback.call(component);}

return component;},






_mountImageIntoNode:ReactPerf.measure(

'ReactComponentBrowserEnvironment',
'mountImageIntoNode',
function(mountImage,containerID){


ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
mountImage.rootNodeID,
mountImage.tag);

var addChildTags=[mountImage.tag];
var addAtIndices=[0];
RCTUIManager.manageChildren(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID),
null,
null,
addChildTags,
addAtIndices,
null);}),












unmountComponentAtNodeAndRemoveContainer:function(
containerTag)
{
ReactNativeMount.unmountComponentAtNode(containerTag);

RCTUIManager.removeRootView(containerTag);},







unmountComponentAtNode:function(containerTag){
if(!ReactNativeTagHandles.reactTagIsNativeTopRootID(containerTag)){
console.error('You cannot render into anything but a top root');
return false;}


var containerID=ReactNativeTagHandles.tagToRootNodeID[containerTag];
var instance=ReactNativeMount._instancesByContainerID[containerID];
if(!instance){
return false;}

ReactNativeMount.unmountComponentFromNode(instance,containerID);
delete ReactNativeMount._instancesByContainerID[containerID];
return true;},











unmountComponentFromNode:function(
instance,
containerID)
{

ReactReconciler.unmountComponent(instance);
var containerTag=
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(containerID);
RCTUIManager.removeSubviewsFromContainerWithID(containerTag);},


getNode:function(id){
return id;}};



ReactNativeMount.renderComponent = ReactPerf.measure(
'ReactMount',
'_renderNewRootComponent',
ReactNativeMount.renderComponent);


module.exports = ReactNativeMount;});
__d('instantiateReactComponent',["ReactCompositeComponent","ReactEmptyComponent","ReactNativeComponent","Object.assign","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactNativeComponent=require('ReactNativeComponent');

var assign=require('Object.assign');
var invariant=require('invariant');
var warning=require('warning');


var ReactCompositeComponentWrapper=function(){};
assign(
ReactCompositeComponentWrapper.prototype,
ReactCompositeComponent.Mixin,
{
_instantiateReactComponent:instantiateReactComponent});










function isInternalComponentType(type){
return (
typeof type === 'function' && 
typeof type.prototype !== 'undefined' && 
typeof type.prototype.mountComponent === 'function' && 
typeof type.prototype.receiveComponent === 'function');}











function instantiateReactComponent(node,parentCompositeType){
var instance;

if(node === null || node === false){
node = ReactEmptyComponent.emptyElement;}


if(typeof node === 'object'){
var element=node;
if(__DEV__){
warning(
element && (typeof element.type === 'function' || 
typeof element.type === 'string'),
'Only functions or strings can be mounted as React components.');}




if(parentCompositeType === element.type && 
typeof element.type === 'string'){

instance = ReactNativeComponent.createInternalComponent(element);}else 


if(isInternalComponentType(element.type)){



instance = new element.type(element);}else 
{
instance = new ReactCompositeComponentWrapper();}}else 

if(typeof node === 'string' || typeof node === 'number'){
instance = ReactNativeComponent.createInstanceForText(node);}else 
{
invariant(
false,
'Encountered invalid React node of type %s',
typeof node);}



if(__DEV__){
warning(
typeof instance.construct === 'function' && 
typeof instance.mountComponent === 'function' && 
typeof instance.receiveComponent === 'function' && 
typeof instance.unmountComponent === 'function',
'Only React Components can be mounted.');}




instance.construct(node);




instance._mountIndex = 0;
instance._mountImage = null;

if(__DEV__){
instance._isOwnerNecessary = false;
instance._warnedAboutRefsInRender = false;}




if(__DEV__){
if(Object.preventExtensions){
Object.preventExtensions(instance);}}



return instance;}


module.exports = instantiateReactComponent;});
__d('ReactCompositeComponent',["ReactComponentEnvironment","ReactContext","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactInstanceMap","ReactLifeCycle","ReactNativeComponent","ReactPerf","ReactPropTypeLocations","ReactPropTypeLocationNames","ReactReconciler","ReactUpdates","Object.assign","emptyObject","invariant","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactContext=require('ReactContext');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactLifeCycle=require('ReactLifeCycle');
var ReactNativeComponent=require('ReactNativeComponent');
var ReactPerf=require('ReactPerf');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');
var ReactReconciler=require('ReactReconciler');
var ReactUpdates=require('ReactUpdates');

var assign=require('Object.assign');
var emptyObject=require('emptyObject');
var invariant=require('invariant');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

function getDeclarationErrorAddendum(component){
var owner=component._currentElement._owner || null;
if(owner){
var name=owner.getName();
if(name){
return ' Check the render method of `' + name + '`.';}}


return '';}



































var nextMountID=1;




var ReactCompositeComponentMixin={








construct:function(element){
this._currentElement = element;
this._rootNodeID = null;
this._instance = null;


this._pendingElement = null;
this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

this._renderedComponent = null;

this._context = null;
this._mountOrder = 0;
this._isTopLevel = false;


this._pendingCallbacks = null;},











mountComponent:function(rootID,transaction,context){
this._context = context;
this._mountOrder = nextMountID++;
this._rootNodeID = rootID;

var publicProps=this._processProps(this._currentElement.props);
var publicContext=this._processContext(this._currentElement._context);

var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);



var inst=new Component(publicProps,publicContext);

if(__DEV__){


warning(
inst.render != null,
'%s(...): No `render` method found on the returned component ' + 
'instance: you may have forgotten to define `render` in your ' + 
'component or you may have accidentally tried to render an element ' + 
'whose type is a function that isn\'t a React component.',
Component.displayName || Component.name || 'Component');}





inst.props = publicProps;
inst.context = publicContext;
inst.refs = emptyObject;

this._instance = inst;


ReactInstanceMap.set(inst,this);

if(__DEV__){
this._warnIfContextsDiffer(this._currentElement._context,context);}


if(__DEV__){



warning(
!inst.getInitialState || 
inst.getInitialState.isReactClassApproved,
'getInitialState was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Did you mean to define a state property instead?',
this.getName() || 'a component');

warning(
!inst.getDefaultProps || 
inst.getDefaultProps.isReactClassApproved,
'getDefaultProps was defined on %s, a plain JavaScript class. ' + 
'This is only supported for classes created using React.createClass. ' + 
'Use a static property to define defaultProps instead.',
this.getName() || 'a component');

warning(
!inst.propTypes,
'propTypes was defined as an instance property on %s. Use a static ' + 
'property to define propTypes instead.',
this.getName() || 'a component');

warning(
!inst.contextTypes,
'contextTypes was defined as an instance property on %s. Use a ' + 
'static property to define contextTypes instead.',
this.getName() || 'a component');

warning(
typeof inst.componentShouldUpdate !== 'function',
'%s has a method called ' + 
'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 
'The name is phrased as a question because the function is ' + 
'expected to return a value.',
this.getName() || 'A component');}



var initialState=inst.state;
if(initialState === undefined){
inst.state = initialState = null;}

invariant(
typeof initialState === 'object' && !Array.isArray(initialState),
'%s.state: must be set to an object or null',
this.getName() || 'ReactCompositeComponent');


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;

var renderedElement;

var previouslyMounting=ReactLifeCycle.currentlyMountingInstance;
ReactLifeCycle.currentlyMountingInstance = this;
try{
if(inst.componentWillMount){
inst.componentWillMount();


if(this._pendingStateQueue){
inst.state = this._processPendingState(inst.props,inst.context);}}



renderedElement = this._renderValidatedComponent();}finally 
{
ReactLifeCycle.currentlyMountingInstance = previouslyMounting;}


this._renderedComponent = this._instantiateReactComponent(
renderedElement,
this._currentElement.type);


var markup=ReactReconciler.mountComponent(
this._renderedComponent,
rootID,
transaction,
this._processChildContext(context));

if(inst.componentDidMount){
transaction.getReactMountReady().enqueue(inst.componentDidMount,inst);}


return markup;},








unmountComponent:function(){
var inst=this._instance;

if(inst.componentWillUnmount){
var previouslyUnmounting=ReactLifeCycle.currentlyUnmountingInstance;
ReactLifeCycle.currentlyUnmountingInstance = this;
try{
inst.componentWillUnmount();}finally 
{
ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;}}



ReactReconciler.unmountComponent(this._renderedComponent);
this._renderedComponent = null;


this._pendingStateQueue = null;
this._pendingReplaceState = false;
this._pendingForceUpdate = false;
this._pendingCallbacks = null;
this._pendingElement = null;



this._context = null;
this._rootNodeID = null;




ReactInstanceMap.remove(inst);},
















_setPropsInternal:function(partialProps,callback){


var element=this._pendingElement || this._currentElement;
this._pendingElement = ReactElement.cloneAndReplaceProps(
element,
assign({},element.props,partialProps));

ReactUpdates.enqueueUpdate(this,callback);},










_maskContext:function(context){
var maskedContext=null;


if(typeof this._currentElement.type === 'string'){
return emptyObject;}

var contextTypes=this._currentElement.type.contextTypes;
if(!contextTypes){
return emptyObject;}

maskedContext = {};
for(var contextName in contextTypes) {
maskedContext[contextName] = context[contextName];}

return maskedContext;},










_processContext:function(context){
var maskedContext=this._maskContext(context);
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.contextTypes){
this._checkPropTypes(
Component.contextTypes,
maskedContext,
ReactPropTypeLocations.context);}}



return maskedContext;},







_processChildContext:function(currentContext){
var inst=this._instance;
var childContext=inst.getChildContext && inst.getChildContext();
if(childContext){
invariant(
typeof inst.constructor.childContextTypes === 'object',
'%s.getChildContext(): childContextTypes must be defined in order to ' + 
'use getChildContext().',
this.getName() || 'ReactCompositeComponent');

if(__DEV__){
this._checkPropTypes(
inst.constructor.childContextTypes,
childContext,
ReactPropTypeLocations.childContext);}


for(var name in childContext) {
invariant(
name in inst.constructor.childContextTypes,
'%s.getChildContext(): key "%s" is not defined in childContextTypes.',
this.getName() || 'ReactCompositeComponent',
name);}


return assign({},currentContext,childContext);}

return currentContext;},











_processProps:function(newProps){
if(__DEV__){
var Component=ReactNativeComponent.getComponentClassForElement(
this._currentElement);

if(Component.propTypes){
this._checkPropTypes(
Component.propTypes,
newProps,
ReactPropTypeLocations.prop);}}



return newProps;},










_checkPropTypes:function(propTypes,props,location){


var componentName=this.getName();
for(var propName in propTypes) {
if(propTypes.hasOwnProperty(propName)){
var error;
try{


invariant(
typeof propTypes[propName] === 'function',
'%s: %s type `%s` is invalid; it must be a function, usually ' + 
'from React.PropTypes.',
componentName || 'React class',
ReactPropTypeLocationNames[location],
propName);

error = propTypes[propName](props,propName,componentName,location);}
catch(ex) {
error = ex;}

if(error instanceof Error){



var addendum=getDeclarationErrorAddendum(this);

if(location === ReactPropTypeLocations.prop){

warning(
false,
'Failed Composite propType: %s%s',
error.message,
addendum);}else 

{
warning(
false,
'Failed Context Types: %s%s',
error.message,
addendum);}}}}},







receiveComponent:function(nextElement,transaction,nextContext){
var prevElement=this._currentElement;
var prevContext=this._context;

this._pendingElement = null;

this.updateComponent(
transaction,
prevElement,
nextElement,
prevContext,
nextContext);},










performUpdateIfNecessary:function(transaction){
if(this._pendingElement != null){
ReactReconciler.receiveComponent(
this,
this._pendingElement || this._currentElement,
transaction,
this._context);}



if(this._pendingStateQueue !== null || this._pendingForceUpdate){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(
this._currentElement);}



this.updateComponent(
transaction,
this._currentElement,
this._currentElement,
this._context,
this._context);}},








_warnIfContextsDiffer:function(ownerBasedContext,parentBasedContext){
ownerBasedContext = this._maskContext(ownerBasedContext);
parentBasedContext = this._maskContext(parentBasedContext);
var parentKeys=Object.keys(parentBasedContext).sort();
var displayName=this.getName() || 'ReactCompositeComponent';
for(var i=0;i < parentKeys.length;i++) {
var key=parentKeys[i];
warning(
ownerBasedContext[key] === parentBasedContext[key],
'owner-based and parent-based contexts differ ' + 
'(values: `%s` vs `%s`) for key (%s) while mounting %s ' + 
'(see: http://fb.me/react-context-by-parent)',
ownerBasedContext[key],
parentBasedContext[key],
key,
displayName);}},



















updateComponent:function(
transaction,
prevParentElement,
nextParentElement,
prevUnmaskedContext,
nextUnmaskedContext)
{
var inst=this._instance;

var nextContext=inst.context;
var nextProps=inst.props;


if(prevParentElement !== nextParentElement){
nextContext = this._processContext(nextParentElement._context);
nextProps = this._processProps(nextParentElement.props);

if(__DEV__){
if(nextUnmaskedContext != null){
this._warnIfContextsDiffer(
nextParentElement._context,
nextUnmaskedContext);}}








if(inst.componentWillReceiveProps){
inst.componentWillReceiveProps(nextProps,nextContext);}}



var nextState=this._processPendingState(nextProps,nextContext);

var shouldUpdate=
this._pendingForceUpdate || 
!inst.shouldComponentUpdate || 
inst.shouldComponentUpdate(nextProps,nextState,nextContext);

if(__DEV__){
warning(
typeof shouldUpdate !== 'undefined',
'%s.shouldComponentUpdate(): Returned undefined instead of a ' + 
'boolean value. Make sure to return true or false.',
this.getName() || 'ReactCompositeComponent');}



if(shouldUpdate){
this._pendingForceUpdate = false;

this._performComponentUpdate(
nextParentElement,
nextProps,
nextState,
nextContext,
transaction,
nextUnmaskedContext);}else 

{


this._currentElement = nextParentElement;
this._context = nextUnmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;}},



_processPendingState:function(props,context){
var inst=this._instance;
var queue=this._pendingStateQueue;
var replace=this._pendingReplaceState;
this._pendingReplaceState = false;
this._pendingStateQueue = null;

if(!queue){
return inst.state;}


var nextState=assign({},replace?queue[0]:inst.state);
for(var i=replace?1:0;i < queue.length;i++) {
var partial=queue[i];
assign(
nextState,
typeof partial === 'function'?
partial.call(inst,nextState,props,context):
partial);}



return nextState;},














_performComponentUpdate:function(
nextElement,
nextProps,
nextState,
nextContext,
transaction,
unmaskedContext)
{
var inst=this._instance;

var prevProps=inst.props;
var prevState=inst.state;
var prevContext=inst.context;

if(inst.componentWillUpdate){
inst.componentWillUpdate(nextProps,nextState,nextContext);}


this._currentElement = nextElement;
this._context = unmaskedContext;
inst.props = nextProps;
inst.state = nextState;
inst.context = nextContext;

this._updateRenderedComponent(transaction,unmaskedContext);

if(inst.componentDidUpdate){
transaction.getReactMountReady().enqueue(
inst.componentDidUpdate.bind(inst,prevProps,prevState,prevContext),
inst);}},










_updateRenderedComponent:function(transaction,context){
var prevComponentInstance=this._renderedComponent;
var prevRenderedElement=prevComponentInstance._currentElement;
var nextRenderedElement=this._renderValidatedComponent();
if(shouldUpdateReactComponent(prevRenderedElement,nextRenderedElement)){
ReactReconciler.receiveComponent(
prevComponentInstance,
nextRenderedElement,
transaction,
this._processChildContext(context));}else 

{

var thisID=this._rootNodeID;
var prevComponentID=prevComponentInstance._rootNodeID;
ReactReconciler.unmountComponent(prevComponentInstance);

this._renderedComponent = this._instantiateReactComponent(
nextRenderedElement,
this._currentElement.type);

var nextMarkup=ReactReconciler.mountComponent(
this._renderedComponent,
thisID,
transaction,
this._processChildContext(context));

this._replaceNodeWithMarkupByID(prevComponentID,nextMarkup);}},






_replaceNodeWithMarkupByID:function(prevComponentID,nextMarkup){
ReactComponentEnvironment.replaceNodeWithMarkupByID(
prevComponentID,
nextMarkup);},






_renderValidatedComponentWithoutOwnerOrContext:function(){
var inst=this._instance;
var renderedComponent=inst.render();
if(__DEV__){

if(typeof renderedComponent === 'undefined' && 
inst.render._isMockFunction){


renderedComponent = null;}}



return renderedComponent;},





_renderValidatedComponent:function(){
var renderedComponent;
var previousContext=ReactContext.current;
ReactContext.current = this._processChildContext(
this._currentElement._context);

ReactCurrentOwner.current = this;
try{
renderedComponent = 
this._renderValidatedComponentWithoutOwnerOrContext();}finally 
{
ReactContext.current = previousContext;
ReactCurrentOwner.current = null;}

invariant(

renderedComponent === null || renderedComponent === false || 
ReactElement.isValidElement(renderedComponent),
'%s.render(): A valid ReactComponent must be returned. You may have ' + 
'returned undefined, an array or some other invalid object.',
this.getName() || 'ReactCompositeComponent');

return renderedComponent;},










attachRef:function(ref,component){
var inst=this.getPublicInstance();
var refs=inst.refs === emptyObject?inst.refs = {}:inst.refs;
refs[ref] = component.getPublicInstance();},









detachRef:function(ref){
var refs=this.getPublicInstance().refs;
delete refs[ref];},








getName:function(){
var type=this._currentElement.type;
var constructor=this._instance && this._instance.constructor;
return (
type.displayName || constructor && constructor.displayName || 
type.name || constructor && constructor.name || 
null);},











getPublicInstance:function(){
return this._instance;},



_instantiateReactComponent:null};



ReactPerf.measureMethods(
ReactCompositeComponentMixin,
'ReactCompositeComponent',
{
mountComponent:'mountComponent',
updateComponent:'updateComponent',
_renderValidatedComponent:'_renderValidatedComponent'});



var ReactCompositeComponent={

Mixin:ReactCompositeComponentMixin};



module.exports = ReactCompositeComponent;});
__d('shouldUpdateReactComponent',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var warning=require('warning');












function shouldUpdateReactComponent(prevElement,nextElement){
if(prevElement != null && nextElement != null){
var prevType=typeof prevElement;
var nextType=typeof nextElement;
if(prevType === 'string' || prevType === 'number'){
return nextType === 'string' || nextType === 'number';}else 
{
if(nextType === 'object' && 
prevElement.type === nextElement.type && 
prevElement.key === nextElement.key){
var ownersMatch=prevElement._owner === nextElement._owner;
var prevName=null;
var nextName=null;
var nextDisplayName=null;
if(__DEV__){
if(!ownersMatch){
if(prevElement._owner != null && 
prevElement._owner.getPublicInstance() != null && 
prevElement._owner.getPublicInstance().constructor != null){
prevName = 
prevElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement._owner != null && 
nextElement._owner.getPublicInstance() != null && 
nextElement._owner.getPublicInstance().constructor != null){
nextName = 
nextElement._owner.getPublicInstance().constructor.displayName;}

if(nextElement.type != null && 
nextElement.type.displayName != null){
nextDisplayName = nextElement.type.displayName;}

if(nextElement.type != null && typeof nextElement.type === 'string'){
nextDisplayName = nextElement.type;}

if(typeof nextElement.type !== 'string' || 
nextElement.type === 'input' || 
nextElement.type === 'textarea'){
if(prevElement._owner != null && 
prevElement._owner._isOwnerNecessary === false || 
nextElement._owner != null && 
nextElement._owner._isOwnerNecessary === false){
if(prevElement._owner != null){
prevElement._owner._isOwnerNecessary = true;}

if(nextElement._owner != null){
nextElement._owner._isOwnerNecessary = true;}

warning(
false,
'<%s /> is being rendered by both %s and %s using the same ' + 
'key (%s) in the same place. Currently, this means that ' + 
'they don\'t preserve state. This behavior should be very ' + 
'rare so we\'re considering deprecating it. Please contact ' + 
'the React team and explain your use case so that we can ' + 
'take that into consideration.',
nextDisplayName || 'Unknown Component',
prevName || '[Unknown]',
nextName || '[Unknown]',
prevElement.key);}}}}





return ownersMatch;}}}



return false;}


module.exports = shouldUpdateReactComponent;});
__d('ReactNativeTextComponent',["ReactNativeTagHandles","NativeModules","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;

var assign=require('Object.assign');

var ReactNativeTextComponent=function(props){};



assign(ReactNativeTextComponent.prototype,{

construct:function(text){

this._currentElement = text;
this._stringText = '' + text;
this._rootNodeID = null;},


mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;
var tag=ReactNativeTagHandles.allocateTag();
RCTUIManager.createView(tag,'RCTRawText',{text:this._stringText});
return {
rootNodeID:rootID,
tag:tag};},



receiveComponent:function(nextText,transaction,context){
if(nextText !== this._currentElement){
this._currentElement = nextText;
var nextStringText='' + nextText;
if(nextStringText !== this._stringText){
this._stringText = nextStringText;
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(
this._rootNodeID),

'RCTRawText',
{text:this._stringText});}}},





unmountComponent:function(){
this._currentElement = null;
this._stringText = null;
this._rootNodeID = null;}});




module.exports = ReactNativeTextComponent;});
__d('ResponderEventPlugin',["EventConstants","EventPluginUtils","EventPropagators","NodeHandle","ReactInstanceHandles","ResponderSyntheticEvent","ResponderTouchHistoryStore","accumulate","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var EventConstants=require('EventConstants');
var EventPluginUtils=require('EventPluginUtils');
var EventPropagators=require('EventPropagators');
var NodeHandle=require('NodeHandle');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ResponderSyntheticEvent=require('ResponderSyntheticEvent');
var ResponderTouchHistoryStore=require('ResponderTouchHistoryStore');

var accumulate=require('accumulate');
var invariant=require('invariant');
var keyOf=require('keyOf');

var isStartish=EventPluginUtils.isStartish;
var isMoveish=EventPluginUtils.isMoveish;
var isEndish=EventPluginUtils.isEndish;
var executeDirectDispatch=EventPluginUtils.executeDirectDispatch;
var hasDispatches=EventPluginUtils.hasDispatches;
var executeDispatchesInOrderStopAtTrue=
EventPluginUtils.executeDispatchesInOrderStopAtTrue;





var responderID=null;





var trackedTouchCount=0;




var previousActiveTouches=0;

var changeResponder=function(nextResponderID){
var oldResponderID=responderID;
responderID = nextResponderID;
if(ResponderEventPlugin.GlobalResponderHandler !== null){
ResponderEventPlugin.GlobalResponderHandler.onChange(
oldResponderID,
nextResponderID);}};




var eventTypes={




startShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onStartShouldSetResponder:null}),
captured:keyOf({onStartShouldSetResponderCapture:null})}},












scrollShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onScrollShouldSetResponder:null}),
captured:keyOf({onScrollShouldSetResponderCapture:null})}},










selectionChangeShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onSelectionChangeShouldSetResponder:null}),
captured:keyOf({onSelectionChangeShouldSetResponderCapture:null})}},







moveShouldSetResponder:{
phasedRegistrationNames:{
bubbled:keyOf({onMoveShouldSetResponder:null}),
captured:keyOf({onMoveShouldSetResponderCapture:null})}},






responderStart:{registrationName:keyOf({onResponderStart:null})},
responderMove:{registrationName:keyOf({onResponderMove:null})},
responderEnd:{registrationName:keyOf({onResponderEnd:null})},
responderRelease:{registrationName:keyOf({onResponderRelease:null})},
responderTerminationRequest:{
registrationName:keyOf({onResponderTerminationRequest:null})},

responderGrant:{registrationName:keyOf({onResponderGrant:null})},
responderReject:{registrationName:keyOf({onResponderReject:null})},
responderTerminate:{registrationName:keyOf({onResponderTerminate:null})}};






































































































































































































function setResponderAndExtractTransfer(
topLevelType,
topLevelTargetID,
nativeEvent){
var shouldSetEventType=
isStartish(topLevelType)?eventTypes.startShouldSetResponder:
isMoveish(topLevelType)?eventTypes.moveShouldSetResponder:
topLevelType === EventConstants.topLevelTypes.topSelectionChange?
eventTypes.selectionChangeShouldSetResponder:
eventTypes.scrollShouldSetResponder;


var bubbleShouldSetFrom=!responderID?
topLevelTargetID:
ReactInstanceHandles._getFirstCommonAncestorID(responderID,topLevelTargetID);





var skipOverBubbleShouldSetFrom=bubbleShouldSetFrom === responderID;
var shouldSetEvent=ResponderSyntheticEvent.getPooled(
shouldSetEventType,
bubbleShouldSetFrom,
nativeEvent);

shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
if(skipOverBubbleShouldSetFrom){
EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);}else 
{
EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);}

var wantsResponderID=executeDispatchesInOrderStopAtTrue(shouldSetEvent);
if(!shouldSetEvent.isPersistent()){
shouldSetEvent.constructor.release(shouldSetEvent);}


if(!wantsResponderID || wantsResponderID === responderID){
return null;}

var extracted;
var grantEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderGrant,
wantsResponderID,
nativeEvent);

grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;

EventPropagators.accumulateDirectDispatches(grantEvent);
if(responderID){

var terminationRequestEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderTerminationRequest,
responderID,
nativeEvent);

terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminationRequestEvent);
var shouldSwitch=!hasDispatches(terminationRequestEvent) || 
executeDirectDispatch(terminationRequestEvent);
if(!terminationRequestEvent.isPersistent()){
terminationRequestEvent.constructor.release(terminationRequestEvent);}


if(shouldSwitch){
var terminateType=eventTypes.responderTerminate;
var terminateEvent=ResponderSyntheticEvent.getPooled(
terminateType,
responderID,
nativeEvent);

terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(terminateEvent);
extracted = accumulate(extracted,[grantEvent,terminateEvent]);
changeResponder(wantsResponderID);}else 
{
var rejectEvent=ResponderSyntheticEvent.getPooled(
eventTypes.responderReject,
wantsResponderID,
nativeEvent);

rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(rejectEvent);
extracted = accumulate(extracted,rejectEvent);}}else 

{
extracted = accumulate(extracted,grantEvent);
changeResponder(wantsResponderID);}

return extracted;}










function canTriggerTransfer(topLevelType,topLevelTargetID){
return topLevelTargetID && (
topLevelType === EventConstants.topLevelTypes.topScroll || 
trackedTouchCount > 0 && 
topLevelType === EventConstants.topLevelTypes.topSelectionChange || 
isStartish(topLevelType) || 
isMoveish(topLevelType));}










function noResponderTouches(nativeEvent){
var touches=nativeEvent.touches;
if(!touches || touches.length === 0){
return true;}

for(var i=0;i < touches.length;i++) {
var activeTouch=touches[i];
var target=activeTouch.target;
if(target !== null && target !== undefined && target !== 0){

var commonAncestor=
ReactInstanceHandles._getFirstCommonAncestorID(
responderID,
NodeHandle.getRootNodeID(target));

if(commonAncestor === responderID){
return false;}}}



return true;}



var ResponderEventPlugin={

getResponderID:function(){
return responderID;},


eventTypes:eventTypes,













extractEvents:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){

if(isStartish(topLevelType)){
trackedTouchCount += 1;}else 
if(isEndish(topLevelType)){
trackedTouchCount -= 1;
invariant(
trackedTouchCount >= 0,
'Ended a touch event which was not counted in trackedTouchCount.');}



ResponderTouchHistoryStore.recordTouchTrack(topLevelType,nativeEvent);

var extracted=canTriggerTransfer(topLevelType,topLevelTargetID)?
setResponderAndExtractTransfer(topLevelType,topLevelTargetID,nativeEvent):
null;










var isResponderTouchStart=responderID && isStartish(topLevelType);
var isResponderTouchMove=responderID && isMoveish(topLevelType);
var isResponderTouchEnd=responderID && isEndish(topLevelType);
var incrementalTouch=
isResponderTouchStart?eventTypes.responderStart:
isResponderTouchMove?eventTypes.responderMove:
isResponderTouchEnd?eventTypes.responderEnd:
null;

if(incrementalTouch){
var gesture=
ResponderSyntheticEvent.getPooled(incrementalTouch,responderID,nativeEvent);
gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(gesture);
extracted = accumulate(extracted,gesture);}


var isResponderTerminate=
responderID && 
topLevelType === EventConstants.topLevelTypes.topTouchCancel;
var isResponderRelease=
responderID && 
!isResponderTerminate && 
isEndish(topLevelType) && 
noResponderTouches(nativeEvent);
var finalTouch=
isResponderTerminate?eventTypes.responderTerminate:
isResponderRelease?eventTypes.responderRelease:
null;
if(finalTouch){
var finalEvent=
ResponderSyntheticEvent.getPooled(finalTouch,responderID,nativeEvent);
finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;
EventPropagators.accumulateDirectDispatches(finalEvent);
extracted = accumulate(extracted,finalEvent);
changeResponder(null);}


var numberActiveTouches=
ResponderTouchHistoryStore.touchHistory.numberActiveTouches;
if(ResponderEventPlugin.GlobalInteractionHandler && 
numberActiveTouches !== previousActiveTouches){
ResponderEventPlugin.GlobalInteractionHandler.onChange(
numberActiveTouches);}


previousActiveTouches = numberActiveTouches;

return extracted;},


GlobalResponderHandler:null,
GlobalInteractionHandler:null,

injection:{





injectGlobalResponderHandler:function(GlobalResponderHandler){
ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;},






injectGlobalInteractionHandler:function(GlobalInteractionHandler){
ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;}}};




module.exports = ResponderEventPlugin;});
__d('ResponderSyntheticEvent',["SyntheticEvent"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";




















var SyntheticEvent=require("SyntheticEvent");






var ResponderEventInterface={
touchHistory:function(nativeEvent){
return null;}};









function ResponderSyntheticEvent(dispatchConfig,dispatchMarker,nativeEvent){
SyntheticEvent.call(this,dispatchConfig,dispatchMarker,nativeEvent);}


SyntheticEvent.augmentClass(ResponderSyntheticEvent,ResponderEventInterface);

module.exports = ResponderSyntheticEvent;});
__d('ResponderTouchHistoryStore',["EventPluginUtils","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var EventPluginUtils=require('EventPluginUtils');

var invariant=require('invariant');

var isMoveish=EventPluginUtils.isMoveish;
var isStartish=EventPluginUtils.isStartish;
var isEndish=EventPluginUtils.isEndish;

var MAX_TOUCH_BANK=20;
















var touchHistory={
touchBank:[],
numberActiveTouches:0,



indexOfSingleActiveTouch:-1,
mostRecentTimeStamp:0};


var timestampForTouch=function(touch){



return touch.timeStamp || touch.timestamp;};







var initializeTouchData=function(touch){
return {
touchActive:true,
startTimeStamp:timestampForTouch(touch),
startPageX:touch.pageX,
startPageY:touch.pageY,
currentPageX:touch.pageX,
currentPageY:touch.pageY,
currentTimeStamp:timestampForTouch(touch),
previousPageX:touch.pageX,
previousPageY:touch.pageY,
previousTimeStamp:timestampForTouch(touch)};};



var reinitializeTouchTrack=function(touchTrack,touch){
touchTrack.touchActive = true;
touchTrack.startTimeStamp = timestampForTouch(touch);
touchTrack.startPageX = touch.pageX;
touchTrack.startPageY = touch.pageY;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.previousPageX = touch.pageX;
touchTrack.previousPageY = touch.pageY;
touchTrack.previousTimeStamp = timestampForTouch(touch);};


var validateTouch=function(touch){
var identifier=touch.identifier;
invariant(identifier != null,'Touch object is missing identifier');
if(identifier > MAX_TOUCH_BANK){
console.warn(
'Touch identifier ' + identifier + ' is greater than maximum ' + 
'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 
'backfilling array locations for all of the indices.');}};




var recordStartTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var identifier=touch.identifier;
var touchTrack=touchBank[identifier];
if(__DEV__){
validateTouch(touch);}

if(!touchTrack){
touchBank[touch.identifier] = initializeTouchData(touch);}else 
{
reinitializeTouchTrack(touchTrack,touch);}

touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordMoveTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.touchActive = true;
touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var recordEndTouchData=function(touch){
var touchBank=touchHistory.touchBank;
var touchTrack=touchBank[touch.identifier];
if(__DEV__){
validateTouch(touch);
invariant(touchTrack,'Touch data should have been recorded on start');}

touchTrack.previousPageX = touchTrack.currentPageX;
touchTrack.previousPageY = touchTrack.currentPageY;
touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;
touchTrack.currentPageX = touch.pageX;
touchTrack.currentPageY = touch.pageY;
touchTrack.currentTimeStamp = timestampForTouch(touch);
touchTrack.touchActive = false;
touchHistory.mostRecentTimeStamp = timestampForTouch(touch);};


var ResponderTouchHistoryStore={
recordTouchTrack:function(topLevelType,nativeEvent){
var touchBank=touchHistory.touchBank;
if(isMoveish(topLevelType)){
nativeEvent.changedTouches.forEach(recordMoveTouchData);}else 
if(isStartish(topLevelType)){
nativeEvent.changedTouches.forEach(recordStartTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;}}else 

if(isEndish(topLevelType)){
nativeEvent.changedTouches.forEach(recordEndTouchData);
touchHistory.numberActiveTouches = nativeEvent.touches.length;
if(touchHistory.numberActiveTouches === 1){
for(var i=0;i < touchBank.length;i++) {
var touchTrackToCheck=touchBank[i];
if(touchTrackToCheck != null && touchTrackToCheck.touchActive){
touchHistory.indexOfSingleActiveTouch = i;
break;}}


if(__DEV__){
var activeTouchData=touchBank[touchHistory.indexOfSingleActiveTouch];
var foundActive=activeTouchData != null && !!activeTouchData.touchActive;
invariant(foundActive,'Cannot find single active touch');}}}},





touchHistory:touchHistory};



module.exports = ResponderTouchHistoryStore;});
__d('accumulate',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');








function accumulate(current,next){
invariant(
next != null,
'accumulate(...): Accumulated items must be not be null or undefined.');

if(current == null){
return next;}else 
{


var currentIsArray=Array.isArray(current);
var nextIsArray=Array.isArray(next);
if(currentIsArray){
return current.concat(next);}else 
{
if(nextIsArray){
return [current].concat(next);}else 
{
return [current,next];}}}}





module.exports = accumulate;});
__d('UniversalWorkerNodeHandle',["ReactNativeTagHandles","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 



ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');

var UniversalWorkerNodeHandle={
getRootNodeID:function(nodeHandle){
invariant(
nodeHandle !== undefined && nodeHandle !== null && nodeHandle !== 0,
'No node handle defined');

return ReactNativeTagHandles.tagToRootNodeID[nodeHandle];}};



module.exports = UniversalWorkerNodeHandle;});
__d('createReactNativeComponentClass',["ReactNativeBaseComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactNativeBaseComponent=require('ReactNativeBaseComponent');











var createReactNativeComponentClass=function(
viewConfig)
{
var Constructor=function(element){
this._currentElement = element;

this._rootNodeID = null;
this._renderedChildren = null;
this.previousFlattenedStyle = null;};

Constructor.displayName = viewConfig.uiViewClassName;
Constructor.prototype = new ReactNativeBaseComponent(viewConfig);
Constructor.prototype.constructor = Constructor;

return Constructor;};


module.exports = createReactNativeComponentClass;});
__d('ReactNativeBaseComponent',["NativeMethodsMixin","ReactNativeEventEmitter","ReactNativeStyleAttributes","ReactNativeTagHandles","ReactMultiChild","NativeModules","styleDiffer","deepFreezeAndThrowOnMutationInDev","diffRawProperties","flattenStyle","precomputeStyle","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var ReactNativeEventEmitter=require('ReactNativeEventEmitter');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var ReactMultiChild=require('ReactMultiChild');
var RCTUIManager=require('NativeModules').UIManager;

var styleDiffer=require('styleDiffer');
var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var diffRawProperties=require('diffRawProperties');
var flattenStyle=require('flattenStyle');
var precomputeStyle=require('precomputeStyle');
var warning=require('warning');

var registrationNames=ReactNativeEventEmitter.registrationNames;
var putListener=ReactNativeEventEmitter.putListener;
var deleteAllListeners=ReactNativeEventEmitter.deleteAllListeners;












var ReactNativeBaseComponent=function(
viewConfig)
{
this.viewConfig = viewConfig;};












var cachedIndexArray=function(size){
var cachedResult=cachedIndexArray._cache[size];
if(!cachedResult){
var arr=[];
for(var i=0;i < size;i++) {
arr[i] = i;}

cachedIndexArray._cache[size] = arr;
return arr;}else 
{
return cachedResult;}};


cachedIndexArray._cache = {};





ReactNativeBaseComponent.Mixin = {
getPublicInstance:function(){

return this;},


construct:function(element){
this._currentElement = element;},


unmountComponent:function(){
deleteAllListeners(this._rootNodeID);
this.unmountChildren();
this._rootNodeID = null;},










initializeChildren:function(children,containerTag,transaction,context){
var mountImages=this.mountChildren(children,transaction,context);



if(mountImages.length){
var indexes=cachedIndexArray(mountImages.length);


var createdTags=[];
for(var i=0;i < mountImages.length;i++) {
var mountImage=mountImages[i];
var childTag=mountImage.tag;
var childID=mountImage.rootNodeID;
warning(
mountImage && mountImage.rootNodeID && mountImage.tag,
'Mount image returned does not have required data');

ReactNativeTagHandles.associateRootNodeIDWithMountedNodeHandle(
childID,
childTag);

createdTags[i] = mountImage.tag;}

RCTUIManager.
manageChildren(containerTag,null,null,createdTags,indexes,null);}},












computeUpdatedProperties:function(prevProps,nextProps,validAttributes){
if(__DEV__){
for(var key in nextProps) {
if(nextProps.hasOwnProperty(key) && 
nextProps[key] && 
validAttributes[key]){
deepFreezeAndThrowOnMutationInDev(nextProps[key]);}}}




var updatePayload=diffRawProperties(
null,
prevProps,
nextProps,
validAttributes);







if(styleDiffer(nextProps.style,prevProps.style)){
var nextFlattenedStyle=precomputeStyle(flattenStyle(nextProps.style));
updatePayload = diffRawProperties(
updatePayload,
this.previousFlattenedStyle,
nextFlattenedStyle,
ReactNativeStyleAttributes);

this.previousFlattenedStyle = nextFlattenedStyle;}


return updatePayload;},











receiveComponent:function(nextElement,transaction,context){
var prevElement=this._currentElement;
this._currentElement = nextElement;

var updatePayload=this.computeUpdatedProperties(
prevElement.props,
nextElement.props,
this.viewConfig.validAttributes);


if(updatePayload){
RCTUIManager.updateView(
ReactNativeTagHandles.mostRecentMountedNodeHandleForRootNodeID(this._rootNodeID),
this.viewConfig.uiViewClassName,
updatePayload);}



this._reconcileListenersUponUpdate(
prevElement.props,
nextElement.props);

this.updateChildren(nextElement.props.children,transaction,context);},





_registerListenersUponCreation:function(initialProps){
for(var key in initialProps) {


if(registrationNames[key] && initialProps[key]){
var listener=initialProps[key];
putListener(this._rootNodeID,key,listener);}}},









_reconcileListenersUponUpdate:function(prevProps,nextProps){
for(var key in nextProps) {
if(registrationNames[key] && nextProps[key] !== prevProps[key]){
putListener(this._rootNodeID,key,nextProps[key]);}}},









mountComponent:function(rootID,transaction,context){
this._rootNodeID = rootID;

var tag=ReactNativeTagHandles.allocateTag();

this.previousFlattenedStyle = {};
var updatePayload=this.computeUpdatedProperties(
{},
this._currentElement.props,
this.viewConfig.validAttributes);

RCTUIManager.createView(tag,this.viewConfig.uiViewClassName,updatePayload);

this._registerListenersUponCreation(this._currentElement.props);
this.initializeChildren(
this._currentElement.props.children,
tag,
transaction,
context);

return {
rootNodeID:rootID,
tag:tag};}};








Object.assign(
ReactNativeBaseComponent.prototype,
ReactMultiChild.Mixin,
ReactNativeBaseComponent.Mixin,
NativeMethodsMixin);


module.exports = ReactNativeBaseComponent;});
__d('NativeMethodsMixin',["NativeModules","TextInputState","findNodeHandle","flattenStyle","invariant","mergeFast","precomputeStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTPOPAnimationManager=NativeModules.POPAnimationManager;
var RCTUIManager=NativeModules.UIManager;
var TextInputState=require('TextInputState');

var findNodeHandle=require('findNodeHandle');
var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var mergeFast=require('mergeFast');
var precomputeStyle=require('precomputeStyle');

















var animationIDInvariant=function(
funcName,
anim)
{
invariant(
anim,
funcName + ' must be called with a valid animation ID returned from' + 
' POPAnimation.createAnimation, received: "' + anim + '"');};



var NativeMethodsMixin={
addAnimation:function(anim,callback){
animationIDInvariant('addAnimation',anim);
RCTPOPAnimationManager.addAnimation(
findNodeHandle(this),
anim,
mountSafeCallback(this,callback));},



removeAnimation:function(anim){
animationIDInvariant('removeAnimation',anim);
RCTPOPAnimationManager.removeAnimation(findNodeHandle(this),anim);},


measure:function(callback){
RCTUIManager.measure(
findNodeHandle(this),
mountSafeCallback(this,callback));},



measureLayout:function(
relativeToNativeNode,
onSuccess,
onFail)
{
RCTUIManager.measureLayout(
findNodeHandle(this),
relativeToNativeNode,
mountSafeCallback(this,onFail),
mountSafeCallback(this,onSuccess));},








setNativeProps:function(nativeProps){





var hasOnlyStyle=true;
for(var key in nativeProps) {
if(key !== 'style'){
hasOnlyStyle = false;
break;}}


var style=precomputeStyle(flattenStyle(nativeProps.style));

var props=null;
if(hasOnlyStyle){
props = style;}else 
if(!style){
props = nativeProps;}else 
{
props = mergeFast(nativeProps,style);}


RCTUIManager.updateView(
findNodeHandle(this),
this.viewConfig.uiViewClassName,
props);},



focus:function(){
TextInputState.focusTextInput(findNodeHandle(this));},


blur:function(){
TextInputState.blurTextInput(findNodeHandle(this));}};



function throwOnStylesProp(component,props){
if(props.styles !== undefined){
var owner=component._owner || null;
var name=component.constructor.displayName;
var msg='`styles` is not a supported property of `' + name + '`, did ' + 
'you mean `style` (singular)?';
if(owner && owner.constructor && owner.constructor.displayName){
msg += '\n\nCheck the `' + owner.constructor.displayName + '` parent ' + 
' component.';}

throw new Error(msg);}}


if(__DEV__){



var NativeMethodsMixin_DEV=NativeMethodsMixin;
invariant(
!NativeMethodsMixin_DEV.componentWillMount && 
!NativeMethodsMixin_DEV.componentWillReceiveProps,
'Do not override existing functions.');

NativeMethodsMixin_DEV.componentWillMount = function(){
throwOnStylesProp(this,this.props);};

NativeMethodsMixin_DEV.componentWillReceiveProps = function(newProps){
throwOnStylesProp(this,newProps);};}







var mountSafeCallback=function(context,callback){
return function(){
if(!callback || context.isMounted && !context.isMounted()){
return;}

return callback.apply(context,arguments);};};



module.exports = NativeMethodsMixin;});
__d('TextInputState',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';
















var RCTUIManager=require('NativeModules').UIManager;

var TextInputState={



_currentlyFocusedID:null,





currentlyFocusedField:function(){
return this._currentlyFocusedID;},







focusTextInput:function(textFieldID){
if(this._currentlyFocusedID !== textFieldID && textFieldID !== null){
this._currentlyFocusedID = textFieldID;
RCTUIManager.focus(textFieldID);}},








blurTextInput:function(textFieldID){
if(this._currentlyFocusedID === textFieldID && textFieldID !== null){
this._currentlyFocusedID = null;
RCTUIManager.blur(textFieldID);}}};




module.exports = TextInputState;});
__d('findNodeHandle',["ReactCurrentOwner","ReactInstanceMap","ReactNativeTagHandles","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

var invariant=require('invariant');
var warning=require('warning');































function findNodeHandle(componentOrHandle){
if(__DEV__){
var owner=ReactCurrentOwner.current;
if(owner !== null){
warning(
owner._warnedAboutRefsInRender,
'%s is accessing findNodeHandle inside its render(). ' + 
'render() should be a pure function of props and state. It should ' + 
'never access something that requires stale data from the previous ' + 
'render, such as refs. Move this logic to componentDidMount and ' + 
'componentDidUpdate instead.',
owner.getName() || 'A component');

owner._warnedAboutRefsInRender = true;}}


if(componentOrHandle == null){
return null;}

if(typeof componentOrHandle === 'number'){

return componentOrHandle;}


var component=componentOrHandle;



var internalInstance=ReactInstanceMap.get(component);
if(internalInstance){
return ReactNativeTagHandles.rootNodeIDToTag[internalInstance._rootNodeID];}else 
{
var rootNodeID=component._rootNodeID;
if(rootNodeID){
return ReactNativeTagHandles.rootNodeIDToTag[rootNodeID];}else 
{
invariant(


typeof component === 'object' && 
'_rootNodeID' in component || 


component.render != null && 
typeof component.render === 'function',

'findNodeHandle(...): Argument is not a component ' + 
'(type: %s, keys: %s)',
typeof component,
Object.keys(component));

invariant(
false,
'findNodeHandle(...): Unable to find node handle for unmounted ' + 
'component.');}}}





module.exports = findNodeHandle;});
__d('flattenStyle',["StyleSheetRegistry","invariant","mergeIntoFast"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var StyleSheetRegistry=require('StyleSheetRegistry');
var invariant=require('invariant');
var mergeIntoFast=require('mergeIntoFast');




function getStyle(style){
if(typeof style === 'number'){
return StyleSheetRegistry.getStyleByID(style);}

return style;}





function flattenStyle(style){
if(!style){
return undefined;}

invariant(style !== true,'style may be false but not true');

if(!Array.isArray(style)){
return getStyle(style);}


var result={};
for(var i=0;i < style.length;++i) {
var computedStyle=flattenStyle(style[i]);
if(computedStyle){
mergeIntoFast(result,computedStyle);}}


return result;}


module.exports = flattenStyle;});
__d('StyleSheetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var styles={};
var uniqueID=1;
var emptyStyle={};var 

StyleSheetRegistry=(function(){function StyleSheetRegistry(){_classCallCheck(this,StyleSheetRegistry);}_createClass(StyleSheetRegistry,null,[{key:'registerStyle',value:
function registerStyle(style){
var id=++uniqueID;
if(__DEV__){
Object.freeze(style);}

styles[id] = style;
return id;}},{key:'getStyleByID',value:


function getStyleByID(id){
if(!id){


return emptyStyle;}


var style=styles[id];
if(!style){
console.warn('Invalid style with id `' + id + '`. Skipping ...');
return emptyStyle;}

return style;}}]);return StyleSheetRegistry;})();



module.exports = StyleSheetRegistry;});
__d('mergeIntoFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var mergeIntoFast=function(one,two){
for(var keyTwo in two) {
one[keyTwo] = two[keyTwo];}};



module.exports = mergeIntoFast;});
__d('mergeFast',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















var mergeFast=function(one,two){
var ret={};
for(var keyOne in one) {
ret[keyOne] = one[keyOne];}

for(var keyTwo in two) {
ret[keyTwo] = two[keyTwo];}

return ret;};


module.exports = mergeFast;});
__d('precomputeStyle',["MatrixMath","Platform","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var MatrixMath=require('MatrixMath');
var Platform=require('Platform');

var deepFreezeAndThrowOnMutationInDev=require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');
var stringifySafe=require('stringifySafe');





function precomputeStyle(style){
if(!style || !style.transform){
return style;}

invariant(
!style.transformMatrix,
'transformMatrix and transform styles cannot be used on the same component');

var newStyle=_precomputeTransforms(_extends({},style));
deepFreezeAndThrowOnMutationInDev(newStyle);
return newStyle;}










function _precomputeTransforms(style){var 
transform=style.transform;
var result=MatrixMath.createIdentityMatrix();

transform.forEach(function(transformation){
var key=Object.keys(transformation)[0];
var value=transformation[key];
if(__DEV__){
_validateTransform(key,value,transformation);}


switch(key){
case 'matrix':
MatrixMath.multiplyInto(result,result,value);
break;
case 'rotate':
_multiplyTransform(result,MatrixMath.reuseRotateZCommand,[_convertToRadians(value)]);
break;
case 'scale':
_multiplyTransform(result,MatrixMath.reuseScaleCommand,[value]);
break;
case 'scaleX':
_multiplyTransform(result,MatrixMath.reuseScaleXCommand,[value]);
break;
case 'scaleY':
_multiplyTransform(result,MatrixMath.reuseScaleYCommand,[value]);
break;
case 'translate':
_multiplyTransform(result,MatrixMath.reuseTranslate3dCommand,[value[0],value[1],value[2] || 0]);
break;
case 'translateX':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[value,0]);
break;
case 'translateY':
_multiplyTransform(result,MatrixMath.reuseTranslate2dCommand,[0,value]);
break;
default:
throw new Error('Invalid transform name: ' + key);}});







if(Platform.OS === 'android'){
return _extends({},
style,{
transformMatrix:result,
decomposedMatrix:MatrixMath.decomposeMatrix(result)});}


return _extends({},
style,{
transformMatrix:result});}






function _multiplyTransform(
result,
matrixMathFunction,
args)
{
var matrixToApply=MatrixMath.createIdentityMatrix();
var argsWithIdentity=[matrixToApply].concat(args);
matrixMathFunction.apply(this,argsWithIdentity);
MatrixMath.multiplyInto(result,result,matrixToApply);}






function _convertToRadians(value){
var floatValue=parseFloat(value,10);
return value.indexOf('rad') > -1?floatValue:floatValue * Math.PI / 180;}


function _validateTransform(key,value,transformation){
invariant(
!value.getValue,
'You passed an animated value or spring to a normal component. ' + 
'You need to wrap that component in an Animated. For example, ' + 
'replace <View /> by <Animated.View />.');


var multivalueTransforms=[
'matrix',
'translate'];

if(multivalueTransforms.indexOf(key) !== -1){
invariant(
Array.isArray(value),
'Transform with key of %s must have an array as the value: %s',
key,
stringifySafe(transformation));}


switch(key){
case 'matrix':
invariant(
value.length === 9 || value.length === 16,
'Matrix transform must have a length of 9 (2d) or 16 (3d). ' + 
'Provided matrix has a length of %s: %s',
value.length,
stringifySafe(transformation));

break;
case 'translate':
break;
case 'rotate':
invariant(
typeof value === 'string',
'Transform with key of "%s" must be a string: %s',
key,
stringifySafe(transformation));

invariant(
value.indexOf('deg') > -1 || value.indexOf('rad') > -1,
'Rotate transform must be expressed in degrees (deg) or radians ' + 
'(rad): %s',
stringifySafe(transformation));

break;
default:
invariant(
typeof value === 'number',
'Transform with key of "%s" must be a number: %s',
key,
stringifySafe(transformation));}}




module.exports = precomputeStyle;});
__d('MatrixMath',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var invariant=require('invariant');





var MatrixMath={
createIdentityMatrix:function(){
return [
1,0,0,0,
0,1,0,0,
0,0,1,0,
0,0,0,1];},



createCopy:function(m){
return [
m[0],m[1],m[2],m[3],
m[4],m[5],m[6],m[7],
m[8],m[9],m[10],m[11],
m[12],m[13],m[14],m[15]];},



createTranslate2d:function(x,y){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseTranslate2dCommand(mat,x,y);
return mat;},


reuseTranslate2dCommand:function(matrixCommand,x,y){
matrixCommand[12] = x;
matrixCommand[13] = y;},


reuseTranslate3dCommand:function(matrixCommand,x,y,z){
matrixCommand[12] = x;
matrixCommand[13] = y;
matrixCommand[14] = z;},


createScale:function(factor){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseScaleCommand(mat,factor);
return mat;},


reuseScaleCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;
matrixCommand[5] = factor;},


reuseScale3dCommand:function(matrixCommand,x,y,z){
matrixCommand[0] = x;
matrixCommand[5] = y;
matrixCommand[10] = z;},


reuseScaleXCommand:function(matrixCommand,factor){
matrixCommand[0] = factor;},


reuseScaleYCommand:function(matrixCommand,factor){
matrixCommand[5] = factor;},


reuseScaleZCommand:function(matrixCommand,factor){
matrixCommand[10] = factor;},


reuseRotateXCommand:function(matrixCommand,radians){
matrixCommand[5] = Math.cos(radians);
matrixCommand[6] = Math.sin(radians);
matrixCommand[9] = -Math.sin(radians);
matrixCommand[10] = Math.cos(radians);},


reuseRotateYCommand:function(matrixCommand,amount){
matrixCommand[0] = Math.cos(amount);
matrixCommand[2] = -Math.sin(amount);
matrixCommand[8] = Math.sin(amount);
matrixCommand[10] = Math.cos(amount);},



reuseRotateZCommand:function(matrixCommand,radians){
matrixCommand[0] = Math.cos(radians);
matrixCommand[1] = Math.sin(radians);
matrixCommand[4] = -Math.sin(radians);
matrixCommand[5] = Math.cos(radians);},


createRotateZ:function(radians){
var mat=MatrixMath.createIdentityMatrix();
MatrixMath.reuseRotateZCommand(mat,radians);
return mat;},


multiplyInto:function(out,a,b){
var a00=a[0],a01=a[1],a02=a[2],a03=a[3],
a10=a[4],a11=a[5],a12=a[6],a13=a[7],
a20=a[8],a21=a[9],a22=a[10],a23=a[11],
a30=a[12],a31=a[13],a32=a[14],a33=a[15];

var b0=b[0],b1=b[1],b2=b[2],b3=b[3];
out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];
out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];
out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;

b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];
out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;},


determinant:function(matrix){var 

m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return (
m03 * m12 * m21 * m30 - m02 * m13 * m21 * m30 - 
m03 * m11 * m22 * m30 + m01 * m13 * m22 * m30 + 
m02 * m11 * m23 * m30 - m01 * m12 * m23 * m30 - 
m03 * m12 * m20 * m31 + m02 * m13 * m20 * m31 + 
m03 * m10 * m22 * m31 - m00 * m13 * m22 * m31 - 
m02 * m10 * m23 * m31 + m00 * m12 * m23 * m31 + 
m03 * m11 * m20 * m32 - m01 * m13 * m20 * m32 - 
m03 * m10 * m21 * m32 + m00 * m13 * m21 * m32 + 
m01 * m10 * m23 * m32 - m00 * m11 * m23 * m32 - 
m02 * m11 * m20 * m33 + m01 * m12 * m20 * m33 + 
m02 * m10 * m21 * m33 - m00 * m12 * m21 * m33 - 
m01 * m10 * m22 * m33 + m00 * m11 * m22 * m33);},










inverse:function(matrix){
var det=MatrixMath.determinant(matrix);
if(!det){
return matrix;}var 


m00=



matrix[0];var m01=matrix[1];var m02=matrix[2];var m03=matrix[3];var m10=matrix[4];var m11=matrix[5];var m12=matrix[6];var m13=matrix[7];var m20=matrix[8];var m21=matrix[9];var m22=matrix[10];var m23=matrix[11];var m30=matrix[12];var m31=matrix[13];var m32=matrix[14];var m33=matrix[15];
return [
(m12 * m23 * m31 - m13 * m22 * m31 + m13 * m21 * m32 - m11 * m23 * m32 - m12 * m21 * m33 + m11 * m22 * m33) / det,
(m03 * m22 * m31 - m02 * m23 * m31 - m03 * m21 * m32 + m01 * m23 * m32 + m02 * m21 * m33 - m01 * m22 * m33) / det,
(m02 * m13 * m31 - m03 * m12 * m31 + m03 * m11 * m32 - m01 * m13 * m32 - m02 * m11 * m33 + m01 * m12 * m33) / det,
(m03 * m12 * m21 - m02 * m13 * m21 - m03 * m11 * m22 + m01 * m13 * m22 + m02 * m11 * m23 - m01 * m12 * m23) / det,
(m13 * m22 * m30 - m12 * m23 * m30 - m13 * m20 * m32 + m10 * m23 * m32 + m12 * m20 * m33 - m10 * m22 * m33) / det,
(m02 * m23 * m30 - m03 * m22 * m30 + m03 * m20 * m32 - m00 * m23 * m32 - m02 * m20 * m33 + m00 * m22 * m33) / det,
(m03 * m12 * m30 - m02 * m13 * m30 - m03 * m10 * m32 + m00 * m13 * m32 + m02 * m10 * m33 - m00 * m12 * m33) / det,
(m02 * m13 * m20 - m03 * m12 * m20 + m03 * m10 * m22 - m00 * m13 * m22 - m02 * m10 * m23 + m00 * m12 * m23) / det,
(m11 * m23 * m30 - m13 * m21 * m30 + m13 * m20 * m31 - m10 * m23 * m31 - m11 * m20 * m33 + m10 * m21 * m33) / det,
(m03 * m21 * m30 - m01 * m23 * m30 - m03 * m20 * m31 + m00 * m23 * m31 + m01 * m20 * m33 - m00 * m21 * m33) / det,
(m01 * m13 * m30 - m03 * m11 * m30 + m03 * m10 * m31 - m00 * m13 * m31 - m01 * m10 * m33 + m00 * m11 * m33) / det,
(m03 * m11 * m20 - m01 * m13 * m20 - m03 * m10 * m21 + m00 * m13 * m21 + m01 * m10 * m23 - m00 * m11 * m23) / det,
(m12 * m21 * m30 - m11 * m22 * m30 - m12 * m20 * m31 + m10 * m22 * m31 + m11 * m20 * m32 - m10 * m21 * m32) / det,
(m01 * m22 * m30 - m02 * m21 * m30 + m02 * m20 * m31 - m00 * m22 * m31 - m01 * m20 * m32 + m00 * m21 * m32) / det,
(m02 * m11 * m30 - m01 * m12 * m30 - m02 * m10 * m31 + m00 * m12 * m31 + m01 * m10 * m32 - m00 * m11 * m32) / det,
(m01 * m12 * m20 - m02 * m11 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 + m00 * m11 * m22) / det];},






transpose:function(m){
return [
m[0],m[4],m[8],m[12],
m[1],m[5],m[9],m[13],
m[2],m[6],m[10],m[14],
m[3],m[7],m[11],m[15]];},






multiplyVectorByMatrix:function(
v,
m)
{var 
vx=v[0];var vy=v[1];var vz=v[2];var vw=v[3];
return [
vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],
vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],
vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],
vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15]];},






v3Length:function(a){
return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);},





v3Normalize:function(
vector,
v3Length)
{
var im=1 / (v3Length || MatrixMath.v3Length(vector));
return [
vector[0] * im,
vector[1] * im,
vector[2] * im];},







v3Dot:function(a,b){
return a[0] * b[0] + 
a[1] * b[1] + 
a[2] * b[2];},






v3Combine:function(
a,
b,
aScale,
bScale)
{
return [
aScale * a[0] + bScale * b[0],
aScale * a[1] + bScale * b[1],
aScale * a[2] + bScale * b[2]];},







v3Cross:function(a,b){
return [
a[1] * b[2] - a[2] * b[1],
a[2] * b[0] - a[0] * b[2],
a[0] * b[1] - a[1] * b[0]];},



















quaternionToDegreesXYZ:function(q,matrix,row){var 
qx=q[0];var qy=q[1];var qz=q[2];var qw=q[3];
var qw2=qw * qw;
var qx2=qx * qx;
var qy2=qy * qy;
var qz2=qz * qz;
var test=qx * qy + qz * qw;
var unit=qw2 + qx2 + qy2 + qz2;
var conv=180 / Math.PI;

if(test > 0.49999 * unit){
return [0,2 * Math.atan2(qx,qw) * conv,90];}

if(test < -0.49999 * unit){
return [0,-2 * Math.atan2(qx,qw) * conv,-90];}


return [
MatrixMath.roundTo3Places(
Math.atan2(2 * qx * qw - 2 * qy * qz,1 - 2 * qx2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.atan2(2 * qy * qw - 2 * qx * qz,1 - 2 * qy2 - 2 * qz2) * conv),

MatrixMath.roundTo3Places(
Math.asin(2 * qx * qy + 2 * qz * qw) * conv)];},








roundTo3Places:function(n){
var arr=n.toString().split('e');
return Math.round(arr[0] + 'e' + (arr[1]?+arr[1] - 3:3)) * 0.001;},













decomposeMatrix:function(transformMatrix){

invariant(
transformMatrix.length === 16,
'Matrix decomposition needs a list of 3d matrix values, received %s',
transformMatrix);



var perspective=[];
var quaternion=[];
var scale=[];
var skew=[];
var translation=[];



if(!transformMatrix[15]){
return;}

var matrix=[];
var perspectiveMatrix=[];
for(var i=0;i < 4;i++) {
matrix.push([]);
for(var j=0;j < 4;j++) {
var value=transformMatrix[i * 4 + j] / transformMatrix[15];
matrix[i].push(value);
perspectiveMatrix.push(j === 3?0:value);}}


perspectiveMatrix[15] = 1;


if(!MatrixMath.determinant(perspectiveMatrix)){
return;}



if(matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0){


var rightHandSide=[
matrix[0][3],
matrix[1][3],
matrix[2][3],
matrix[3][3]];




var inversePerspectiveMatrix=MatrixMath.inverse3x3(
perspectiveMatrix);

var transposedInversePerspectiveMatrix=MatrixMath.transpose4x4(
inversePerspectiveMatrix);

var perspective=MatrixMath.multiplyVectorByMatrix(
rightHandSide,
transposedInversePerspectiveMatrix);}else 

{

perspective[0] = perspective[1] = perspective[2] = 0;
perspective[3] = 1;}



for(var i=0;i < 3;i++) {
translation[i] = matrix[3][i];}




var row=[];
for(i = 0;i < 3;i++) {
row[i] = [
matrix[i][0],
matrix[i][1],
matrix[i][2]];}




scale[0] = MatrixMath.v3Length(row[0]);
row[0] = MatrixMath.v3Normalize(row[0],scale[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


skew[0] = MatrixMath.v3Dot(row[0],row[1]);
row[1] = MatrixMath.v3Combine(row[1],row[0],1.0,-skew[0]);


scale[1] = MatrixMath.v3Length(row[1]);
row[1] = MatrixMath.v3Normalize(row[1],scale[1]);
skew[0] /= scale[1];


skew[1] = MatrixMath.v3Dot(row[0],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[0],1.0,-skew[1]);
skew[2] = MatrixMath.v3Dot(row[1],row[2]);
row[2] = MatrixMath.v3Combine(row[2],row[1],1.0,-skew[2]);


scale[2] = MatrixMath.v3Length(row[2]);
row[2] = MatrixMath.v3Normalize(row[2],scale[2]);
skew[1] /= scale[2];
skew[2] /= scale[2];




var pdum3=MatrixMath.v3Cross(row[1],row[2]);
if(MatrixMath.v3Dot(row[0],pdum3) < 0){
for(i = 0;i < 3;i++) {
scale[i] *= -1;
row[i][0] *= -1;
row[i][1] *= -1;
row[i][2] *= -1;}}




quaternion[0] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2],0));
quaternion[1] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2],0));
quaternion[2] = 
0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2],0));
quaternion[3] = 
0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2],0));

if(row[2][1] > row[1][2]){
quaternion[0] = -quaternion[0];}

if(row[0][2] > row[2][0]){
quaternion[1] = -quaternion[1];}

if(row[1][0] > row[0][1]){
quaternion[2] = -quaternion[2];}



var rotationDegrees;
if(
quaternion[0] < 0.001 && quaternion[0] >= 0 && 
quaternion[1] < 0.001 && quaternion[1] >= 0)
{

rotationDegrees = [0,0,MatrixMath.roundTo3Places(
Math.atan2(row[0][1],row[0][0]) * 180 / Math.PI)];}else 

{
rotationDegrees = MatrixMath.quaternionToDegreesXYZ(quaternion,matrix,row);}



return {
rotationDegrees:rotationDegrees,
perspective:perspective,
quaternion:quaternion,
scale:scale,
skew:skew,
translation:translation,

rotate:rotationDegrees[2],
scaleX:scale[0],
scaleY:scale[1],
translateX:translation[0],
translateY:translation[1]};}};





module.exports = MatrixMath;});
__d('deepFreezeAndThrowOnMutationInDev',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






























function deepFreezeAndThrowOnMutationInDev(object){
if(__DEV__){
if(typeof object !== 'object' || 
object === null || 
Object.isFrozen(object) || 
Object.isSealed(object)){
return;}


for(var key in object) {
if(object.hasOwnProperty(key)){
object.__defineGetter__(key,identity.bind(null,object[key]));
object.__defineSetter__(key,throwOnImmutableMutation.bind(null,key));
deepFreezeAndThrowOnMutationInDev(object[key]);}}


Object.freeze(object);
Object.seal(object);}}



function throwOnImmutableMutation(key,value){
throw Error(
'You attempted to set the key `' + key + '` with the value `' + 
JSON.stringify(value) + '` on an object that is meant to be immutable ' + 
'and has been frozen.');}



function identity(value){
return value;}


module.exports = deepFreezeAndThrowOnMutationInDev;});
__d('ReactNativeEventEmitter',["EventPluginHub","ReactEventEmitterMixin","ReactNativeTagHandles","NodeHandle","EventConstants","merge","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ReactNativeTagHandles=require('ReactNativeTagHandles');
var NodeHandle=require('NodeHandle');
var EventConstants=require('EventConstants');

var merge=require('merge');
var warning=require('warning');

var topLevelTypes=EventConstants.topLevelTypes;







var EMPTY_NATIVE_EVENT={};








var touchSubsequence=function(touches,indices){
var ret=[];
for(var i=0;i < indices.length;i++) {
ret.push(touches[indices[i]]);}

return ret;};













var removeTouchesAtIndices=function(
touches,
indices)
{
var rippedOut=[];


var temp=touches;
for(var i=0;i < indices.length;i++) {
var index=indices[i];
rippedOut.push(touches[index]);
temp[index] = null;}

var fillAt=0;
for(var j=0;j < temp.length;j++) {
var cur=temp[j];
if(cur !== null){
temp[fillAt++] = cur;}}


temp.length = fillAt;
return rippedOut;};











var ReactNativeEventEmitter=merge(ReactEventEmitterMixin,{

registrationNames:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners,











_receiveRootNodeIDEvent:function(
rootNodeID,
topLevelType,
nativeEventParam)
{
var nativeEvent=nativeEventParam || EMPTY_NATIVE_EVENT;
ReactNativeEventEmitter.handleTopLevel(
topLevelType,
rootNodeID,
rootNodeID,
nativeEvent);},










receiveEvent:function(
tag,
topLevelType,
nativeEventParam)
{
var rootNodeID=ReactNativeTagHandles.tagToRootNodeID[tag];
ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
topLevelType,
nativeEventParam);},



























receiveTouches:function(
eventTopLevelType,
touches,
changedIndices)
{
var changedTouches=
eventTopLevelType === topLevelTypes.topTouchEnd || 
eventTopLevelType === topLevelTypes.topTouchCancel?
removeTouchesAtIndices(touches,changedIndices):
touchSubsequence(touches,changedIndices);

for(var jj=0;jj < changedTouches.length;jj++) {
var touch=changedTouches[jj];


touch.changedTouches = changedTouches;
touch.touches = touches;
var nativeEvent=touch;
var rootNodeID=null;
var target=nativeEvent.target;
if(target !== null && target !== undefined){
if(target < ReactNativeTagHandles.tagsStartAt){
if(__DEV__){
warning(
false,
'A view is reporting that a touch occured on tag zero.');}}else 


{
rootNodeID = NodeHandle.getRootNodeID(target);}}


ReactNativeEventEmitter._receiveRootNodeIDEvent(
rootNodeID,
eventTopLevelType,
nativeEvent);}}});





module.exports = ReactNativeEventEmitter;});
__d('ReactEventEmitterMixin',["EventPluginHub"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventPluginHub=require('EventPluginHub');

function runEventQueueInBatch(events){
EventPluginHub.enqueueEvents(events);
EventPluginHub.processEventQueue();}


var ReactEventEmitterMixin={










handleTopLevel:function(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent){
var events=EventPluginHub.extractEvents(
topLevelType,
topLevelTarget,
topLevelTargetID,
nativeEvent);


runEventQueueInBatch(events);}};



module.exports = ReactEventEmitterMixin;});
__d('ReactNativeStyleAttributes',["ImageStylePropTypes","TextStylePropTypes","ViewStylePropTypes","keyMirror","matricesDiffer","sizesDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var ImageStylePropTypes=require('ImageStylePropTypes');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var keyMirror=require('keyMirror');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');

var ReactNativeStyleAttributes=_extends({},
keyMirror(ViewStylePropTypes),
keyMirror(TextStylePropTypes),
keyMirror(ImageStylePropTypes));


ReactNativeStyleAttributes.transformMatrix = {diff:matricesDiffer};
ReactNativeStyleAttributes.shadowOffset = {diff:sizesDiffer};


ReactNativeStyleAttributes.decomposedMatrix = 'decomposedMatrix';

module.exports = ReactNativeStyleAttributes;});
__d('ImageStylePropTypes',["ImageResizeMode","LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var ImageResizeMode=require('ImageResizeMode');
var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');

var ImageStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
resizeMode:ReactPropTypes.oneOf(Object.keys(ImageResizeMode)),
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderWidth:ReactPropTypes.number,
borderRadius:ReactPropTypes.number,



tintColor:ReactPropTypes.string,
opacity:ReactPropTypes.number});


module.exports = ImageStylePropTypes;});
__d('ImageResizeMode',["keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var keyMirror=require('keyMirror');





var ImageResizeMode=keyMirror({




contain:null,




cover:null,





stretch:null});


module.exports = ImageResizeMode;});
__d('LayoutPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');






var LayoutPropTypes={
width:ReactPropTypes.number,
height:ReactPropTypes.number,
top:ReactPropTypes.number,
left:ReactPropTypes.number,
right:ReactPropTypes.number,
bottom:ReactPropTypes.number,
margin:ReactPropTypes.number,
marginVertical:ReactPropTypes.number,
marginHorizontal:ReactPropTypes.number,
marginTop:ReactPropTypes.number,
marginBottom:ReactPropTypes.number,
marginLeft:ReactPropTypes.number,
marginRight:ReactPropTypes.number,
padding:ReactPropTypes.number,
paddingVertical:ReactPropTypes.number,
paddingHorizontal:ReactPropTypes.number,
paddingTop:ReactPropTypes.number,
paddingBottom:ReactPropTypes.number,
paddingLeft:ReactPropTypes.number,
paddingRight:ReactPropTypes.number,
borderWidth:ReactPropTypes.number,
borderTopWidth:ReactPropTypes.number,
borderRightWidth:ReactPropTypes.number,
borderBottomWidth:ReactPropTypes.number,
borderLeftWidth:ReactPropTypes.number,

position:ReactPropTypes.oneOf([
'absolute',
'relative']),



flexDirection:ReactPropTypes.oneOf([
'row',
'column']),



flexWrap:ReactPropTypes.oneOf([
'wrap',
'nowrap']),




justifyContent:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'space-between',
'space-around']),




alignItems:ReactPropTypes.oneOf([
'flex-start',
'flex-end',
'center',
'stretch']),




alignSelf:ReactPropTypes.oneOf([
'auto',
'flex-start',
'flex-end',
'center',
'stretch']),



flex:ReactPropTypes.number};


module.exports = LayoutPropTypes;});
__d('ReactPropTypes',["ReactElement","ReactFragment","ReactPropTypeLocationNames","emptyFunction"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactElement=require('ReactElement');
var ReactFragment=require('ReactFragment');
var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var emptyFunction=require('emptyFunction');
















































var ANONYMOUS='<<anonymous>>';

var elementTypeChecker=createElementTypeChecker();
var nodeTypeChecker=createNodeChecker();

var ReactPropTypes={
array:createPrimitiveTypeChecker('array'),
bool:createPrimitiveTypeChecker('boolean'),
func:createPrimitiveTypeChecker('function'),
number:createPrimitiveTypeChecker('number'),
object:createPrimitiveTypeChecker('object'),
string:createPrimitiveTypeChecker('string'),

any:createAnyTypeChecker(),
arrayOf:createArrayOfTypeChecker,
element:elementTypeChecker,
instanceOf:createInstanceTypeChecker,
node:nodeTypeChecker,
objectOf:createObjectOfTypeChecker,
oneOf:createEnumTypeChecker,
oneOfType:createUnionTypeChecker,
shape:createShapeTypeChecker};


function createChainableTypeChecker(validate){
function checkType(isRequired,props,propName,componentName,location){
componentName = componentName || ANONYMOUS;
if(props[propName] == null){
var locationName=ReactPropTypeLocationNames[location];
if(isRequired){
return new Error(
'Required ' + locationName + ' `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return null;}else 
{
return validate(props,propName,componentName,location);}}



var chainedCheckType=checkType.bind(null,false);
chainedCheckType.isRequired = checkType.bind(null,true);

return chainedCheckType;}


function createPrimitiveTypeChecker(expectedType){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== expectedType){
var locationName=ReactPropTypeLocationNames[location];



var preciseType=getPreciseType(propValue);

return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + preciseType + '` ' + ('supplied to `' + 
componentName + '`, expected `' + expectedType + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createAnyTypeChecker(){
return createChainableTypeChecker(emptyFunction.thatReturns(null));}


function createArrayOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location){
var propValue=props[propName];
if(!Array.isArray(propValue)){
var locationName=ReactPropTypeLocationNames[location];
var propType=getPropType(propValue);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an array.'));}


for(var i=0;i < propValue.length;i++) {
var error=typeChecker(propValue,i,componentName,location);
if(error instanceof Error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function createElementTypeChecker(){
function validate(props,propName,componentName,location){
if(!ReactElement.isValidElement(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactElement.'));}


return null;}

return createChainableTypeChecker(validate);}


function createInstanceTypeChecker(expectedClass){
function validate(props,propName,componentName,location){
if(!(props[propName] instanceof expectedClass)){
var locationName=ReactPropTypeLocationNames[location];
var expectedClassName=expectedClass.name || ANONYMOUS;
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected instance of `' + expectedClassName + '`.'));}


return null;}

return createChainableTypeChecker(validate);}


function createEnumTypeChecker(expectedValues){
function validate(props,propName,componentName,location){
var propValue=props[propName];
for(var i=0;i < expectedValues.length;i++) {
if(propValue === expectedValues[i]){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
var valuesString=JSON.stringify(expectedValues);
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of value `' + propValue + '` ' + ('supplied to `' + 
componentName + '`, expected one of ' + valuesString + '.'));}


return createChainableTypeChecker(validate);}


function createObjectOfTypeChecker(typeChecker){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type ' + ('`' + 
propType + '` supplied to `' + componentName + '`, expected an object.'));}


for(var key in propValue) {
if(propValue.hasOwnProperty(key)){
var error=typeChecker(propValue,key,componentName,location);
if(error instanceof Error){
return error;}}}



return null;}

return createChainableTypeChecker(validate);}


function createUnionTypeChecker(arrayOfTypeCheckers){
function validate(props,propName,componentName,location){
for(var i=0;i < arrayOfTypeCheckers.length;i++) {
var checker=arrayOfTypeCheckers[i];
if(checker(props,propName,componentName,location) == null){
return null;}}



var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`.'));}


return createChainableTypeChecker(validate);}


function createNodeChecker(){
function validate(props,propName,componentName,location){
if(!isNode(props[propName])){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` supplied to ' + ('`' + 
componentName + '`, expected a ReactNode.'));}


return null;}

return createChainableTypeChecker(validate);}


function createShapeTypeChecker(shapeTypes){
function validate(props,propName,componentName,location){
var propValue=props[propName];
var propType=getPropType(propValue);
if(propType !== 'object'){
var locationName=ReactPropTypeLocationNames[location];
return new Error(
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}


for(var key in shapeTypes) {
var checker=shapeTypes[key];
if(!checker){
continue;}

var error=checker(propValue,key,componentName,location);
if(error){
return error;}}


return null;}

return createChainableTypeChecker(validate);}


function isNode(propValue){
switch(typeof propValue){
case 'number':
case 'string':
case 'undefined':
return true;
case 'boolean':
return !propValue;
case 'object':
if(Array.isArray(propValue)){
return propValue.every(isNode);}

if(propValue === null || ReactElement.isValidElement(propValue)){
return true;}

propValue = ReactFragment.extractIfFragment(propValue);
for(var k in propValue) {
if(!isNode(propValue[k])){
return false;}}


return true;
default:
return false;}}




function getPropType(propValue){
var propType=typeof propValue;
if(Array.isArray(propValue)){
return 'array';}

if(propValue instanceof RegExp){



return 'object';}

return propType;}




function getPreciseType(propValue){
var propType=getPropType(propValue);
if(propType === 'object'){
if(propValue instanceof Date){
return 'date';}else 
if(propValue instanceof RegExp){
return 'regexp';}}


return propType;}


module.exports = ReactPropTypes;});
__d('TransformPropTypes',["ReactPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');

var TransformPropTypes={
transform:ReactPropTypes.arrayOf(
ReactPropTypes.oneOfType([
ReactPropTypes.shape({rotate:ReactPropTypes.string}),
ReactPropTypes.shape({scaleX:ReactPropTypes.number}),
ReactPropTypes.shape({scaleY:ReactPropTypes.number}),
ReactPropTypes.shape({translateX:ReactPropTypes.number}),
ReactPropTypes.shape({translateY:ReactPropTypes.number})])),


transformMatrix:ReactPropTypes.arrayOf(ReactPropTypes.number),


rotation:ReactPropTypes.number,
scaleX:ReactPropTypes.number,
scaleY:ReactPropTypes.number,
translateX:ReactPropTypes.number,
translateY:ReactPropTypes.number};


module.exports = TransformPropTypes;});
__d('TextStylePropTypes',["ReactPropTypes","ViewStylePropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypes=require('ReactPropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');


var TextStylePropTypes=Object.assign(Object.create(ViewStylePropTypes),{
fontFamily:ReactPropTypes.string,
fontSize:ReactPropTypes.number,
fontWeight:ReactPropTypes.oneOf(
['normal','bold',
'100','200','300','400','500','600','700','800','900']),

fontStyle:ReactPropTypes.oneOf(['normal','italic']),
lineHeight:ReactPropTypes.number,
color:ReactPropTypes.string,
containerBackgroundColor:ReactPropTypes.string,
textAlign:ReactPropTypes.oneOf(
['auto','left','right','center']),

writingDirection:ReactPropTypes.oneOf(
['auto','ltr','rtl']),

letterSpacing:ReactPropTypes.number});



var unsupportedProps=Object.keys({
padding:null,
paddingTop:null,
paddingLeft:null,
paddingRight:null,
paddingBottom:null,
paddingVertical:null,
paddingHorizontal:null});


for(var ii=0;ii < unsupportedProps.length;ii++) {
delete TextStylePropTypes[unsupportedProps[ii]];}


module.exports = TextStylePropTypes;});
__d('ViewStylePropTypes',["LayoutPropTypes","ReactPropTypes","TransformPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var LayoutPropTypes=require('LayoutPropTypes');
var ReactPropTypes=require('ReactPropTypes');
var TransformPropTypes=require('TransformPropTypes');




var ViewStylePropTypes=_extends({},
LayoutPropTypes,
TransformPropTypes,{
backgroundColor:ReactPropTypes.string,
borderColor:ReactPropTypes.string,
borderTopColor:ReactPropTypes.string,
borderRightColor:ReactPropTypes.string,
borderBottomColor:ReactPropTypes.string,
borderLeftColor:ReactPropTypes.string,
borderRadius:ReactPropTypes.number,
borderTopLeftRadius:ReactPropTypes.number,
borderTopRightRadius:ReactPropTypes.number,
borderBottomLeftRadius:ReactPropTypes.number,
borderBottomRightRadius:ReactPropTypes.number,
opacity:ReactPropTypes.number,
overflow:ReactPropTypes.oneOf(['visible','hidden']),
shadowColor:ReactPropTypes.string,
shadowOffset:ReactPropTypes.shape(
{width:ReactPropTypes.number,height:ReactPropTypes.number}),

shadowOpacity:ReactPropTypes.number,
shadowRadius:ReactPropTypes.number});


module.exports = ViewStylePropTypes;});
__d('matricesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















var matricesDiffer=function(one,two){
if(one === two){
return false;}

return !one || !two || 
one[12] !== two[12] || 
one[13] !== two[13] || 
one[14] !== two[14] || 
one[5] !== two[5] || 
one[10] !== two[10] || 
one[1] !== two[1] || 
one[2] !== two[2] || 
one[3] !== two[3] || 
one[4] !== two[4] || 
one[6] !== two[6] || 
one[7] !== two[7] || 
one[8] !== two[8] || 
one[9] !== two[9] || 
one[11] !== two[11] || 
one[15] !== two[15];};


module.exports = matricesDiffer;});
__d('sizesDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var dummySize={width:undefined,height:undefined};

var sizesDiffer=function(one,two){
one = one || dummySize;
two = two || dummySize;
return one !== two && (
one.width !== two.width || 
one.height !== two.height);};



module.exports = sizesDiffer;});
__d('ReactMultiChild',["ReactComponentEnvironment","ReactMultiChildUpdateTypes","ReactReconciler","ReactChildReconciler"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactComponentEnvironment=require('ReactComponentEnvironment');
var ReactMultiChildUpdateTypes=require('ReactMultiChildUpdateTypes');

var ReactReconciler=require('ReactReconciler');
var ReactChildReconciler=require('ReactChildReconciler');








var updateDepth=0;









var updateQueue=[];







var markupQueue=[];









function enqueueMarkup(parentID,markup,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.INSERT_MARKUP,
markupIndex:markupQueue.push(markup) - 1,
textContent:null,
fromIndex:null,
toIndex:toIndex});}











function enqueueMove(parentID,fromIndex,toIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.MOVE_EXISTING,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:toIndex});}










function enqueueRemove(parentID,fromIndex){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.REMOVE_NODE,
markupIndex:null,
textContent:null,
fromIndex:fromIndex,
toIndex:null});}










function enqueueTextContent(parentID,textContent){

updateQueue.push({
parentID:parentID,
parentNode:null,
type:ReactMultiChildUpdateTypes.TEXT_CONTENT,
markupIndex:null,
textContent:textContent,
fromIndex:null,
toIndex:null});}








function processQueue(){
if(updateQueue.length){
ReactComponentEnvironment.processChildrenUpdates(
updateQueue,
markupQueue);

clearQueue();}}








function clearQueue(){
updateQueue.length = 0;
markupQueue.length = 0;}








var ReactMultiChild={








Mixin:{









mountChildren:function(nestedChildren,transaction,context){
var children=ReactChildReconciler.instantiateChildren(
nestedChildren,transaction,context);

this._renderedChildren = children;
var mountImages=[];
var index=0;
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
mountImages.push(mountImage);
index++;}}


return mountImages;},








updateTextContent:function(nextContent){
updateDepth++;
var errorThrown=true;
try{
var prevChildren=this._renderedChildren;

ReactChildReconciler.unmountChildren(prevChildren);

for(var name in prevChildren) {
if(prevChildren.hasOwnProperty(name)){
this._unmountChildByName(prevChildren[name],name);}}



this.setTextContent(nextContent);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},












updateChildren:function(nextNestedChildren,transaction,context){
updateDepth++;
var errorThrown=true;
try{
this._updateChildren(nextNestedChildren,transaction,context);
errorThrown = false;}finally 
{
updateDepth--;
if(!updateDepth){
if(errorThrown){
clearQueue();}else 
{
processQueue();}}}},















_updateChildren:function(nextNestedChildren,transaction,context){
var prevChildren=this._renderedChildren;
var nextChildren=ReactChildReconciler.updateChildren(
prevChildren,nextNestedChildren,transaction,context);

this._renderedChildren = nextChildren;
if(!nextChildren && !prevChildren){
return;}

var name;


var lastIndex=0;
var nextIndex=0;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var nextChild=nextChildren[name];
if(prevChild === nextChild){
this.moveChild(prevChild,nextIndex,lastIndex);
lastIndex = Math.max(prevChild._mountIndex,lastIndex);
prevChild._mountIndex = nextIndex;}else 
{
if(prevChild){

lastIndex = Math.max(prevChild._mountIndex,lastIndex);
this._unmountChildByName(prevChild,name);}


this._mountChildByNameAtIndex(
nextChild,name,nextIndex,transaction,context);}


nextIndex++;}


for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
this._unmountChildByName(prevChildren[name],name);}}},










unmountChildren:function(){
var renderedChildren=this._renderedChildren;
ReactChildReconciler.unmountChildren(renderedChildren);
this._renderedChildren = null;},










moveChild:function(child,toIndex,lastIndex){



if(child._mountIndex < lastIndex){
enqueueMove(this._rootNodeID,child._mountIndex,toIndex);}},










createChild:function(child,mountImage){
enqueueMarkup(this._rootNodeID,mountImage,child._mountIndex);},








removeChild:function(child){
enqueueRemove(this._rootNodeID,child._mountIndex);},








setTextContent:function(textContent){
enqueueTextContent(this._rootNodeID,textContent);},













_mountChildByNameAtIndex:function(
child,
name,
index,
transaction,
context){

var rootID=this._rootNodeID + name;
var mountImage=ReactReconciler.mountComponent(
child,
rootID,
transaction,
context);

child._mountIndex = index;
this.createChild(child,mountImage);},











_unmountChildByName:function(child,name){
this.removeChild(child);
child._mountIndex = null;}}};






module.exports = ReactMultiChild;});
__d('ReactChildReconciler',["ReactReconciler","flattenChildren","instantiateReactComponent","shouldUpdateReactComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactReconciler=require('ReactReconciler');

var flattenChildren=require('flattenChildren');
var instantiateReactComponent=require('instantiateReactComponent');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');






var ReactChildReconciler={









instantiateChildren:function(nestedChildNodes,transaction,context){
var children=flattenChildren(nestedChildNodes);
for(var name in children) {
if(children.hasOwnProperty(name)){
var child=children[name];


var childInstance=instantiateReactComponent(child,null);
children[name] = childInstance;}}


return children;},












updateChildren:function(
prevChildren,
nextNestedChildNodes,
transaction,
context){





var nextChildren=flattenChildren(nextNestedChildNodes);
if(!nextChildren && !prevChildren){
return null;}

var name;
for(name in nextChildren) {
if(!nextChildren.hasOwnProperty(name)){
continue;}

var prevChild=prevChildren && prevChildren[name];
var prevElement=prevChild && prevChild._currentElement;
var nextElement=nextChildren[name];
if(shouldUpdateReactComponent(prevElement,nextElement)){
ReactReconciler.receiveComponent(
prevChild,nextElement,transaction,context);

nextChildren[name] = prevChild;}else 
{
if(prevChild){
ReactReconciler.unmountComponent(prevChild,name);}


var nextChildInstance=instantiateReactComponent(
nextElement,
null);

nextChildren[name] = nextChildInstance;}}



for(name in prevChildren) {
if(prevChildren.hasOwnProperty(name) && 
!(nextChildren && nextChildren.hasOwnProperty(name))){
ReactReconciler.unmountComponent(prevChildren[name]);}}


return nextChildren;},









unmountChildren:function(renderedChildren){
for(var name in renderedChildren) {
var renderedChild=renderedChildren[name];
ReactReconciler.unmountComponent(renderedChild);}}};





module.exports = ReactChildReconciler;});
__d('flattenChildren',["traverseAllChildren","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var traverseAllChildren=require('traverseAllChildren');
var warning=require('warning');






function flattenSingleChildIntoContext(traverseContext,child,name){

var result=traverseContext;
var keyUnique=!result.hasOwnProperty(name);
if(__DEV__){
warning(
keyUnique,
'flattenChildren(...): Encountered two children with the same key, ' + 
'`%s`. Child keys must be unique; when two children share a key, only ' + 
'the first child will be used.',
name);}


if(keyUnique && child != null){
result[name] = child;}}








function flattenChildren(children){
if(children == null){
return children;}

var result={};
traverseAllChildren(children,flattenSingleChildIntoContext,result);
return result;}


module.exports = flattenChildren;});
__d('styleDiffer',["deepDiffer"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var deepDiffer=require('deepDiffer');

function styleDiffer(a,b){
return !styleEqual(a,b);}


function styleEqual(a,b){
if(!a){
return !b;}

if(!b){
return !a;}

if(typeof a !== typeof b){
return false;}

if(typeof a === 'number'){
return a === b;}


if(Array.isArray(a)){
if(!Array.isArray(b) || a.length !== b.length){
return false;}

for(var i=0;i < a.length;++i) {
if(!styleEqual(a[i],b[i])){
return false;}}


return true;}


for(var key in a) {
if(deepDiffer(a[key],b[key])){
return false;}}



for(var key in b) {
if(!a.hasOwnProperty(key)){
return false;}}



return true;}


module.exports = styleDiffer;});
__d('deepDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var deepDiffer=function(one,two){
if(one === two){

return false;}

if(typeof one === 'function' && typeof two === 'function'){

return false;}

if(typeof one !== 'object' || one === null){

return one !== two;}

if(typeof two !== 'object' || two === null){


return true;}

if(one.constructor !== two.constructor){
return true;}

if(Array.isArray(one)){

var len=one.length;
if(two.length !== len){
return true;}

for(var ii=0;ii < len;ii++) {
if(deepDiffer(one[ii],two[ii])){
return true;}}}else 


{
for(var key in one) {
if(deepDiffer(one[key],two[key])){
return true;}}


for(var twoKey in two) {


if(one[twoKey] === undefined && two[twoKey] !== undefined){
return true;}}}



return false;};


module.exports = deepDiffer;});
__d('diffRawProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';























function diffRawProperties(
updatePayload,
prevProps,
nextProps,
validAttributes)
{
var validAttributeConfig;
var nextProp;
var prevProp;
var isScalar;
var shouldUpdate;

if(nextProps){
for(var propKey in nextProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

prevProp = prevProps && prevProps[propKey];
nextProp = nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){




isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar || 
!prevProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp,nextProp);

if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}








if(prevProps){
for(var propKey in prevProps) {
validAttributeConfig = validAttributes[propKey];
if(!validAttributeConfig){
continue;}

if(updatePayload && updatePayload[propKey] !== undefined){
continue;}

prevProp = prevProps[propKey];
nextProp = nextProps && nextProps[propKey];



if(typeof prevProp === 'function'){
prevProp = true;}

if(typeof nextProp === 'function'){
nextProp = true;}


if(prevProp !== nextProp){
if(nextProp === undefined){
nextProp = null;}





isScalar = typeof nextProp !== 'object' || nextProp === null;
shouldUpdate = isScalar && prevProp !== nextProp || 
validAttributeConfig.diff && 
validAttributeConfig.diff(prevProp,nextProp);
if(shouldUpdate){
updatePayload = updatePayload || {};
updatePayload[propKey] = nextProp;}}}}




return updatePayload;}


module.exports = diffRawProperties;});
__d('RCTEventEmitter',["ReactNativeEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeEventEmitter=require('ReactNativeEventEmitter');


module.exports = ReactNativeEventEmitter;});
__d('RCTLog',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var invariant=require('invariant');

var levelsMap={
log:'log',
info:'info',
warn:'warn',
error:'error',
mustfix:'error'};var 


RCTLog=(function(){function RCTLog(){_classCallCheck(this,RCTLog);}_createClass(RCTLog,null,[{key:'logIfNoNativeHook',value:

function logIfNoNativeHook(){
var args=Array.prototype.slice.call(arguments);
var level=args.shift();
var logFn=levelsMap[level];
invariant(
logFn,
'Level "' + level + '" not one of ' + Object.keys(levelsMap));

if(typeof global.nativeLoggingHook === 'undefined'){

console[logFn].apply(console,args);}

return true;}}]);return RCTLog;})();



module.exports = RCTLog;});
__d('RCTJSTimers',["JSTimersExecution"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var JSTimersExecution=require('JSTimersExecution');

var RCTJSTimers=JSTimersExecution;

module.exports = RCTJSTimers;});
__d('deprecated',["Object.assign","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var warning=require('warning');












function deprecated(namespace,oldName,newName,ctx,fn){
var warned=false;
if(__DEV__){
var newFn=function(){
warning(
warned,
'%s.%s will be deprecated in a future version. ' + 
'Use %s.%s instead.',
namespace,
oldName,
namespace,
newName);

warned = true;
return fn.apply(ctx,arguments);};

newFn.displayName = namespace + '_' + oldName;


return assign(newFn,fn);}


return fn;}


module.exports = deprecated;});
__d('onlyChild',["ReactElement","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactElement=require('ReactElement');

var invariant=require('invariant');












function onlyChild(children){
invariant(
ReactElement.isValidElement(children),
'onlyChild must be passed a children with exactly one child.');

return children;}


module.exports = onlyChild;});
__d('ActivityIndicatorIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';function _objectWithoutProperties(obj,keys){var target={};for(var i in obj) {if(keys.indexOf(i) >= 0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i] = obj[i];}return target;}












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');

var GRAY='#999999';








var ActivityIndicatorIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



animating:PropTypes.bool,



color:PropTypes.string,



hidesWhenStopped:PropTypes.bool,



size:PropTypes.oneOf([
'small',
'large']),






onLayout:PropTypes.func},


getDefaultProps:function(){
return {
animating:true,
color:GRAY,
hidesWhenStopped:true,
size:'small'};},



render:function(){var _props=
this.props;var onLayout=_props.onLayout;var style=_props.style;var props=_objectWithoutProperties(_props,['onLayout','style']);
var sizeStyle=this.props.size === 'large'?styles.sizeLarge:styles.sizeSmall;
return (
React.createElement(View,{
onLayout:onLayout,
style:[styles.container,sizeStyle,style]},
React.createElement(RCTActivityIndicatorView,props)));}});





var styles=StyleSheet.create({
container:{
alignItems:'center',
justifyContent:'center'},

sizeSmall:{
height:20},

sizeLarge:{
height:36}});



var RCTActivityIndicatorView=requireNativeComponent(
'RCTActivityIndicatorView',
null);

if(__DEV__){
var nativeOnlyProps={activityIndicatorViewStyle:true};
verifyPropTypes(
ActivityIndicatorIOS,
RCTActivityIndicatorView.viewConfig,
nativeOnlyProps);}



module.exports = ActivityIndicatorIOS;});
__d('StyleSheet',["StyleSheetRegistry","StyleSheetValidation"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var StyleSheetRegistry=require('StyleSheetRegistry');
var StyleSheetValidation=require('StyleSheetValidation');var 













































StyleSheet=(function(){function StyleSheet(){_classCallCheck(this,StyleSheet);}_createClass(StyleSheet,null,[{key:'create',value:
function create(obj){
var result={};
for(var key in obj) {
StyleSheetValidation.validateStyle(key,obj);
result[key] = StyleSheetRegistry.registerStyle(obj[key]);}

return result;}}]);return StyleSheet;})();



module.exports = StyleSheet;});
__d('StyleSheetValidation',["ImageStylePropTypes","ReactPropTypeLocations","TextStylePropTypes","ViewStylePropTypes","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ImageStylePropTypes=require('ImageStylePropTypes');
var ReactPropTypeLocations=require('ReactPropTypeLocations');
var TextStylePropTypes=require('TextStylePropTypes');
var ViewStylePropTypes=require('ViewStylePropTypes');

var invariant=require('invariant');var 

StyleSheetValidation=(function(){function StyleSheetValidation(){_classCallCheck(this,StyleSheetValidation);}_createClass(StyleSheetValidation,null,[{key:'validateStyleProp',value:
function validateStyleProp(prop,style,caller){
if(!__DEV__){
return;}

if(allStylePropTypes[prop] === undefined){
var message1='"' + prop + '" is not a valid style property.';
var message2='\nValid style props: ' + 
JSON.stringify(Object.keys(allStylePropTypes),null,'  ');
styleError(message1,style,caller,message2);}

var error=allStylePropTypes[prop](
style,
prop,
caller,
ReactPropTypeLocations.prop);

if(error){
styleError(error.message,style,caller);}}},{key:'validateStyle',value:



function validateStyle(name,styles){
if(!__DEV__){
return;}

for(var prop in styles[name]) {
StyleSheetValidation.validateStyleProp(prop,styles[name],'StyleSheet ' + name);}}},{key:'addValidStylePropTypes',value:



function addValidStylePropTypes(stylePropTypes){
for(var key in stylePropTypes) {
invariant(
allStylePropTypes[key] === undefined || 
allStylePropTypes[key] === stylePropTypes[key],
'Attemped to redefine existing style prop type "' + key + '".');

allStylePropTypes[key] = stylePropTypes[key];}}}]);return StyleSheetValidation;})();




var styleError=function(message1,style,caller,message2){
invariant(
false,
message1 + '\n' + (caller || '<<unknown>>') + ': ' + 
JSON.stringify(style,null,'  ') + (message2 || ''));};



var allStylePropTypes={};

StyleSheetValidation.addValidStylePropTypes(ImageStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
StyleSheetValidation.addValidStylePropTypes(ViewStylePropTypes);

module.exports = StyleSheetValidation;});
__d('View',["NativeMethodsMixin","ReactPropTypes","NativeModules","React","ReactNativeStyleAttributes","ReactNativeViewAttributes","StyleSheetPropType","ViewStylePropTypes","createReactNativeComponentClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;
var React=require('React');
var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');

var stylePropType=StyleSheetPropType(ViewStylePropTypes);

var AccessibilityTraits=[
'none',
'button',
'link',
'header',
'search',
'image',
'selected',
'plays',
'key',
'text',
'summary',
'disabled',
'frequentUpdates',
'startsMedia',
'adjustable',
'allowsDirectInteraction',
'pageTurn'];






















var View=React.createClass({
mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},


propTypes:{




accessible:PropTypes.bool,






accessibilityLabel:PropTypes.string,





accessibilityTraits:PropTypes.oneOfType([
PropTypes.oneOf(AccessibilityTraits),
PropTypes.arrayOf(PropTypes.oneOf(AccessibilityTraits))]),






onAcccessibilityTap:PropTypes.func,





onMagicTap:PropTypes.func,




testID:PropTypes.string,






onMoveShouldSetResponder:PropTypes.func,
onResponderGrant:PropTypes.func,
onResponderMove:PropTypes.func,
onResponderReject:PropTypes.func,
onResponderRelease:PropTypes.func,
onResponderTerminate:PropTypes.func,
onResponderTerminationRequest:PropTypes.func,
onStartShouldSetResponder:PropTypes.func,
onStartShouldSetResponderCapture:PropTypes.func,






onLayout:PropTypes.func,































pointerEvents:PropTypes.oneOf([
'box-none',
'none',
'box-only',
'auto']),

style:stylePropType,









removeClippedSubviews:PropTypes.bool,













renderToHardwareTextureAndroid:PropTypes.bool},


render:function(){
return React.createElement(RCTView,this.props);}});



var RCTView=createReactNativeComponentClass({
validAttributes:ReactNativeViewAttributes.RCTView,
uiViewClassName:'RCTView'});

RCTView.propTypes = View.propTypes;
if(__DEV__){
var viewConfig=RCTUIManager.viewConfigs && RCTUIManager.viewConfigs.RCTView || {};
for(var prop in viewConfig.nativeProps) {
var viewAny=View;
if(!viewAny.propTypes[prop] && !ReactNativeStyleAttributes[prop]){
throw new Error(
'View is missing propType for native prop `' + prop + '`');}}}





var ViewToExport=RCTView;
if(__DEV__){
ViewToExport = View;}


module.exports = ViewToExport;});
__d('ReactNativeViewAttributes',["merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var merge=require('merge');

var ReactNativeViewAttributes={};

ReactNativeViewAttributes.UIView = {
pointerEvents:true,
accessible:true,
accessibilityLabel:true,
accessibilityTraits:true,
testID:true,
onLayout:true,
onAccessibilityTap:true,
onMagicTap:true};


ReactNativeViewAttributes.RCTView = merge(
ReactNativeViewAttributes.UIView,{






removeClippedSubviews:true});


module.exports = ReactNativeViewAttributes;});
__d('StyleSheetPropType',["createStrictShapeTypeChecker","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var flattenStyle=require('flattenStyle');

function StyleSheetPropType(
shape)
{
var shapePropType=createStrictShapeTypeChecker(shape);
return function(props,propName,componentName,location){
var newProps=props;
if(props[propName]){

newProps = {};
newProps[propName] = flattenStyle(props[propName]);}

return shapePropType(newProps,propName,componentName,location);};}



module.exports = StyleSheetPropType;});
__d('createStrictShapeTypeChecker',["ReactPropTypeLocationNames","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactPropTypeLocationNames=require('ReactPropTypeLocationNames');

var invariant=require('invariant');
var merge=require('merge');

function createStrictShapeTypeChecker(
shapeTypes)
{
function checkType(isRequired,props,propName,componentName,location){
if(!props[propName]){
if(isRequired){
invariant(
false,
'Required object `' + propName + '` was not specified in ' + ('`' + 
componentName + '`.'));}


return;}

var propValue=props[propName];
var propType=typeof propValue;
var locationName=
location && ReactPropTypeLocationNames[location] || '(unknown)';
if(propType !== 'object'){
invariant(
false,
'Invalid ' + locationName + ' `' + propName + '` of type `' + propType + '` ' + ('supplied to `' + 
componentName + '`, expected `object`.'));}




var allKeys=merge(props[propName],shapeTypes);
for(var key in allKeys) {
var checker=shapeTypes[key];
if(!checker){
invariant(
false,
'Invalid props.' + propName + ' key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  ') + '\nValid keys: ' + 
JSON.stringify(Object.keys(shapeTypes),null,'  '));}


var error=checker(propValue,key,componentName,location);
if(error){
invariant(
false,
error.message + '\nBad object: ' + 
JSON.stringify(props[propName],null,'  '));}}}




function chainedCheckType(
props,
propName,
componentName,
location)
{
return checkType(false,props,propName,componentName,location);}

chainedCheckType.isRequired = checkType.bind(null,true);
return chainedCheckType;}


module.exports = createStrictShapeTypeChecker;});
__d('requireNativeComponent',["NativeModules","UnimplementedView","createReactNativeComponentClass","deepDiffer","insetsDiffer","pointsDiffer","matricesDiffer","sizesDiffer","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var RCTUIManager=require('NativeModules').UIManager;
var UnimplementedView=require('UnimplementedView');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var pointsDiffer=require('pointsDiffer');
var matricesDiffer=require('matricesDiffer');
var sizesDiffer=require('sizesDiffer');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');
















function requireNativeComponent(
viewName,
wrapperComponent)
{
var viewConfig=RCTUIManager[viewName];
if(!viewConfig || !viewConfig.NativeProps){
warning(false,'Native component for "%s" does not exist',viewName);
return UnimplementedView;}

var nativeProps=_extends({},
RCTUIManager.RCTView.NativeProps,
viewConfig.NativeProps);

viewConfig.uiViewClassName = viewName;
viewConfig.validAttributes = {};
for(var key in nativeProps) {

var differ=TypeToDifferMap[nativeProps[key]] || deepDiffer;
viewConfig.validAttributes[key] = {diff:differ};}

if(__DEV__){
wrapperComponent && verifyPropTypes(wrapperComponent,viewConfig);}

return createReactNativeComponentClass(viewConfig);}


var TypeToDifferMap={

CATransform3D:matricesDiffer,
CGPoint:pointsDiffer,
CGSize:sizesDiffer,
UIEdgeInsets:insetsDiffer};




module.exports = requireNativeComponent;});
__d('UnimplementedView',["React","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';








var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var UnimplementedView=React.createClass({
setNativeProps:function(){},




render:function(){
return (
React.createElement(View,{style:[styles.unimplementedView,this.props.style]},
this.props.children));}});





var styles=StyleSheet.create({
unimplementedView:{
borderWidth:1,
borderColor:'red',
alignSelf:'flex-start'}});



module.exports = UnimplementedView;});
__d('insetsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















var dummyInsets={
top:undefined,
left:undefined,
right:undefined,
bottom:undefined};


var insetsDiffer=function(
one,
two)
{
one = one || dummyInsets;
two = two || dummyInsets;
return one !== two && (
one.top !== two.top || 
one.left !== two.left || 
one.right !== two.right || 
one.bottom !== two.bottom);};



module.exports = insetsDiffer;});
__d('pointsDiffer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var dummyPoint={x:undefined,y:undefined};

var pointsDiffer=function(one,two){
one = one || dummyPoint;
two = two || dummyPoint;
return one !== two && (
one.x !== two.x || 
one.y !== two.y);};



module.exports = pointsDiffer;});
__d('verifyPropTypes',["ReactNativeStyleAttributes","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeStyleAttributes=require('ReactNativeStyleAttributes');
var View=require('View');

function verifyPropTypes(
component,
viewConfig,
nativePropsToIgnore)
{
if(!viewConfig){
return;}

var componentName=component.name || component.displayName;
if(!component.propTypes){
throw new Error(
'`' + componentName + '` has no propTypes defined`');}



var nativeProps=viewConfig.NativeProps;
for(var prop in nativeProps) {
if(!component.propTypes[prop] && 
!View.propTypes[prop] && 
!ReactNativeStyleAttributes[prop] && (
!nativePropsToIgnore || !nativePropsToIgnore[prop])){
throw new Error(
'`' + componentName + '` has no propType for native prop `' + 
viewConfig.uiViewClassName + '.' + prop + '` of native type `' + 
nativeProps[prop] + '`');}}}





module.exports = verifyPropTypes;});
__d('DatePickerIOS',["NativeMethodsMixin","ReactPropTypes","React","NativeModules","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var RCTDatePickerIOSConsts=require('NativeModules').UIManager.RCTDatePicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var DATEPICKER='datepicker';














var DatePickerIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



date:PropTypes.instanceOf(Date).isRequired,








onDateChange:PropTypes.func.isRequired,






maximumDate:PropTypes.instanceOf(Date),






minimumDate:PropTypes.instanceOf(Date),




mode:PropTypes.oneOf(['date','time','datetime']),




minuteInterval:PropTypes.oneOf([1,2,3,4,5,6,10,12,15,20,30]),








timeZoneOffsetInMinutes:PropTypes.number},


getDefaultProps:function(){
return {
mode:'datetime'};},



_onChange:function(event){
var nativeTimeStamp=event.nativeEvent.timestamp;
this.props.onDateChange && this.props.onDateChange(
new Date(nativeTimeStamp));

this.props.onChange && this.props.onChange(event);





var propsTimeStamp=this.props.date.getTime();
if(nativeTimeStamp !== propsTimeStamp){
this.refs[DATEPICKER].setNativeProps({
date:propsTimeStamp});}},




render:function(){
var props=this.props;
return (
React.createElement(View,{style:props.style},
React.createElement(RCTDatePickerIOS,{
ref:DATEPICKER,
style:styles.datePickerIOS,
date:props.date.getTime(),
maximumDate:
props.maximumDate?props.maximumDate.getTime():undefined,

minimumDate:
props.minimumDate?props.minimumDate.getTime():undefined,

mode:props.mode,
minuteInterval:props.minuteInterval,
timeZoneOffsetInMinutes:props.timeZoneOffsetInMinutes,
onChange:this._onChange})));}});






var styles=StyleSheet.create({
datePickerIOS:{
height:RCTDatePickerIOSConsts.ComponentHeight,
width:RCTDatePickerIOSConsts.ComponentWidth}});



var RCTDatePickerIOS=requireNativeComponent('RCTDatePicker',DatePickerIOS);

module.exports = DatePickerIOS;});
__d('Image',["EdgeInsetsPropType","ImageResizeMode","ImageStylePropTypes","NativeMethodsMixin","NativeModules","ReactPropTypes","React","ReactNativeViewAttributes","StyleSheet","StyleSheetPropType","flattenStyle","invariant","merge","requireNativeComponent","resolveAssetSource","verifyPropTypes","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var ImageResizeMode=require('ImageResizeMode');
var ImageStylePropTypes=require('ImageStylePropTypes');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');

var flattenStyle=require('flattenStyle');
var invariant=require('invariant');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');
var resolveAssetSource=require('resolveAssetSource');
var verifyPropTypes=require('verifyPropTypes');
var warning=require('warning');


























var Image=React.createClass({
propTypes:{





source:PropTypes.shape({
uri:PropTypes.string}),





defaultSource:PropTypes.shape({
uri:PropTypes.string}),




accessible:PropTypes.bool,



accessibilityLabel:PropTypes.string,







capInsets:EdgeInsetsPropType,




resizeMode:PropTypes.oneOf(['cover','contain','stretch']),
style:StyleSheetPropType(ImageStylePropTypes),




testID:PropTypes.string,





onLayout:PropTypes.func},


statics:{
resizeMode:ImageResizeMode},


mixins:[NativeMethodsMixin],





viewConfig:{
uiViewClassName:'UIView',
validAttributes:ReactNativeViewAttributes.UIView},


render:function(){
for(var prop in nativeOnlyProps) {
if(this.props[prop] !== undefined){
console.warn('Prop `' + prop + ' = ' + this.props[prop] + '` should ' + 
'not be set directly on Image.');}}


var source=resolveAssetSource(this.props.source) || {};var 

width=source.width;var height=source.height;
var style=flattenStyle([{width:width,height:height},styles.base,this.props.style]);
invariant(style,'style must be initialized');

var isNetwork=source.uri && source.uri.match(/^https?:/);
invariant(
!(isNetwork && source.isStatic),
'static image uris cannot start with "http": "' + source.uri + '"');

var isStored=!source.isStatic && !isNetwork;
var RawImage=isNetwork?RCTNetworkImage:RCTStaticImage;

if(this.props.style && this.props.style.tintColor){
warning(RawImage === RCTStaticImage,'tintColor style only supported on static images.');}

var resizeMode=this.props.resizeMode || style.resizeMode || 'cover';

var nativeProps=merge(this.props,{
style:style,
resizeMode:resizeMode,
tintColor:style.tintColor});

if(isStored){
nativeProps.imageTag = source.uri;}else 
{
nativeProps.src = source.uri;}

if(this.props.defaultSource){
nativeProps.defaultImageSrc = this.props.defaultSource.uri;}

return React.createElement(RawImage,nativeProps);}});



var styles=StyleSheet.create({
base:{
overflow:'hidden'}});



var RCTNetworkImage=requireNativeComponent('RCTNetworkImageView',null);
var RCTStaticImage=requireNativeComponent('RCTStaticImage',null);

var nativeOnlyProps={
src:true,
defaultImageSrc:true,
imageTag:true,
resizeMode:true};

if(__DEV__){
verifyPropTypes(Image,RCTStaticImage.viewConfig,nativeOnlyProps);
verifyPropTypes(Image,RCTNetworkImage.viewConfig,nativeOnlyProps);}


module.exports = Image;});
__d('EdgeInsetsPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var EdgeInsetsPropType=createStrictShapeTypeChecker({
top:PropTypes.number,
left:PropTypes.number,
bottom:PropTypes.number,
right:PropTypes.number});


module.exports = EdgeInsetsPropType;});
__d('resolveAssetSource',["AssetRegistry","PixelRatio","Platform","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var AssetRegistry=require('AssetRegistry');
var PixelRatio=require('PixelRatio');
var Platform=require('Platform');
var SourceCode=require('NativeModules').SourceCode;

var _serverURL;

function getDevServerURL(){
if(!__DEV__){

return null;}

if(_serverURL === undefined){
var scriptURL=SourceCode.scriptURL;
var match=scriptURL && scriptURL.match(/^https?:\/\/.*?\//);
if(match){

_serverURL = match[0];}else 
{

_serverURL = null;}}



return _serverURL;}





function getPathInArchive(asset){
if(Platform.OS === 'android'){
var assetDir=getBasePath(asset);


return (assetDir + '/' + asset.name).
toLowerCase().
replace(/\//g,'_').
replace(/([^a-z0-9_])/g,'').
replace(/^assets_/,'');}else 
{

return getScaledAssetPath(asset);}}







function getPathOnDevserver(devServerUrl,asset){
return devServerUrl + getScaledAssetPath(asset) + '?hash=' + asset.hash;}





function getBasePath(asset){


var path=asset.httpServerLocation;
if(path[0] === '/'){
path = path.substr(1);}

return path;}





function getScaledAssetPath(asset){
var scale=pickScale(asset.scales,PixelRatio.get());
var scaleSuffix=scale === 1?'':'@' + scale + 'x';
var assetDir=getBasePath(asset);
return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;}


function pickScale(scales,deviceScale){

for(var i=0;i < scales.length;i++) {
if(scales[i] >= deviceScale){
return scales[i];}}






return scales[scales.length - 1] || 1;}


function resolveAssetSource(source){
if(typeof source === 'object'){
return source;}


var asset=AssetRegistry.getAssetByID(source);
if(asset){
return assetToImageSource(asset);}


return null;}


function assetToImageSource(asset){
var devServerURL=getDevServerURL();
if(devServerURL){
return {
width:asset.width,
height:asset.height,
uri:getPathOnDevserver(devServerURL,asset),
isStatic:false};}else 

{
return {
width:asset.width,
height:asset.height,
uri:getPathInArchive(asset),
isStatic:true};}}




module.exports = resolveAssetSource;
module.exports.pickScale = pickScale;});
__d('AssetRegistry',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






var assets=[];

function registerAsset(asset){


return assets.push(asset);}


function getAssetByID(assetId){
return assets[assetId - 1];}


module.exports = {registerAsset:registerAsset,getAssetByID:getAssetByID};});
__d('PixelRatio',["Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var Dimensions=require('Dimensions');var 






























PixelRatio=(function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',value:












function get(){
return Dimensions.get('window').scale;}},{key:'getFontScale',value:












function getFontScale(){
return Dimensions.get('window').fontScale || PixelRatio.get();}},{key:'getPixelSizeForLayoutSize',value:







function getPixelSizeForLayoutSize(layoutSize){
return Math.round(layoutSize * PixelRatio.get());}},{key:'startDetecting',value:



function startDetecting(){}}]);return PixelRatio;})();


module.exports = PixelRatio;});
__d('Dimensions',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var NativeModules=require('NativeModules');

var invariant=require('invariant');

var dimensions=NativeModules.UIManager.Dimensions;




if(dimensions && dimensions.windowPhysicalPixels){

dimensions = JSON.parse(JSON.stringify(dimensions));

var windowPhysicalPixels=dimensions.windowPhysicalPixels;
dimensions.window = {
width:windowPhysicalPixels.width / windowPhysicalPixels.scale,
height:windowPhysicalPixels.height / windowPhysicalPixels.scale,
scale:windowPhysicalPixels.scale,
fontScale:windowPhysicalPixels.fontScale};



delete dimensions.windowPhysicalPixels;}var 


Dimensions=(function(){function Dimensions(){_classCallCheck(this,Dimensions);}_createClass(Dimensions,null,[{key:'set',value:





function set(dims){
Object.assign(dimensions,dims);
return true;}},{key:'get',value:















function get(dim){
invariant(dimensions[dim],'No dimension set for key ' + dim);
return dimensions[dim];}}]);return Dimensions;})();



module.exports = Dimensions;});
__d('ListView',["ListViewDataSource","React","NativeModules","ScrollView","ScrollResponder","StaticRenderer","react-timer-mixin/TimerMixin","logError","merge","isEmpty"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var ListViewDataSource=require('ListViewDataSource');
var React=require('React');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollView=require('ScrollView');
var ScrollResponder=require('ScrollResponder');
var StaticRenderer=require('StaticRenderer');
var TimerMixin=require('react-timer-mixin/TimerMixin');

var logError=require('logError');
var merge=require('merge');
var isEmpty=require('isEmpty');

var PropTypes=React.PropTypes;

var DEFAULT_PAGE_SIZE=1;
var DEFAULT_INITIAL_ROWS=10;
var DEFAULT_SCROLL_RENDER_AHEAD=1000;
var DEFAULT_END_REACHED_THRESHOLD=1000;
var DEFAULT_SCROLL_CALLBACK_THROTTLE=50;
var SCROLLVIEW_REF='listviewscroll';


















































var ListView=React.createClass({
mixins:[ScrollResponder.Mixin,TimerMixin],

statics:{
DataSource:ListViewDataSource},









propTypes:_extends({},
ScrollView.propTypes,{

dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,







renderSeparator:PropTypes.func,










renderRow:PropTypes.func.isRequired,





initialListSize:PropTypes.number,





onEndReached:PropTypes.func,



onEndReachedThreshold:PropTypes.number,



pageSize:PropTypes.number,








renderFooter:PropTypes.func,
renderHeader:PropTypes.func,









renderSectionHeader:PropTypes.func,




scrollRenderAheadDistance:React.PropTypes.number,









onChangeVisibleRows:React.PropTypes.func,





removeClippedSubviews:React.PropTypes.bool}),





getMetrics:function(){
return {
contentHeight:this.scrollProperties.contentHeight,
totalRows:this.props.dataSource.getRowCount(),
renderedRows:this.state.curRenderedRowsCount,
visibleRows:Object.keys(this._visibleRows).length};},







getScrollResponder:function(){
return this.refs[SCROLLVIEW_REF];},


setNativeProps:function(props){
this.refs[SCROLLVIEW_REF].setNativeProps(props);},






getDefaultProps:function(){
return {
initialListSize:DEFAULT_INITIAL_ROWS,
pageSize:DEFAULT_PAGE_SIZE,
scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,
onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD};},



getInitialState:function(){
return {
curRenderedRowsCount:this.props.initialListSize,
prevRenderedRowsCount:0,
highlightedRow:{}};},



componentWillMount:function(){

this.scrollProperties = {
visibleHeight:null,
contentHeight:null,
offsetY:0};

this._childFrames = [];
this._visibleRows = {};},


componentDidMount:function(){var _this=this;


this.requestAnimationFrame(function(){
_this._measureAndUpdateScrollProps();});},



componentWillReceiveProps:function(nextProps){
if(this.props.dataSource !== nextProps.dataSource){
this.setState({prevRenderedRowsCount:0});}},



onRowHighlighted:function(sectionID,rowID){
this.setState({highlightedRow:{sectionID:sectionID,rowID:rowID}});},


render:function(){
var bodyComponents=[];

var dataSource=this.props.dataSource;
var allRowIDs=dataSource.rowIdentities;
var rowCount=0;
var sectionHeaderIndices=[];

var header=this.props.renderHeader && this.props.renderHeader();
var footer=this.props.renderFooter && this.props.renderFooter();
var totalIndex=header?1:0;

for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var sectionID=dataSource.sectionIdentities[sectionIdx];
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}


if(this.props.renderSectionHeader){
var shouldUpdateHeader=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.sectionHeaderShouldUpdate(sectionIdx);
bodyComponents.push(
React.createElement(StaticRenderer,{
key:'s_' + sectionID,
shouldUpdate:!!shouldUpdateHeader,
render:this.props.renderSectionHeader.bind(
null,
dataSource.getSectionHeaderData(sectionIdx),
sectionID)}));



sectionHeaderIndices.push(totalIndex++);}


for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var comboID=sectionID + rowID;
var shouldUpdateRow=rowCount >= this.state.prevRenderedRowsCount && 
dataSource.rowShouldUpdate(sectionIdx,rowIdx);
var row=
React.createElement(StaticRenderer,{
key:'r_' + comboID,
shouldUpdate:!!shouldUpdateRow,
render:this.props.renderRow.bind(
null,
dataSource.getRowData(sectionIdx,rowIdx),
sectionID,
rowID,
this.onRowHighlighted)});


bodyComponents.push(row);
totalIndex++;

if(this.props.renderSeparator && (
rowIdx !== rowIDs.length - 1 || sectionIdx === allRowIDs.length - 1)){
var adjacentRowHighlighted=
this.state.highlightedRow.sectionID === sectionID && (
this.state.highlightedRow.rowID === rowID || 
this.state.highlightedRow.rowID === rowIDs[rowIdx + 1]);

var separator=this.props.renderSeparator(
sectionID,
rowID,
adjacentRowHighlighted);

bodyComponents.push(separator);
totalIndex++;}

if(++rowCount === this.state.curRenderedRowsCount){
break;}}


if(rowCount >= this.state.curRenderedRowsCount){
break;}}



var props=merge(
this.props,{
onScroll:this._onScroll,
stickyHeaderIndices:sectionHeaderIndices});


if(!props.scrollEventThrottle){
props.scrollEventThrottle = DEFAULT_SCROLL_CALLBACK_THROTTLE;}


return (
React.createElement(ScrollView,_extends({},props,{
ref:SCROLLVIEW_REF}),
header,
bodyComponents,
footer));},








_measureAndUpdateScrollProps:function(){
RCTUIManager.measureLayout(
this.refs[SCROLLVIEW_REF].getInnerViewNode(),
React.findNodeHandle(this.refs[SCROLLVIEW_REF]),
logError,
this._setScrollContentHeight);

RCTUIManager.measureLayoutRelativeToParent(
React.findNodeHandle(this.refs[SCROLLVIEW_REF]),
logError,
this._setScrollVisibleHeight);},



_setScrollContentHeight:function(left,top,width,height){
this.scrollProperties.contentHeight = height;},


_setScrollVisibleHeight:function(left,top,width,height){
this.scrollProperties.visibleHeight = height;
this._updateVisibleRows();
this._renderMoreRowsIfNeeded();},


_renderMoreRowsIfNeeded:function(){
if(this.scrollProperties.contentHeight === null || 
this.scrollProperties.visibleHeight === null || 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
return;}


var distanceFromEnd=this._getDistanceFromEnd(this.scrollProperties);
if(distanceFromEnd < this.props.scrollRenderAheadDistance){
this._pageInNewRows();}},



_pageInNewRows:function(){var _this2=this;
var rowsToRender=Math.min(
this.state.curRenderedRowsCount + this.props.pageSize,
this.props.dataSource.getRowCount());

this.setState(
{
prevRenderedRowsCount:this.state.curRenderedRowsCount,
curRenderedRowsCount:rowsToRender},

function(){
_this2._measureAndUpdateScrollProps();
_this2.setState({
prevRenderedRowsCount:_this2.state.curRenderedRowsCount});});},





_getDistanceFromEnd:function(scrollProperties){
return scrollProperties.contentHeight - 
scrollProperties.visibleHeight - 
scrollProperties.offsetY;},


_updateVisibleRows:function(e){var _this3=this;
if(!this.props.onChangeVisibleRows){
return;}

var updatedFrames=e && e.nativeEvent.updatedChildFrames;
if(updatedFrames){
updatedFrames.forEach(function(newFrame){
_this3._childFrames[newFrame.index] = merge(newFrame);});}


var dataSource=this.props.dataSource;
var visibleTop=this.scrollProperties.offsetY;
var visibleBottom=visibleTop + this.scrollProperties.visibleHeight;
var allRowIDs=dataSource.rowIdentities;

var header=this.props.renderHeader && this.props.renderHeader();
var totalIndex=header?1:0;
var visibilityChanged=false;
var changedRows={};
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
if(rowIDs.length === 0){
continue;}

var sectionID=dataSource.sectionIdentities[sectionIdx];
if(this.props.renderSectionHeader){
totalIndex++;}

var visibleSection=this._visibleRows[sectionID];
if(!visibleSection){
visibleSection = {};}

for(var rowIdx=0;rowIdx < rowIDs.length;rowIdx++) {
var rowID=rowIDs[rowIdx];
var frame=this._childFrames[totalIndex];
totalIndex++;
if(!frame){
break;}

var rowVisible=visibleSection[rowID];
var top=frame.y;
var bottom=top + frame.height;
if(top > visibleBottom || bottom < visibleTop){
if(rowVisible){
visibilityChanged = true;
delete visibleSection[rowID];
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = false;}}else 

if(!rowVisible){
visibilityChanged = true;
visibleSection[rowID] = true;
if(!changedRows[sectionID]){
changedRows[sectionID] = {};}

changedRows[sectionID][rowID] = true;}}


if(!isEmpty(visibleSection)){
this._visibleRows[sectionID] = visibleSection;}else 
if(this._visibleRows[sectionID]){
delete this._visibleRows[sectionID];}}


visibilityChanged && this.props.onChangeVisibleRows(this._visibleRows,changedRows);},


_onScroll:function(e){
this.scrollProperties.visibleHeight = e.nativeEvent.layoutMeasurement.height;
this.scrollProperties.contentHeight = e.nativeEvent.contentSize.height;
this.scrollProperties.offsetY = e.nativeEvent.contentOffset.y;
this._updateVisibleRows(e);
var nearEnd=this._getDistanceFromEnd(this.scrollProperties) < this.props.onEndReachedThreshold;
if(nearEnd && 
this.props.onEndReached && 
this.scrollProperties.contentHeight !== this._sentEndForContentHeight && 
this.state.curRenderedRowsCount === this.props.dataSource.getRowCount()){
this._sentEndForContentHeight = this.scrollProperties.contentHeight;
this.props.onEndReached(e);}else 
{
this._renderMoreRowsIfNeeded();}


this.props.onScroll && this.props.onScroll(e);}});



module.exports = ListView;});
__d('ListViewDataSource',["invariant","isEmpty","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}





























var invariant=require('invariant');
var isEmpty=require('isEmpty');
var warning=require('warning');

function defaultGetRowData(
dataBlob,
sectionID,
rowID)
{
return dataBlob[sectionID][rowID];}


function defaultGetSectionHeaderData(
dataBlob,
sectionID)
{
return dataBlob[sectionID];}var 













































ListViewDataSource=(function(){


























function ListViewDataSource(params){_classCallCheck(this,ListViewDataSource);
invariant(
params && typeof params.rowHasChanged === 'function',
'Must provide a rowHasChanged function.');

this._rowHasChanged = params.rowHasChanged;
this._getRowData = params.getRowData || defaultGetRowData;
this._sectionHeaderHasChanged = params.sectionHeaderHasChanged;
this._getSectionHeaderData = 
params.getSectionHeaderData || defaultGetSectionHeaderData;

this._dataBlob = null;
this._dirtyRows = [];
this._dirtySections = [];
this._cachedRowCount = 0;



this.rowIdentities = [];
this.sectionIdentities = [];}_createClass(ListViewDataSource,[{key:'cloneWithRows',value:


















function cloneWithRows(
dataBlob,
rowIdentities)
{
var rowIds=rowIdentities?[rowIdentities]:null;
if(!this._sectionHeaderHasChanged){
this._sectionHeaderHasChanged = function(){return false;};}

return this.cloneWithRowsAndSections({s1:dataBlob},['s1'],rowIds);}},{key:'cloneWithRowsAndSections',value:













function cloneWithRowsAndSections(
dataBlob,
sectionIdentities,
rowIdentities)
{
invariant(
typeof this._sectionHeaderHasChanged === 'function',
'Must provide a sectionHeaderHasChanged function with section data.');

var newSource=new ListViewDataSource({
getRowData:this._getRowData,
getSectionHeaderData:this._getSectionHeaderData,
rowHasChanged:this._rowHasChanged,
sectionHeaderHasChanged:this._sectionHeaderHasChanged});

newSource._dataBlob = dataBlob;
if(sectionIdentities){
newSource.sectionIdentities = sectionIdentities;}else 
{
newSource.sectionIdentities = Object.keys(dataBlob);}

if(rowIdentities){
newSource.rowIdentities = rowIdentities;}else 
{
newSource.rowIdentities = [];
newSource.sectionIdentities.forEach(function(sectionID){
newSource.rowIdentities.push(Object.keys(dataBlob[sectionID]));});}


newSource._cachedRowCount = countRows(newSource.rowIdentities);

newSource._calculateDirtyArrays(
this._dataBlob,
this.sectionIdentities,
this.rowIdentities);


return newSource;}},{key:'getRowCount',value:


function getRowCount(){
return this._cachedRowCount;}},{key:'rowShouldUpdate',value:





function rowShouldUpdate(sectionIndex,rowIndex){
var needsUpdate=this._dirtyRows[sectionIndex][rowIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section, row: ' + sectionIndex + ', ' + rowIndex);
return needsUpdate;}},{key:'getRowData',value:





function getRowData(sectionIndex,rowIndex){
var sectionID=this.sectionIdentities[sectionIndex];
var rowID=this.rowIdentities[sectionIndex][rowIndex];
warning(
sectionID !== undefined && rowID !== undefined,
'rendering invalid section, row: ' + sectionIndex + ', ' + rowIndex);

return this._getRowData(this._dataBlob,sectionID,rowID);}},{key:'getRowIDForFlatIndex',value:






function getRowIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.rowIdentities[ii][accessIndex];}}


return null;}},{key:'getSectionIDForFlatIndex',value:






function getSectionIDForFlatIndex(index){
var accessIndex=index;
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
if(accessIndex >= this.rowIdentities[ii].length){
accessIndex -= this.rowIdentities[ii].length;}else 
{
return this.sectionIdentities[ii];}}


return null;}},{key:'getSectionLengths',value:





function getSectionLengths(){
var results=[];
for(var ii=0;ii < this.sectionIdentities.length;ii++) {
results.push(this.rowIdentities[ii].length);}

return results;}},{key:'sectionHeaderShouldUpdate',value:





function sectionHeaderShouldUpdate(sectionIndex){
var needsUpdate=this._dirtySections[sectionIndex];
warning(needsUpdate !== undefined,
'missing dirtyBit for section: ' + sectionIndex);
return needsUpdate;}},{key:'getSectionHeaderData',value:





function getSectionHeaderData(sectionIndex){
if(!this._getSectionHeaderData){
return null;}

var sectionID=this.sectionIdentities[sectionIndex];
warning(sectionID !== undefined,
'renderSection called on invalid section: ' + sectionIndex);
return this._getSectionHeaderData(this._dataBlob,sectionID);}},{key:'_calculateDirtyArrays',value:





















function _calculateDirtyArrays(
prevDataBlob,
prevSectionIDs,
prevRowIDs)
{

var prevSectionsHash=keyedDictionaryFromArray(prevSectionIDs);
var prevRowsHash={};
for(var ii=0;ii < prevRowIDs.length;ii++) {
var sectionID=prevSectionIDs[ii];
warning(
!prevRowsHash[sectionID],
'SectionID appears more than once: ' + sectionID);

prevRowsHash[sectionID] = keyedDictionaryFromArray(prevRowIDs[ii]);}



this._dirtySections = [];
this._dirtyRows = [];

var dirty;
for(var sIndex=0;sIndex < this.sectionIdentities.length;sIndex++) {
var sectionID=this.sectionIdentities[sIndex];

dirty = !prevSectionsHash[sectionID];
var sectionHeaderHasChanged=this._sectionHeaderHasChanged;
if(!dirty && sectionHeaderHasChanged){
dirty = sectionHeaderHasChanged(
this._getSectionHeaderData(prevDataBlob,sectionID),
this._getSectionHeaderData(this._dataBlob,sectionID));}


this._dirtySections.push(!!dirty);

this._dirtyRows[sIndex] = [];
for(var rIndex=0;rIndex < this.rowIdentities[sIndex].length;rIndex++) {
var rowID=this.rowIdentities[sIndex][rIndex];

dirty = 
!prevSectionsHash[sectionID] || 
!prevRowsHash[sectionID][rowID] || 
this._rowHasChanged(
this._getRowData(prevDataBlob,sectionID,rowID),
this._getRowData(this._dataBlob,sectionID,rowID));

this._dirtyRows[sIndex].push(!!dirty);}}}}]);return ListViewDataSource;})();





function countRows(allRowIDs){
var totalRows=0;
for(var sectionIdx=0;sectionIdx < allRowIDs.length;sectionIdx++) {
var rowIDs=allRowIDs[sectionIdx];
totalRows += rowIDs.length;}

return totalRows;}


function keyedDictionaryFromArray(arr){
if(isEmpty(arr)){
return {};}

var result={};
for(var ii=0;ii < arr.length;ii++) {
var key=arr[ii];
warning(!result[key],'Value appears more than once in array: ' + key);
result[key] = true;}

return result;}



module.exports = ListViewDataSource;});
__d('isEmpty',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 



















isEmpty(obj){
if(Array.isArray(obj)){
return obj.length === 0;}else 
if(typeof obj === 'object'){
for(var i in obj) {
return false;}

return true;}else 
{
return !obj;}}



module.exports = isEmpty;});
__d('ScrollView',["EdgeInsetsPropType","Platform","PointPropType","NativeModules","React","ReactNativeViewAttributes","NativeModules","ScrollResponder","StyleSheet","StyleSheetPropType","View","ViewStylePropTypes","createReactNativeComponentClass","deepDiffer","flattenStyle","insetsDiffer","invariant","pointsDiffer","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var Platform=require('Platform');
var PointPropType=require('PointPropType');
var RCTScrollView=require('NativeModules').UIManager.RCTScrollView;
var RCTScrollViewConsts=RCTScrollView.Constants;
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTUIManager=require('NativeModules').UIManager;
var ScrollResponder=require('ScrollResponder');
var StyleSheet=require('StyleSheet');
var StyleSheetPropType=require('StyleSheetPropType');
var View=require('View');
var ViewStylePropTypes=require('ViewStylePropTypes');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var flattenStyle=require('flattenStyle');
var insetsDiffer=require('insetsDiffer');
var invariant=require('invariant');
var pointsDiffer=require('pointsDiffer');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;

var SCROLLVIEW='ScrollView';
var INNERVIEW='InnerScrollView';









var ScrollView=React.createClass({
propTypes:{
automaticallyAdjustContentInsets:PropTypes.bool,
contentInset:EdgeInsetsPropType,
contentOffset:PointPropType,
onScroll:PropTypes.func,
onScrollAnimationEnd:PropTypes.func,
scrollEnabled:PropTypes.bool,
scrollIndicatorInsets:EdgeInsetsPropType,
showsHorizontalScrollIndicator:PropTypes.bool,
showsVerticalScrollIndicator:PropTypes.bool,
style:StyleSheetPropType(ViewStylePropTypes),
scrollEventThrottle:PropTypes.number,







bounces:PropTypes.bool,





bouncesZoom:PropTypes.bool,





alwaysBounceHorizontal:PropTypes.bool,





alwaysBounceVertical:PropTypes.bool,






centerContent:PropTypes.bool,















contentContainerStyle:StyleSheetPropType(ViewStylePropTypes),






decelerationRate:PropTypes.number,




horizontal:PropTypes.bool,




directionalLockEnabled:PropTypes.bool,




canCancelContentTouches:PropTypes.bool,








keyboardDismissMode:PropTypes.oneOf([
'none',
'interactive',
'on-drag']),







keyboardShouldPersistTaps:PropTypes.bool,



maximumZoomScale:PropTypes.number,



minimumZoomScale:PropTypes.number,





pagingEnabled:PropTypes.bool,




scrollsToTop:PropTypes.bool,







stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number),






removeClippedSubviews:PropTypes.bool,



zoomScale:PropTypes.number},


mixins:[ScrollResponder.Mixin],

getInitialState:function(){
return this.scrollResponderMixinGetInitialState();},


setNativeProps:function(props){
this.refs[SCROLLVIEW].setNativeProps(props);},


getInnerViewNode:function(){
return React.findNodeHandle(this.refs[INNERVIEW]);},


scrollTo:function(destY,destX){
if(Platform.OS === 'android'){
RCTUIManager.dispatchViewManagerCommand(
React.findNodeHandle(this),
RCTUIManager.RCTScrollView.Commands.scrollTo,
[destX || 0,destY || 0]);}else 

{
RCTUIManager.scrollTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);}},




scrollWithoutAnimationTo:function(destY,destX){
RCTUIManager.scrollWithoutAnimationTo(
React.findNodeHandle(this),
destX || 0,
destY || 0);},



render:function(){
var contentContainerStyle=[
this.props.horizontal && styles.contentContainerHorizontal,
this.props.contentContainerStyle];

if(__DEV__ && this.props.style){
var style=flattenStyle(this.props.style);
var childLayoutProps=['alignItems','justifyContent'].
filter(function(prop){return style && style[prop] !== undefined;});
invariant(
childLayoutProps.length === 0,
'ScrollView child layout (' + JSON.stringify(childLayoutProps) + 
') must by applied through the contentContainerStyle prop.');}


if(__DEV__){
if(this.props.onScroll && !this.props.scrollEventThrottle){
var onScroll=this.props.onScroll;
this.props.onScroll = function(){
console.log(
'You specified `onScroll` on a <ScrollView> but not ' + 
'`scrollEventThrottle`. You will only receive one event. ' + 
'Using `16` you get all the events but be aware that it may ' + 
'cause frame drops, use a bigger number if you don\'t need as ' + 
'much precision.');

onScroll.apply(this,arguments);};}}




var contentContainer=
React.createElement(View,{
ref:INNERVIEW,
style:contentContainerStyle,
removeClippedSubviews:this.props.removeClippedSubviews},
this.props.children);


var alwaysBounceHorizontal=
this.props.alwaysBounceHorizontal !== undefined?
this.props.alwaysBounceHorizontal:
this.props.horizontal;

var alwaysBounceVertical=
this.props.alwaysBounceVertical !== undefined?
this.props.alwaysBounceVertical:
!this.props.horizontal;

var props=_extends({},
this.props,{
alwaysBounceHorizontal:alwaysBounceHorizontal,
alwaysBounceVertical:alwaysBounceVertical,
style:[styles.base,this.props.style],
onTouchStart:this.scrollResponderHandleTouchStart,
onTouchMove:this.scrollResponderHandleTouchMove,
onTouchEnd:this.scrollResponderHandleTouchEnd,
onScrollBeginDrag:this.scrollResponderHandleScrollBeginDrag,
onScrollEndDrag:this.scrollResponderHandleScrollEndDrag,
onMomentumScrollBegin:this.scrollResponderHandleMomentumScrollBegin,
onMomentumScrollEnd:this.scrollResponderHandleMomentumScrollEnd,
onStartShouldSetResponder:this.scrollResponderHandleStartShouldSetResponder,
onStartShouldSetResponderCapture:this.scrollResponderHandleStartShouldSetResponderCapture,
onScrollShouldSetResponder:this.scrollResponderHandleScrollShouldSetResponder,
onScroll:this.scrollResponderHandleScroll,
onResponderGrant:this.scrollResponderHandleResponderGrant,
onResponderTerminationRequest:this.scrollResponderHandleTerminationRequest,
onResponderTerminate:this.scrollResponderHandleTerminate,
onResponderRelease:this.scrollResponderHandleResponderRelease,
onResponderReject:this.scrollResponderHandleResponderReject});


var ScrollViewClass;
if(Platform.OS === 'ios'){
ScrollViewClass = RCTScrollView;}else 
if(Platform.OS === 'android'){
if(this.props.horizontal){
ScrollViewClass = AndroidHorizontalScrollView;}else 
{
ScrollViewClass = AndroidScrollView;}

var keyboardDismissModeConstants={
'none':RCTScrollViewConsts.KeyboardDismissMode.None,
'interactive':RCTScrollViewConsts.KeyboardDismissMode.Interactive,
'on-drag':RCTScrollViewConsts.KeyboardDismissMode.OnDrag};

props.keyboardDismissMode = props.keyboardDismissMode?
keyboardDismissModeConstants[props.keyboardDismissMode]:undefined;}

invariant(
ScrollViewClass !== undefined,
'ScrollViewClass must not be undefined');


return (
React.createElement(ScrollViewClass,_extends({},props,{ref:SCROLLVIEW}),
contentContainer));}});





var styles=StyleSheet.create({
base:{
flex:1},

contentContainerHorizontal:{
alignSelf:'flex-start',
flexDirection:'row'}});



var validAttributes=_extends({},
ReactNativeViewAttributes.UIView,{
alwaysBounceHorizontal:true,
alwaysBounceVertical:true,
automaticallyAdjustContentInsets:true,
bounces:true,
centerContent:true,
contentInset:{diff:insetsDiffer},
contentOffset:{diff:pointsDiffer},
decelerationRate:true,
horizontal:true,
keyboardDismissMode:true,
keyboardShouldPersistTaps:true,
maximumZoomScale:true,
minimumZoomScale:true,
pagingEnabled:true,
removeClippedSubviews:true,
scrollEnabled:true,
scrollIndicatorInsets:{diff:insetsDiffer},
scrollsToTop:true,
showsHorizontalScrollIndicator:true,
showsVerticalScrollIndicator:true,
stickyHeaderIndices:{diff:deepDiffer},
scrollEventThrottle:true,
zoomScale:true});


if(Platform.OS === 'android'){
var AndroidScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'RCTScrollView'});

var AndroidHorizontalScrollView=createReactNativeComponentClass({
validAttributes:validAttributes,
uiViewClassName:'AndroidHorizontalScrollView'});}else 

if(Platform.OS === 'ios'){
var RCTScrollView=requireNativeComponent('RCTScrollView',ScrollView);}


module.exports = ScrollView;});
__d('PointPropType',["ReactPropTypes","createStrictShapeTypeChecker"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');

var PointPropType=createStrictShapeTypeChecker({
x:PropTypes.number,
y:PropTypes.number});


module.exports = PointPropType;});
__d('ScrollResponder',["NativeModules","RCTDeviceEventEmitter","React","Subscribable","TextInputState","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var Subscribable=require('Subscribable');
var TextInputState=require('TextInputState');

var RCTUIManager=NativeModules.UIManager;
var RCTUIManagerDeprecated=NativeModules.UIManager;
var RCTScrollViewConsts=RCTUIManager.RCTScrollView.Constants;

var warning=require('warning');















































































var IS_ANIMATING_TOUCH_START_THRESHOLD_MS=16;










var ScrollResponderMixin={
mixins:[Subscribable.Mixin],
statics:RCTScrollViewConsts,
scrollResponderMixinGetInitialState:function(){
return {
isTouching:false,
lastMomentumScrollBeginTime:0,
lastMomentumScrollEndTime:0,






observedScrollSinceBecomingResponder:false,
becameResponderWhileAnimating:false};},






scrollResponderHandleScrollShouldSetResponder:function(){
return this.state.isTouching;},



























scrollResponderHandleStartShouldSetResponder:function(){
return false;},













scrollResponderHandleStartShouldSetResponderCapture:function(e){

var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput){
return true;}

return this.scrollResponderIsAnimating();},












scrollResponderHandleResponderReject:function(){
warning(false,'ScrollView doesn\'t take rejection well - scrolls anyway');},

















scrollResponderHandleTerminationRequest:function(){
return !this.state.observedScrollSinceBecomingResponder;},







scrollResponderHandleTouchEnd:function(e){
var nativeEvent=e.nativeEvent;
this.state.isTouching = nativeEvent.touches.length !== 0;
this.props.onTouchEnd && this.props.onTouchEnd(e);},





scrollResponderHandleResponderRelease:function(e){
this.props.onResponderRelease && this.props.onResponderRelease(e);



var currentlyFocusedTextInput=TextInputState.currentlyFocusedField();
if(!this.props.keyboardShouldPersistTaps && 
currentlyFocusedTextInput != null && 
e.target !== currentlyFocusedTextInput && 
!this.state.observedScrollSinceBecomingResponder && 
!this.state.becameResponderWhileAnimating){
this.props.onScrollResponderKeyboardDismissed && 
this.props.onScrollResponderKeyboardDismissed(e);
TextInputState.blurTextInput(currentlyFocusedTextInput);}},



scrollResponderHandleScroll:function(e){
this.state.observedScrollSinceBecomingResponder = true;
this.props.onScroll && this.props.onScroll(e);},





scrollResponderHandleResponderGrant:function(e){
this.state.observedScrollSinceBecomingResponder = false;
this.props.onResponderGrant && this.props.onResponderGrant(e);
this.state.becameResponderWhileAnimating = this.scrollResponderIsAnimating();},









scrollResponderHandleScrollBeginDrag:function(e){
this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);},





scrollResponderHandleScrollEndDrag:function(e){
this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);},





scrollResponderHandleMomentumScrollBegin:function(e){
this.state.lastMomentumScrollBeginTime = Date.now();
this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);},





scrollResponderHandleMomentumScrollEnd:function(e){
this.state.lastMomentumScrollEndTime = Date.now();
this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);},













scrollResponderHandleTouchStart:function(e){
this.state.isTouching = true;
this.props.onTouchStart && this.props.onTouchStart(e);},













scrollResponderHandleTouchMove:function(e){
this.props.onTouchMove && this.props.onTouchMove(e);},







scrollResponderIsAnimating:function(){
var now=Date.now();
var timeSinceLastMomentumScrollEnd=now - this.state.lastMomentumScrollEndTime;
var isAnimating=timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || 
this.state.lastMomentumScrollEndTime < this.state.lastMomentumScrollBeginTime;
return isAnimating;},







scrollResponderScrollTo:function(offsetX,offsetY){
RCTUIManagerDeprecated.scrollTo(React.findNodeHandle(this),offsetX,offsetY);},






scrollResponderZoomTo:function(rect){
RCTUIManagerDeprecated.zoomToRect(React.findNodeHandle(this),rect);},












scrollResponderScrollNativeHandleToKeyboard:function(nodeHandle,additionalOffset,preventNegativeScrollOffset){
this.additionalScrollOffset = additionalOffset || 0;
this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;
RCTUIManager.measureLayout(
nodeHandle,
React.findNodeHandle(this),
this.scrollResponderTextInputFocusError,
this.scrollResponderInputMeasureAndScrollToKeyboard);},













scrollResponderInputMeasureAndScrollToKeyboard:function(left,top,width,height){
if(this.keyboardWillOpenTo){
var scrollOffsetY=
top - this.keyboardWillOpenTo.endCoordinates.screenY + height + 
this.additionalScrollOffset;





if(this.preventNegativeScrollOffset){
scrollOffsetY = Math.max(0,scrollOffsetY);}

this.scrollResponderScrollTo(0,scrollOffsetY);}

this.additionalOffset = 0;
this.preventNegativeScrollOffset = false;},


scrollResponderTextInputFocusError:function(e){
console.error('Error measuring text field: ',e);},








componentWillMount:function(){
this.keyboardWillOpenTo = null;
this.additionalScrollOffset = 0;
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillShow',this.scrollResponderKeyboardWillShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardWillHide',this.scrollResponderKeyboardWillHide);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidShow',this.scrollResponderKeyboardDidShow);
this.addListenerOn(RCTDeviceEventEmitter,'keyboardDidHide',this.scrollResponderKeyboardDidHide);},






























scrollResponderKeyboardWillShow:function(e){
this.keyboardWillOpenTo = e;
this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);},


scrollResponderKeyboardWillHide:function(e){
this.keyboardWillOpenTo = null;
this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);},


scrollResponderKeyboardDidShow:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidShow && this.props.onKeyboardDidShow();},


scrollResponderKeyboardDidHide:function(){
this.keyboardWillOpenTo = null;
this.props.onKeyboardDidHide && this.props.onKeyboardDidHide();}};




var ScrollResponder={
Mixin:ScrollResponderMixin};


module.exports = ScrollResponder;});
__d('Subscribable',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






















var Subscribable={};

Subscribable.Mixin = {

componentWillMount:function(){
this._subscribableSubscriptions = [];},


componentWillUnmount:function(){
this._subscribableSubscriptions.forEach(
function(subscription){return subscription.remove();});

this._subscribableSubscriptions = null;},















addListenerOn:function(
eventEmitter,
eventType,
listener,
context)
{
this._subscribableSubscriptions.push(
eventEmitter.addListener(eventType,listener,context));}};




module.exports = Subscribable;});
__d('StaticRenderer',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');

var StaticRenderer=React.createClass({
propTypes:{
shouldUpdate:React.PropTypes.bool.isRequired,
render:React.PropTypes.func.isRequired},


shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return this.props.render();}});



module.exports = StaticRenderer;});
__d('react-timer-mixin/TimerMixin',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';










var GLOBAL=typeof window === 'undefined'?global:window;

var setter=function(_setter,_clearer,array){
return function(callback,delta){
var id=_setter((function(){
_clearer.call(this,id);
callback.apply(this,arguments);}).
bind(this),delta);

if(!this[array]){
this[array] = [id];}else 
{
this[array].push(id);}

return id;};};



var clearer=function(_clearer,array){
return function(id){
if(this[array]){
var index=this[array].indexOf(id);
if(index !== -1){
this[array].splice(index,1);}}


_clearer(id);};};



var _timeouts='TimerMixin_timeouts';
var _clearTimeout=clearer(GLOBAL.clearTimeout,_timeouts);
var _setTimeout=setter(GLOBAL.setTimeout,_clearTimeout,_timeouts);

var _intervals='TimerMixin_intervals';
var _clearInterval=clearer(GLOBAL.clearInterval,_intervals);
var _setInterval=setter(GLOBAL.setInterval,function(){},_intervals);

var _immediates='TimerMixin_immediates';
var _clearImmediate=clearer(GLOBAL.clearImmediate,_immediates);
var _setImmediate=setter(GLOBAL.setImmediate,_clearImmediate,_immediates);

var _rafs='TimerMixin_rafs';
var _cancelAnimationFrame=clearer(GLOBAL.cancelAnimationFrame,_rafs);
var _requestAnimationFrame=setter(GLOBAL.requestAnimationFrame,_cancelAnimationFrame,_rafs);

var TimerMixin={
componentWillUnmount:function(){
this[_timeouts] && this[_timeouts].forEach(this.clearTimeout);
this[_intervals] && this[_intervals].forEach(this.clearInterval);
this[_immediates] && this[_immediates].forEach(this.clearImmediate);
this[_rafs] && this[_rafs].forEach(this.cancelAnimationFrame);},


setTimeout:_setTimeout,
clearTimeout:_clearTimeout,

setInterval:_setInterval,
clearInterval:_clearInterval,

setImmediate:_setImmediate,
clearImmediate:_clearImmediate,

requestAnimationFrame:_requestAnimationFrame,
cancelAnimationFrame:_cancelAnimationFrame};


module.exports = TimerMixin;});
__d('MapView',["EdgeInsetsPropType","NativeMethodsMixin","Platform","React","ReactNativeViewAttributes","View","createReactNativeComponentClass","deepDiffer","insetsDiffer","merge","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EdgeInsetsPropType=require('EdgeInsetsPropType');
var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var View=require('View');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var deepDiffer=require('deepDiffer');
var insetsDiffer=require('insetsDiffer');
var merge=require('merge');
var requireNativeComponent=require('requireNativeComponent');









var MapView=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









showsUserLocation:React.PropTypes.bool,





zoomEnabled:React.PropTypes.bool,








rotateEnabled:React.PropTypes.bool,








pitchEnabled:React.PropTypes.bool,





scrollEnabled:React.PropTypes.bool,







region:React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,





latitudeDelta:React.PropTypes.number.isRequired,
longitudeDelta:React.PropTypes.number.isRequired}),





annotations:React.PropTypes.arrayOf(React.PropTypes.shape({



latitude:React.PropTypes.number.isRequired,
longitude:React.PropTypes.number.isRequired,




title:React.PropTypes.string,
subtitle:React.PropTypes.string})),





maxDelta:React.PropTypes.number,




minDelta:React.PropTypes.number,





legalLabelInsets:EdgeInsetsPropType,




onRegionChange:React.PropTypes.func,




onRegionChangeComplete:React.PropTypes.func},


_onChange:function(event){
if(event.nativeEvent.continuous){
this.props.onRegionChange && 
this.props.onRegionChange(event.nativeEvent.region);}else 
{
this.props.onRegionChangeComplete && 
this.props.onRegionChangeComplete(event.nativeEvent.region);}},



render:function(){
return React.createElement(RCTMap,_extends({},this.props,{onChange:this._onChange}));}});



if(Platform.OS === 'android'){
var RCTMap=createReactNativeComponentClass({
validAttributes:merge(
ReactNativeViewAttributes.UIView,{
showsUserLocation:true,
zoomEnabled:true,
rotateEnabled:true,
pitchEnabled:true,
scrollEnabled:true,
region:{diff:deepDiffer},
annotations:{diff:deepDiffer},
maxDelta:true,
minDelta:true,
legalLabelInsets:{diff:insetsDiffer}}),


uiViewClassName:'RCTMap'});}else 

{
var RCTMap=requireNativeComponent('RCTMap',MapView);}


module.exports = MapView;});
__d('Navigator',["NativeModules","BackAndroid","Dimensions","InteractionMixin","NavigatorBreadcrumbNavigationBar","NavigatorInterceptor","NavigatorNavigationBar","NavigatorSceneConfigs","NavigatorStaticContextContainer","PanResponder","Platform","React","StaticContainer.react","StyleSheet","Subscribable","react-timer-mixin/TimerMixin","View","clamp","flattenStyle","getNavigatorContext","invariant","rebound/rebound"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};




























var AnimationsDebugModule=require('NativeModules').AnimationsDebugModule;
var BackAndroid=require('BackAndroid');
var Dimensions=require('Dimensions');
var InteractionMixin=require('InteractionMixin');
var NavigatorBreadcrumbNavigationBar=require('NavigatorBreadcrumbNavigationBar');
var NavigatorInterceptor=require('NavigatorInterceptor');
var NavigatorNavigationBar=require('NavigatorNavigationBar');
var NavigatorSceneConfigs=require('NavigatorSceneConfigs');
var NavigatorStaticContextContainer=require('NavigatorStaticContextContainer');
var PanResponder=require('PanResponder');
var Platform=require('Platform');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var View=require('View');

var clamp=require('clamp');
var flattenStyle=require('flattenStyle');
var getNavigatorContext=require('getNavigatorContext');
var invariant=require('invariant');
var rebound=require('rebound/rebound');

var PropTypes=React.PropTypes;




var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;
var SCENE_DISABLED_NATIVE_PROPS={
style:{
left:SCREEN_WIDTH,
opacity:0}};



var __uid=0;
function getuid(){
return __uid++;}



var styles=StyleSheet.create({
container:{
flex:1,
overflow:'hidden'},

defaultSceneStyle:{
position:'absolute',
left:0,
right:0,
bottom:0,
top:0},

baseScene:{
position:'absolute',
overflow:'hidden',
left:0,
right:0,
bottom:0,
top:0},

disabledScene:{
left:SCREEN_WIDTH},

transitioner:{
flex:1,
backgroundColor:'transparent',
overflow:'hidden'}});



var GESTURE_ACTIONS=[
'pop',
'jumpBack',
'jumpForward'];































































































var Navigator=React.createClass({

propTypes:{









configureScene:PropTypes.func,










renderScene:PropTypes.func.isRequired,







initialRoute:PropTypes.object,






initialRouteStack:PropTypes.arrayOf(PropTypes.object),




onWillFocus:PropTypes.func,





onDidFocus:PropTypes.func,




onItemRef:PropTypes.func,





navigationBar:PropTypes.node,




navigator:PropTypes.object,




sceneStyle:View.propTypes.style},


contextTypes:{},




statics:{
BreadcrumbNavigationBar:NavigatorBreadcrumbNavigationBar,
NavigationBar:NavigatorNavigationBar,
SceneConfigs:NavigatorSceneConfigs,
Interceptor:NavigatorInterceptor,
getContext:getNavigatorContext},


mixins:[TimerMixin,InteractionMixin,Subscribable.Mixin],

getDefaultProps:function(){
return {
configureScene:function(){return NavigatorSceneConfigs.PushFromRight;},
sceneStyle:styles.defaultSceneStyle};},



getInitialState:function(){var _this=this;
var routeStack=this.props.initialRouteStack || [this.props.initialRoute];
invariant(
routeStack.length >= 1,
'Navigator requires props.initialRoute or props.initialRouteStack.');

var initialRouteIndex=routeStack.length - 1;
if(this.props.initialRoute){
initialRouteIndex = routeStack.indexOf(this.props.initialRoute);
invariant(
initialRouteIndex !== -1,
'initialRoute is not in initialRouteStack.');}


return {
sceneConfigStack:routeStack.map(
function(route){return _this.props.configureScene(route);}),

idStack:routeStack.map(function(){return getuid();}),
routeStack:routeStack,


updatingRangeStart:0,
updatingRangeLength:routeStack.length,
presentedIndex:initialRouteIndex,
transitionFromIndex:null,
activeGesture:null,
pendingGestureProgress:null,
transitionQueue:[]};},



componentWillMount:function(){var _this2=this;
this.parentNavigator = getNavigatorContext(this) || this.props.navigator;
this._subRouteFocus = [];
this.navigatorContext = {

setHandlerForIndex:this.setHandlerForIndex,
request:this.request,


parentNavigator:this.parentNavigator,
getCurrentRoutes:this.getCurrentRoutes,



pop:this.requestPop,

jumpBack:this.jumpBack,
jumpForward:this.jumpForward,
jumpTo:this.jumpTo,
popToRoute:this.popToRoute,
push:this.push,
replace:this.replace,
replaceAtIndex:this.replaceAtIndex,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
immediatelyResetRouteStack:this.immediatelyResetRouteStack,
resetTo:this.resetTo,
popToTop:this.popToTop};

this._handlers = {};
this.springSystem = new rebound.SpringSystem();
this.spring = this.springSystem.createSpring();
this.spring.setRestSpeedThreshold(0.05);
this.spring.setCurrentValue(0).setAtRest();
this.spring.addListener({
onSpringEndStateChange:function(){
if(!_this2._interactionHandle){
_this2._interactionHandle = _this2.createInteractionHandle();}},


onSpringUpdate:function(){
_this2._handleSpringUpdate();},

onSpringAtRest:function(){
_this2._completeTransition();}});


this.panGesture = PanResponder.create({
onMoveShouldSetPanResponder:this._handleMoveShouldSetPanResponder,
onPanResponderGrant:this._handlePanResponderGrant,
onPanResponderRelease:this._handlePanResponderRelease,
onPanResponderMove:this._handlePanResponderMove,
onPanResponderTerminate:this._handlePanResponderTerminate});

this._itemRefs = {};
this._interactionHandle = null;
this._emitWillFocus(this.state.routeStack[this.state.presentedIndex]);},


request:function(action,arg1,arg2){
if(this.parentNavigator){
return this.parentNavigator.request.apply(null,arguments);}

return this._handleRequest.apply(null,arguments);},


requestPop:function(popToBeforeRoute){
return this.request('pop',popToBeforeRoute);},


requestPopTo:function(route){
return this.request('popTo',route);},


_handleRequest:function(action,arg1,arg2){
var childHandler=this._handlers[this.state.presentedIndex];
if(childHandler && childHandler(action,arg1,arg2)){
return true;}

switch(action){
case 'pop':
return this._handlePop(arg1);
case 'push':
return this._handlePush(arg1);
default:
invariant(false,'Unsupported request type ' + action);
return false;}},



_handlePop:function(popToBeforeRoute){
if(popToBeforeRoute){
var popToBeforeRouteIndex=this.state.routeStack.indexOf(popToBeforeRoute);
if(popToBeforeRouteIndex === -1){
return false;}

invariant(
popToBeforeRouteIndex <= this.state.presentedIndex,
'Cannot pop past a route that is forward in the navigator');

this._popN(this.state.presentedIndex - popToBeforeRouteIndex + 1);
return true;}

if(this.state.presentedIndex === 0){
return false;}

this.pop();
return true;},


_handlePush:function(route){
this.push(route);
return true;},


setHandlerForIndex:function(index,handler){
this._handlers[index] = handler;},


componentDidMount:function(){
this._handleSpringUpdate();
this._emitDidFocus(this.state.routeStack[this.state.presentedIndex]);
if(this.parentNavigator){
this.parentNavigator.setHandler(this._handleRequest);}else 
if(Platform.OS === 'android'){


BackAndroid.addEventListener('hardwareBackPress',this._handleAndroidBackPress);}},



componentWillUnmount:function(){
if(this.parentNavigator){
this.parentNavigator.setHandler(null);}else 
if(Platform.OS === 'android'){
BackAndroid.removeEventListener('hardwareBackPress',this._handleAndroidBackPress);}},



_handleAndroidBackPress:function(){
var didPop=this.requestPop();
if(!didPop){
BackAndroid.exitApp();}},










immediatelyResetRouteStack:function(nextRouteStack){var _this3=this;
var destIndex=nextRouteStack.length - 1;
this.setState({
idStack:nextRouteStack.map(getuid),
routeStack:nextRouteStack,
sceneConfigStack:nextRouteStack.map(
this.props.configureScene),

updatingRangeStart:0,
updatingRangeLength:nextRouteStack.length,
presentedIndex:destIndex,
activeGesture:null,
transitionFromIndex:null,
transitionQueue:[]},
function(){
_this3._handleSpringUpdate();});},



_transitionTo:function(destIndex,velocity,jumpSpringTo,cb){
if(destIndex === this.state.presentedIndex){
return;}

if(this.state.transitionFromIndex !== null){
this.state.transitionQueue.push({
destIndex:destIndex,
velocity:velocity,
cb:cb});

return;}

this.state.transitionFromIndex = this.state.presentedIndex;
this.state.presentedIndex = destIndex;
this.state.transitionCb = cb;
this._onAnimationStart();
if(AnimationsDebugModule){
AnimationsDebugModule.startRecordingFps();}

var sceneConfig=this.state.sceneConfigStack[this.state.transitionFromIndex] || 
this.state.sceneConfigStack[this.state.presentedIndex];
invariant(
sceneConfig,
'Cannot configure scene at index ' + this.state.transitionFromIndex);

if(jumpSpringTo != null){
this.spring.setCurrentValue(jumpSpringTo);}

this.spring.setOvershootClampingEnabled(true);
this.spring.getSpringConfig().friction = sceneConfig.springFriction;
this.spring.getSpringConfig().tension = sceneConfig.springTension;
this.spring.setVelocity(velocity || sceneConfig.defaultTransitionVelocity);
this.spring.setEndValue(1);
var willFocusRoute=this._subRouteFocus[this.state.presentedIndex] || this.state.routeStack[this.state.presentedIndex];
this._emitWillFocus(willFocusRoute);},






_handleSpringUpdate:function(){

if(this.state.transitionFromIndex != null){
this._transitionBetween(
this.state.transitionFromIndex,
this.state.presentedIndex,
this.spring.getCurrentValue());}else 

if(this.state.activeGesture != null){
var presentedToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(presentedToIndex > -1){
this._transitionBetween(
this.state.presentedIndex,
presentedToIndex,
this.spring.getCurrentValue());}}},








_completeTransition:function(){
if(this.spring.getCurrentValue() !== 1 && this.spring.getCurrentValue() !== 0){


if(this.state.pendingGestureProgress){
this.state.pendingGestureProgress = null;}

return;}

this._onAnimationEnd();
var presentedIndex=this.state.presentedIndex;
var didFocusRoute=this._subRouteFocus[presentedIndex] || this.state.routeStack[presentedIndex];
this._emitDidFocus(didFocusRoute);
if(AnimationsDebugModule){
AnimationsDebugModule.stopRecordingFps(Date.now());}

this.state.transitionFromIndex = null;
this.spring.setCurrentValue(0).setAtRest();
this._hideScenes();
if(this.state.transitionCb){
this.state.transitionCb();
this.state.transitionCb = null;}

if(this._interactionHandle){
this.clearInteractionHandle(this._interactionHandle);
this._interactionHandle = null;}

if(this.state.pendingGestureProgress){


var gestureToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gestureToIndex);
this.spring.setEndValue(this.state.pendingGestureProgress);
return;}

if(this.state.transitionQueue.length){
var queuedTransition=this.state.transitionQueue.shift();
this._enableScene(queuedTransition.destIndex);
this._transitionTo(
queuedTransition.destIndex,
queuedTransition.velocity,
null,
queuedTransition.cb);}},




_emitDidFocus:function(route){
if(this._lastDidFocus === route){
return;}

this._lastDidFocus = route;
if(this.props.onDidFocus){
this.props.onDidFocus(route);}

if(this.parentNavigator && this.parentNavigator.onDidFocus){
this.parentNavigator.onDidFocus(route);}},



_emitWillFocus:function(route){
if(this._lastWillFocus === route){
return;}

this._lastWillFocus = route;
var navBar=this._navBar;
if(navBar && navBar.handleWillFocus){
navBar.handleWillFocus(route);}

if(this.props.onWillFocus){
this.props.onWillFocus(route);}

if(this.parentNavigator && this.parentNavigator.onWillFocus){
this.parentNavigator.onWillFocus(route);}},






_hideScenes:function(){
var gesturingToIndex=null;
if(this.state.activeGesture){
gesturingToIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

for(var i=0;i < this.state.routeStack.length;i++) {
if(i === this.state.presentedIndex || 
i === this.state.transitionFromIndex || 
i === gesturingToIndex){
continue;}

this._disableScene(i);}},






_disableScene:function(sceneIndex){
this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(SCENE_DISABLED_NATIVE_PROPS);},





_enableScene:function(sceneIndex){

var sceneStyle=flattenStyle([styles.baseScene,this.props.sceneStyle]);

var enabledSceneNativeProps={
left:sceneStyle.left};

if(sceneIndex !== this.state.transitionFromIndex && 
sceneIndex !== this.state.presentedIndex){


enabledSceneNativeProps.opacity = 0;}

this.refs['scene_' + sceneIndex] && 
this.refs['scene_' + sceneIndex].setNativeProps(enabledSceneNativeProps);},


_onAnimationStart:function(){
var fromIndex=this.state.presentedIndex;
var toIndex=this.state.presentedIndex;
if(this.state.transitionFromIndex != null){
fromIndex = this.state.transitionFromIndex;}else 
if(this.state.activeGesture){
toIndex = this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);}

this._setRenderSceneToHarwareTextureAndroid(fromIndex,true);
this._setRenderSceneToHarwareTextureAndroid(toIndex,true);
var navBar=this._navBar;
if(navBar && navBar.onAnimationStart){
navBar.onAnimationStart(fromIndex,toIndex);}},



_onAnimationEnd:function(){
var max=this.state.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderSceneToHarwareTextureAndroid(index,false);}


var navBar=this._navBar;
if(navBar && navBar.onAnimationEnd){
navBar.onAnimationEnd();}},



_setRenderSceneToHarwareTextureAndroid:function(sceneIndex,shouldRenderToHardwareTexture){
var viewAtIndex=this.refs['scene_' + sceneIndex];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}

viewAtIndex.setNativeProps({renderToHardwareTextureAndroid:shouldRenderToHardwareTexture});},


_handleTouchStart:function(){
this._eligibleGestures = GESTURE_ACTIONS;},


_handleMoveShouldSetPanResponder:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
this._expectingGestureGrant = this._matchGestureAction(this._eligibleGestures,sceneConfig.gestures,gestureState);
return !!this._expectingGestureGrant;},


_doesGestureOverswipe:function(gestureName){
var wouldOverswipeBack=this.state.presentedIndex <= 0 && (
gestureName === 'pop' || gestureName === 'jumpBack');
var wouldOverswipeForward=this.state.presentedIndex >= this.state.routeStack.length - 1 && 
gestureName === 'jumpForward';
return wouldOverswipeForward || wouldOverswipeBack;},


_handlePanResponderGrant:function(e,gestureState){
invariant(
this._expectingGestureGrant,
'Responder granted unexpectedly.');

this._attachGesture(this._expectingGestureGrant);
this._onAnimationStart();
this._expectingGestureGrant = null;},


_deltaForGestureAction:function(gestureAction){
switch(gestureAction){
case 'pop':
case 'jumpBack':
return -1;
case 'jumpForward':
return 1;
default:
invariant(false,'Unsupported gesture action ' + gestureAction);
return;}},



_handlePanResponderRelease:function(e,gestureState){var _this4=this;
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
var releaseGestureAction=this.state.activeGesture;
if(!releaseGestureAction){

return;}

var releaseGesture=sceneConfig.gestures[releaseGestureAction];
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
if(this.spring.getCurrentValue() === 0){

this.spring.setCurrentValue(0).setAtRest();
this._completeTransition();
return;}

var isTravelVertical=releaseGesture.direction === 'top-to-bottom' || releaseGesture.direction === 'bottom-to-top';
var isTravelInverted=releaseGesture.direction === 'right-to-left' || releaseGesture.direction === 'bottom-to-top';
var velocity,gestureDistance;
if(isTravelVertical){
velocity = isTravelInverted?-gestureState.vy:gestureState.vy;
gestureDistance = isTravelInverted?-gestureState.dy:gestureState.dy;}else 
{
velocity = isTravelInverted?-gestureState.vx:gestureState.vx;
gestureDistance = isTravelInverted?-gestureState.dx:gestureState.dx;}

var transitionVelocity=clamp(-10,velocity,10);
if(Math.abs(velocity) < releaseGesture.notMoving){

var hasGesturedEnoughToComplete=gestureDistance > releaseGesture.fullDistance * releaseGesture.stillCompletionRatio;
transitionVelocity = hasGesturedEnoughToComplete?releaseGesture.snapVelocity:-releaseGesture.snapVelocity;}

if(transitionVelocity < 0 || this._doesGestureOverswipe(releaseGestureAction)){


if(this.state.transitionFromIndex == null){

var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
-transitionVelocity,
1 - this.spring.getCurrentValue());}}else 


{

this._transitionTo(
destIndex,
transitionVelocity,
null,
function(){
if(releaseGestureAction === 'pop'){
_this4._cleanScenesPastIndex(destIndex);}});}




this._detachGesture();},


_handlePanResponderTerminate:function(e,gestureState){
var destIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._detachGesture();
var transitionBackToPresentedIndex=this.state.presentedIndex;

this.state.presentedIndex = destIndex;
this._transitionTo(
transitionBackToPresentedIndex,
null,
1 - this.spring.getCurrentValue());},



_attachGesture:function(gestureId){
this.state.activeGesture = gestureId;
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._enableScene(gesturingToIndex);},


_detachGesture:function(){
this.state.activeGesture = null;
this.state.pendingGestureProgress = null;
this._hideScenes();},


_handlePanResponderMove:function(e,gestureState){
var sceneConfig=this.state.sceneConfigStack[this.state.presentedIndex];
if(this.state.activeGesture){
var gesture=sceneConfig.gestures[this.state.activeGesture];
return this._moveAttachedGesture(gesture,gestureState);}

var matchedGesture=this._matchGestureAction(GESTURE_ACTIONS,sceneConfig.gestures,gestureState);
if(matchedGesture){
this._attachGesture(matchedGesture);}},



_moveAttachedGesture:function(gesture,gestureState){
var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var distance=isTravelVertical?gestureState.dy:gestureState.dx;
distance = isTravelInverted?-distance:distance;
var gestureDetectMovement=gesture.gestureDetectMovement;
var nextProgress=(distance - gestureDetectMovement) / (
gesture.fullDistance - gestureDetectMovement);
if(nextProgress < 0 && gesture.isDetachable){
var gesturingToIndex=this.state.presentedIndex + this._deltaForGestureAction(this.state.activeGesture);
this._transitionBetween(this.state.presentedIndex,gesturingToIndex,0);
this._detachGesture();
if(this.state.pendingGestureProgress != null){
this.spring.setCurrentValue(0);}

return;}

if(this._doesGestureOverswipe(this.state.activeGesture)){
var frictionConstant=gesture.overswipe.frictionConstant;
var frictionByDistance=gesture.overswipe.frictionByDistance;
var frictionRatio=1 / (frictionConstant + Math.abs(nextProgress) * frictionByDistance);
nextProgress *= frictionRatio;}

nextProgress = clamp(0,nextProgress,1);
if(this.state.transitionFromIndex != null){
this.state.pendingGestureProgress = nextProgress;}else 
if(this.state.pendingGestureProgress){
this.spring.setEndValue(nextProgress);}else 
{
this.spring.setCurrentValue(nextProgress);}},



_matchGestureAction:function(eligibleGestures,gestures,gestureState){var _this5=this;
if(!gestures){
return null;}

var matchedGesture=null;
eligibleGestures.some(function(gestureName,gestureIndex){
var gesture=gestures[gestureName];
if(!gesture){
return;}

if(gesture.overswipe == null && _this5._doesGestureOverswipe(gestureName)){

return false;}

var isTravelVertical=gesture.direction === 'top-to-bottom' || gesture.direction === 'bottom-to-top';
var isTravelInverted=gesture.direction === 'right-to-left' || gesture.direction === 'bottom-to-top';
var currentLoc=isTravelVertical?gestureState.moveY:gestureState.moveX;
var travelDist=isTravelVertical?gestureState.dy:gestureState.dx;
var oppositeAxisTravelDist=
isTravelVertical?gestureState.dx:gestureState.dy;
var edgeHitWidth=gesture.edgeHitWidth;
if(isTravelInverted){
currentLoc = -currentLoc;
travelDist = -travelDist;
oppositeAxisTravelDist = -oppositeAxisTravelDist;
edgeHitWidth = isTravelVertical?
-(SCREEN_HEIGHT - edgeHitWidth):
-(SCREEN_WIDTH - edgeHitWidth);}

var moveStartedInRegion=gesture.edgeHitWidth == null || 
currentLoc < edgeHitWidth;
if(!moveStartedInRegion){
return false;}

var moveTravelledFarEnough=travelDist >= gesture.gestureDetectMovement;
if(!moveTravelledFarEnough){
return false;}

var directionIsCorrect=Math.abs(travelDist) > Math.abs(oppositeAxisTravelDist) * gesture.directionRatio;
if(directionIsCorrect){
matchedGesture = gestureName;
return true;}else 
{
_this5._eligibleGestures = _this5._eligibleGestures.slice().splice(gestureIndex,1);}});


return matchedGesture;},


_transitionSceneStyle:function(fromIndex,toIndex,progress,index){
var viewAtIndex=this.refs['scene_' + index];
if(viewAtIndex === null || viewAtIndex === undefined){
return;}


var sceneConfigIndex=fromIndex < toIndex?toIndex:fromIndex;
var sceneConfig=this.state.sceneConfigStack[sceneConfigIndex];

if(!sceneConfig){
sceneConfig = this.state.sceneConfigStack[sceneConfigIndex - 1];}

var styleToUse={};
var useFn=index < fromIndex || index < toIndex?
sceneConfig.animationInterpolators.out:
sceneConfig.animationInterpolators.into;
var directionAdjustedProgress=fromIndex < toIndex?progress:1 - progress;
var didChange=useFn(styleToUse,directionAdjustedProgress);
if(didChange){
viewAtIndex.setNativeProps({style:styleToUse});}},



_transitionBetween:function(fromIndex,toIndex,progress){
this._transitionSceneStyle(fromIndex,toIndex,progress,fromIndex);
this._transitionSceneStyle(fromIndex,toIndex,progress,toIndex);
var navBar=this._navBar;
if(navBar && navBar.updateProgress){
navBar.updateProgress(progress,fromIndex,toIndex);}},



_handleResponderTerminationRequest:function(){
return false;},


_resetUpdatingRange:function(){
this.state.updatingRangeStart = 0;
this.state.updatingRangeLength = this.state.routeStack.length;},


_getDestIndexWithinBounds:function(n){
var currentIndex=this.state.presentedIndex;
var destIndex=currentIndex + n;
invariant(
destIndex >= 0,
'Cannot jump before the first route.');

var maxIndex=this.state.routeStack.length - 1;
invariant(
maxIndex >= destIndex,
'Cannot jump past the last route.');

return destIndex;},


_jumpN:function(n){var _this6=this;
var destIndex=this._getDestIndexWithinBounds(n);
var requestTransitionAndResetUpdatingRange=function(){
_this6._enableScene(destIndex);
_this6._transitionTo(destIndex);
_this6._resetUpdatingRange();};

this.setState({
updatingRangeStart:destIndex,
updatingRangeLength:1},
requestTransitionAndResetUpdatingRange);},


jumpTo:function(route){
var destIndex=this.state.routeStack.indexOf(route);
invariant(
destIndex !== -1,
'Cannot jump to route that is not in the route stack');

this._jumpN(destIndex - this.state.presentedIndex);},


jumpForward:function(){
this._jumpN(1);},


jumpBack:function(){
this._jumpN(-1);},


push:function(route){var _this7=this;
invariant(!!route,'Must supply route to push');
var activeLength=this.state.presentedIndex + 1;
var activeStack=this.state.routeStack.slice(0,activeLength);
var activeIDStack=this.state.idStack.slice(0,activeLength);
var activeAnimationConfigStack=this.state.sceneConfigStack.slice(0,activeLength);
var nextStack=activeStack.concat([route]);
var destIndex=nextStack.length - 1;
var nextIDStack=activeIDStack.concat([getuid()]);
var nextAnimationConfigStack=activeAnimationConfigStack.concat([
this.props.configureScene(route)]);

var requestTransitionAndResetUpdatingRange=function(){
_this7._enableScene(destIndex);
_this7._transitionTo(destIndex);
_this7._resetUpdatingRange();};

this.setState({
idStack:nextIDStack,
routeStack:nextStack,
sceneConfigStack:nextAnimationConfigStack,
updatingRangeStart:nextStack.length - 1,
updatingRangeLength:1},
requestTransitionAndResetUpdatingRange);},


_popN:function(n){var _this8=this;
if(n === 0){
return;}

invariant(
this.state.presentedIndex - n >= 0,
'Cannot pop below zero');

var popIndex=this.state.presentedIndex - n;
this._enableScene(popIndex);
this._transitionTo(
popIndex,
null,
null,
function(){
_this8._cleanScenesPastIndex(popIndex);});},




pop:function(){
this._popN(1);},








replaceAtIndex:function(route,index,cb){var _this9=this;
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
var nextAnimationModeStack=this.state.sceneConfigStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;
nextAnimationModeStack[index] = this.props.configureScene(route);

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
sceneConfigStack:nextAnimationModeStack,
updatingRangeStart:index,
updatingRangeLength:1},
function(){
_this9._resetUpdatingRange();
if(index === _this9.state.presentedIndex){
_this9._emitWillFocus(route);
_this9._emitDidFocus(route);}

cb && cb();});},






replace:function(route){
this.replaceAtIndex(route,this.state.presentedIndex);},





replacePrevious:function(route){
this.replaceAtIndex(route,this.state.presentedIndex - 1);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling popToRoute for a route that doesn\'t exist!');

var numToPop=this.state.presentedIndex - indexOfRoute;
this._popN(numToPop);},


replacePreviousAndPop:function(route){
if(this.state.routeStack.length < 2){
return;}

this.replacePrevious(route);
this.pop();},


resetTo:function(route){var _this10=this;
invariant(!!route,'Must supply route to push');
this.replaceAtIndex(route,0,function(){


if(_this10.state.presentedIndex > 0){
_this10._popN(_this10.state.presentedIndex);}});},




getCurrentRoutes:function(){
return this.state.routeStack;},


_handleItemRef:function(itemId,route,ref){
this._itemRefs[itemId] = ref;
var itemIndex=this.state.idStack.indexOf(itemId);
if(itemIndex === -1){
return;}

this.props.onItemRef && this.props.onItemRef(ref,itemIndex,route);},


_cleanScenesPastIndex:function(index){var _this11=this;
var newStackLength=index + 1;

if(newStackLength < this.state.routeStack.length){
var updatingRangeStart=newStackLength;
var updatingRangeLength=this.state.routeStack.length - newStackLength + 1;
this.state.idStack.slice(newStackLength).map(function(removingId){
_this11._itemRefs[removingId] = null;});

this.setState({
updatingRangeStart:updatingRangeStart,
updatingRangeLength:updatingRangeLength,
sceneConfigStack:this.state.sceneConfigStack.slice(0,newStackLength),
idStack:this.state.idStack.slice(0,newStackLength),
routeStack:this.state.routeStack.slice(0,newStackLength)},
this._resetUpdatingRange);}},



_renderOptimizedScenes:function(){







var shouldRenderScenes=this.state.updatingRangeLength !== 0;
if(shouldRenderScenes){
return (
React.createElement(StaticContainer,{shouldUpdate:true},
React.createElement(View,_extends({
style:styles.transitioner},
this.panGesture.panHandlers,{
onTouchStart:this._handleTouchStart,
onResponderTerminationRequest:
this._handleResponderTerminationRequest}),

this.state.routeStack.map(this._renderOptimizedScene))));}









return (
React.createElement(StaticContainer,{shouldUpdate:false}));},



_renderOptimizedScene:function(route,i){var _this12=this;
var shouldRenderScene=
i >= this.state.updatingRangeStart && 
i <= this.state.updatingRangeStart + this.state.updatingRangeLength;
var sceneNavigatorContext=_extends({},
this.navigatorContext,{
route:route,
setHandler:function(handler){
_this12.navigatorContext.setHandlerForIndex(i,handler);},

onWillFocus:function(childRoute){
_this12._subRouteFocus[i] = childRoute;
if(_this12.state.presentedIndex === i){
_this12._emitWillFocus(childRoute);}},


onDidFocus:function(childRoute){
_this12._subRouteFocus[i] = childRoute;
if(_this12.state.presentedIndex === i){
_this12._emitDidFocus(childRoute);}}});



var scene=shouldRenderScene?
this._renderScene(route,i,sceneNavigatorContext):null;
return (
React.createElement(NavigatorStaticContextContainer,{
navigatorContext:sceneNavigatorContext,
key:'nav' + i,
shouldUpdate:shouldRenderScene},
scene));},




_renderScene:function(route,i,sceneNavigatorContext){var _this13=this;
var child=this.props.renderScene(
route,
sceneNavigatorContext);

var disabledSceneStyle=null;
if(i !== this.state.presentedIndex){
disabledSceneStyle = styles.disabledScene;}

var originalRef=child.ref;
if(originalRef != null && typeof originalRef !== 'function'){
console.warn(
'String refs are not supported for navigator scenes. Use a callback ' + 
'ref instead. Ignoring ref: ' + originalRef);

originalRef = null;}

return (
React.createElement(View,{
key:this.state.idStack[i],
ref:'scene_' + i,
onStartShouldSetResponderCapture:function(){
return !!_this13.state.transitionFromIndex || !!_this13.state.activeGesture;},

style:[styles.baseScene,this.props.sceneStyle,disabledSceneStyle]},
React.cloneElement(child,{
ref:function(component){
_this13._handleItemRef(_this13.state.idStack[i],route,component);
if(originalRef){
originalRef(component);}}})));},







_renderNavigationBar:function(){var _this14=this;
if(!this.props.navigationBar){
return null;}

return React.cloneElement(this.props.navigationBar,{
ref:function(navBar){_this14._navBar = navBar;},
navigator:this.navigatorContext,
navState:this.state});},



render:function(){
return (
React.createElement(View,{style:[styles.container,this.props.style]},
this._renderOptimizedScenes(),
this._renderNavigationBar()));}});





module.exports = Navigator;});
__d('BackAndroid',["warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var warning=require('warning');

function platformWarn(){
warning(false,'BackAndroid is not supported on this platform.');}


var BackAndroid={
exitApp:platformWarn,
addEventListener:platformWarn,
removeEventListener:platformWarn};


module.exports = BackAndroid;});
__d('InteractionMixin',["InteractionManager"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';







var InteractionManager=require('InteractionManager');






var InteractionMixin={
componentWillUnmount:function(){
while(this._interactionMixinHandles.length) {
InteractionManager.clearInteractionHandle(
this._interactionMixinHandles.pop());}},




_interactionMixinHandles:[],

createInteractionHandle:function(){
var handle=InteractionManager.createInteractionHandle();
this._interactionMixinHandles.push(handle);
return handle;},


clearInteractionHandle:function(clearHandle){
InteractionManager.clearInteractionHandle(clearHandle);
this._interactionMixinHandles = this._interactionMixinHandles.filter(
function(handle){return handle !== clearHandle;});},








runAfterInteractions:function(callback){
InteractionManager.runAfterInteractions(callback);}};



module.exports = InteractionMixin;});
__d('NavigatorBreadcrumbNavigationBar',["NavigatorBreadcrumbNavigationBarStyles","NavigatorNavigationBarStyles","React","StaticContainer.react","StyleSheet","View","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var NavigatorBreadcrumbNavigationBarStyles=require('NavigatorBreadcrumbNavigationBarStyles');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var invariant=require('invariant');

var Interpolators=NavigatorBreadcrumbNavigationBarStyles.Interpolators;
var PropTypes=React.PropTypes;




var CRUMB_PROPS=Interpolators.map(function(){return {style:{}};});
var ICON_PROPS=Interpolators.map(function(){return {style:{}};});
var SEPARATOR_PROPS=Interpolators.map(function(){return {style:{}};});
var TITLE_PROPS=Interpolators.map(function(){return {style:{}};});
var RIGHT_BUTTON_PROPS=Interpolators.map(function(){return {style:{}};});


var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};










var initStyle=function(index,presentedIndex){
return index === presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Center[index]:
index < presentedIndex?NavigatorBreadcrumbNavigationBarStyles.Left[index]:
NavigatorBreadcrumbNavigationBarStyles.Right[index];};


var NavigatorBreadcrumbNavigationBar=React.createClass({
propTypes:{
navigator:PropTypes.shape({
push:PropTypes.func,
pop:PropTypes.func,
replace:PropTypes.func,
popToRoute:PropTypes.func,
popToTop:PropTypes.func}),

routeMapper:PropTypes.shape({
rightContentForRoute:PropTypes.func,
titleContentForRoute:PropTypes.func,
iconForRoute:PropTypes.func}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
idStack:React.PropTypes.arrayOf(React.PropTypes.number),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorBreadcrumbNavigationBarStyles},


_updateIndexProgress:function(progress,index,fromIndex,toIndex){
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
invariant(
Interpolators[index],
'Cannot find breadcrumb interpolators for ' + index);

if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = Interpolators[index].CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = Interpolators[index].RightToCenter;}else 
{
interpolate = Interpolators[index].RightToLeft;}


if(interpolate.Crumb(CRUMB_PROPS[index].style,amount)){
this.refs['crumb_' + index].setNativeProps(CRUMB_PROPS[index]);}

if(interpolate.Icon(ICON_PROPS[index].style,amount)){
this.refs['icon_' + index].setNativeProps(ICON_PROPS[index]);}

if(interpolate.Separator(SEPARATOR_PROPS[index].style,amount)){
this.refs['separator_' + index].setNativeProps(SEPARATOR_PROPS[index]);}

if(interpolate.Title(TITLE_PROPS[index].style,amount)){
this.refs['title_' + index].setNativeProps(TITLE_PROPS[index]);}

var right=this.refs['right_' + index];
if(right && 
interpolate.RightItem(RIGHT_BUTTON_PROPS[index].style,amount)){
right.setNativeProps(RIGHT_BUTTON_PROPS[index]);}},



updateProgress:function(progress,fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



onAnimationStart:function(fromIndex,toIndex){
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,true);}},



onAnimationEnd:function(){
var max=this.props.navState.routeStack.length - 1;
for(var index=0;index <= max;index++) {
this._setRenderViewsToHardwareTextureAndroid(index,false);}},



_setRenderViewsToHardwareTextureAndroid:function(index,renderToHardwareTexture){
var props={
renderToHardwareTextureAndroid:renderToHardwareTexture};


this.refs['crumb_' + index].setNativeProps(props);
this.refs['icon_' + index].setNativeProps(props);
this.refs['separator_' + index].setNativeProps(props);
this.refs['title_' + index].setNativeProps(props);
var right=this.refs['right_' + index];
if(right){
right.setNativeProps(props);}},



render:function(){
var navState=this.props.navState;
var icons=navState && navState.routeStack.map(this._renderOrReturnBreadcrumb);
var titles=navState.routeStack.map(this._renderOrReturnTitle);
var buttons=navState.routeStack.map(this._renderOrReturnRightButton);
return (
React.createElement(View,{style:[styles.breadCrumbContainer,this.props.style]},
titles,
icons,
buttons));},




_renderOrReturnBreadcrumb:function(route,index){
var uid=this.props.navState.idStack[index];
var navBarRouteMapper=this.props.routeMapper;
var navOps=this.props.navigator;
var alreadyRendered=this.refs['crumbContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'crumbContainer' + uid,
key:'crumbContainer' + uid,
shouldUpdate:false}));}



var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'crumbContainer' + uid,
key:'crumbContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'crumb_' + index,style:firstStyles.Crumb},
React.createElement(View,{ref:'icon_' + index,style:firstStyles.Icon},
navBarRouteMapper.iconForRoute(route,navOps)),

React.createElement(View,{ref:'separator_' + index,style:firstStyles.Separator},
navBarRouteMapper.separatorForRoute(route,navOps)))));},






_renderOrReturnTitle:function(route,index){
var navState=this.props.navState;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['titleContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'titleContainer' + uid,
key:'titleContainer' + uid,
shouldUpdate:false}));}



var navBarRouteMapper=this.props.routeMapper;
var titleContent=navBarRouteMapper.titleContentForRoute(
navState.routeStack[index],
this.props.navigator);

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'titleContainer' + uid,
key:'titleContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'title_' + index,style:firstStyles.Title},
titleContent)));},





_renderOrReturnRightButton:function(route,index){
var navState=this.props.navState;
var navBarRouteMapper=this.props.routeMapper;
var uid=navState.idStack[index];
var alreadyRendered=this.refs['rightContainer' + uid];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:'rightContainer' + uid,
key:'rightContainer' + uid,
shouldUpdate:false}));}



var rightContent=navBarRouteMapper.rightContentForRoute(
navState.routeStack[index],
this.props.navigator);

if(!rightContent){
return null;}

var firstStyles=initStyle(index,navStatePresentedIndex(this.props.navState));
return (
React.createElement(StaticContainer,{
ref:'rightContainer' + uid,
key:'rightContainer' + uid,
shouldUpdate:false},
React.createElement(View,{ref:'right_' + index,style:firstStyles.RightItem},
rightContent)));}});






var styles=StyleSheet.create({
breadCrumbContainer:{
overflow:'hidden',
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0}});



module.exports = NavigatorBreadcrumbNavigationBar;});
__d('NavigatorBreadcrumbNavigationBarStyles',["Dimensions","NavigatorNavigationBarStyles","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var STATUS_BAR_HEIGHT=NavigatorNavigationBarStyles.General.StatusBarHeight;
var NAV_BAR_HEIGHT=NavigatorNavigationBarStyles.General.NavBarHeight;

var SPACING=4;
var ICON_WIDTH=40;
var SEPARATOR_WIDTH=9;
var CRUMB_WIDTH=ICON_WIDTH + SEPARATOR_WIDTH;

var OPACITY_RATIO=100;
var ICON_INACTIVE_OPACITY=0.6;
var MAX_BREADCRUMBS=10;

var CRUMB_BASE={
position:'absolute',
flexDirection:'row',
top:STATUS_BAR_HEIGHT,
width:CRUMB_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};


var ICON_BASE={
width:ICON_WIDTH,
height:NAV_BAR_HEIGHT};


var SEPARATOR_BASE={
width:SEPARATOR_WIDTH,
height:NAV_BAR_HEIGHT};


var TITLE_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};



var FIRST_TITLE_BASE=merge(TITLE_BASE,{
left:0,
right:0,
alignItems:'center',
height:NAV_BAR_HEIGHT});


var RIGHT_BUTTON_BASE={
position:'absolute',
top:STATUS_BAR_HEIGHT,
right:SPACING,
overflow:'hidden',
opacity:1,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'};






var LEFT=[];
var CENTER=[];
var RIGHT=[];
for(var i=0;i < MAX_BREADCRUMBS;i++) {
var crumbLeft=CRUMB_WIDTH * i + SPACING;
LEFT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:ICON_INACTIVE_OPACITY}),
Separator:merge(SEPARATOR_BASE,{opacity:1}),
Title:merge(TITLE_BASE,{left:crumbLeft,opacity:0}),
RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};

CENTER[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbLeft}),
Icon:merge(ICON_BASE,{opacity:1}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbLeft + ICON_WIDTH,
opacity:1}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:1})};

var crumbRight=SCREEN_WIDTH - 100;
RIGHT[i] = {
Crumb:merge(CRUMB_BASE,{left:crumbRight}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(TITLE_BASE,{
left:crumbRight + ICON_WIDTH,
opacity:0}),

RightItem:merge(RIGHT_BUTTON_BASE,{opacity:0})};}




CENTER[0] = {
Crumb:merge(CRUMB_BASE,{left:SCREEN_WIDTH / 4}),
Icon:merge(ICON_BASE,{opacity:0}),
Separator:merge(SEPARATOR_BASE,{opacity:0}),
Title:merge(FIRST_TITLE_BASE,{opacity:1}),
RightItem:CENTER[0].RightItem};

LEFT[0].Title = merge(FIRST_TITLE_BASE,{left:-SCREEN_WIDTH / 4,opacity:0});
RIGHT[0].Title = merge(FIRST_TITLE_BASE,{opacity:0});


var buildIndexSceneInterpolator=function(startStyles,endStyles){
return {
Crumb:buildStyleInterpolator({
left:{
type:'linear',
from:startStyles.Crumb.left,
to:endStyles.Crumb.left,
min:0,
max:1,
extrapolate:true}}),


Icon:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Icon.opacity,
to:endStyles.Icon.opacity,
min:0,
max:1}}),


Separator:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Separator.opacity,
to:endStyles.Separator.opacity,
min:0,
max:1}}),


Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


RightItem:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightItem.opacity,
to:endStyles.RightItem.opacity,
min:0,
max:1,
round:OPACITY_RATIO}})};};





var Interpolators=CENTER.map(function(_,ii){
return {

RightToCenter:buildIndexSceneInterpolator(RIGHT[ii],CENTER[ii]),

CenterToLeft:buildIndexSceneInterpolator(CENTER[ii],LEFT[ii]),

RightToLeft:buildIndexSceneInterpolator(RIGHT[ii],LEFT[ii])};});







module.exports = {
Interpolators:Interpolators,
Left:LEFT,
Center:CENTER,
Right:RIGHT,
IconWidth:ICON_WIDTH,
IconHeight:NAV_BAR_HEIGHT,
SeparatorWidth:SEPARATOR_WIDTH,
SeparatorHeight:NAV_BAR_HEIGHT};});
__d('NavigatorNavigationBarStyles',["Dimensions","buildStyleInterpolator","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var Dimensions=require('Dimensions');

var buildStyleInterpolator=require('buildStyleInterpolator');
var merge=require('merge');

var SCREEN_WIDTH=Dimensions.get('window').width;
var NAV_BAR_HEIGHT=44;
var STATUS_BAR_HEIGHT=20;
var NAV_HEIGHT=NAV_BAR_HEIGHT + STATUS_BAR_HEIGHT;

var BASE_STYLES={
Title:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
alignItems:'center',
width:SCREEN_WIDTH,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

LeftButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:0,
overflow:'hidden',
opacity:1,
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'},

RightButton:{
position:'absolute',
top:STATUS_BAR_HEIGHT,
left:2 * SCREEN_WIDTH / 3,
overflow:'hidden',
opacity:1,
alignItems:'flex-end',
width:SCREEN_WIDTH / 3,
height:NAV_BAR_HEIGHT,
backgroundColor:'transparent'}};










var Stages={
Left:{
Title:merge(BASE_STYLES.Title,{left:-SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:-SCREEN_WIDTH / 3,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH / 3,opacity:0})},

Center:{
Title:merge(BASE_STYLES.Title,{left:0,opacity:1}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:1}),
RightButton:merge(BASE_STYLES.RightButton,{left:2 * SCREEN_WIDTH / 3 - 0,opacity:1})},

Right:{
Title:merge(BASE_STYLES.Title,{left:SCREEN_WIDTH / 2,opacity:0}),
LeftButton:merge(BASE_STYLES.LeftButton,{left:0,opacity:0}),
RightButton:merge(BASE_STYLES.RightButton,{left:SCREEN_WIDTH,opacity:0})}};




var opacityRatio=100;

function buildSceneInterpolators(startStyles,endStyles){
return {
Title:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.Title.opacity,
to:endStyles.Title.opacity,
min:0,
max:1},

left:{
type:'linear',
from:startStyles.Title.left,
to:endStyles.Title.left,
min:0,
max:1,
extrapolate:true}}),


LeftButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.LeftButton.opacity,
to:endStyles.LeftButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.LeftButton.left,
to:endStyles.LeftButton.left,
min:0,
max:1}}),


RightButton:buildStyleInterpolator({
opacity:{
type:'linear',
from:startStyles.RightButton.opacity,
to:endStyles.RightButton.opacity,
min:0,
max:1,
round:opacityRatio},

left:{
type:'linear',
from:startStyles.RightButton.left,
to:endStyles.RightButton.left,
min:0,
max:1,
extrapolate:true}})};}





var Interpolators={

RightToCenter:buildSceneInterpolators(Stages.Right,Stages.Center),

CenterToLeft:buildSceneInterpolators(Stages.Center,Stages.Left),

RightToLeft:buildSceneInterpolators(Stages.Right,Stages.Left)};



module.exports = {
General:{
NavBarHeight:NAV_BAR_HEIGHT,
StatusBarHeight:STATUS_BAR_HEIGHT,
TotalNavHeight:NAV_HEIGHT},

Interpolators:Interpolators,
Stages:Stages};});
__d('buildStyleInterpolator',["keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










keyOf=require('keyOf');

var X_DIM=keyOf({x:null});
var Y_DIM=keyOf({y:null});
var Z_DIM=keyOf({z:null});
var W_DIM=keyOf({w:null});

var TRANSFORM_ROTATE_NAME=keyOf({transformRotateRadians:null});

var ShouldAllocateReusableOperationVars={
transformRotateRadians:true,
transformScale:true,
transformTranslate:true};


var InitialOperationField={
transformRotateRadians:[0,0,0,1],
transformTranslate:[0,0,0],
transformScale:[1,1,1]};



























































var ARGUMENT_NAMES_RE=/([^\s,]+)/g;



















var inline=function(func,replaceWithArgs){
var fnStr=func.toString();
var parameterNames=fnStr.slice(fnStr.indexOf('(') + 1,fnStr.indexOf(')')).
match(ARGUMENT_NAMES_RE) || 
[];
var replaceRegexStr=parameterNames.map(function(paramName){
return '\\b' + paramName + '\\b';}).
join('|');
var replaceRegex=new RegExp(replaceRegexStr,'g');
var fnBody=fnStr.substring(fnStr.indexOf('{') + 1,fnStr.lastIndexOf('}') - 1);
var newFnBody=fnBody.replace(replaceRegex,function(parameterName){
var indexInParameterNames=parameterNames.indexOf(parameterName);
var replacementName=replaceWithArgs[indexInParameterNames];
return replacementName;});

return newFnBody.split('\n');};






var MatrixOps={
unroll:function(matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
m0 = matVar[0];
m1 = matVar[1];
m2 = matVar[2];
m3 = matVar[3];
m4 = matVar[4];
m5 = matVar[5];
m6 = matVar[6];
m7 = matVar[7];
m8 = matVar[8];
m9 = matVar[9];
m10 = matVar[10];
m11 = matVar[11];
m12 = matVar[12];
m13 = matVar[13];
m14 = matVar[14];
m15 = matVar[15];},


matrixDiffers:function(retVar,matVar,m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15){
retVar = retVar || 
m0 !== matVar[0] || 
m1 !== matVar[1] || 
m2 !== matVar[2] || 
m3 !== matVar[3] || 
m4 !== matVar[4] || 
m5 !== matVar[5] || 
m6 !== matVar[6] || 
m7 !== matVar[7] || 
m8 !== matVar[8] || 
m9 !== matVar[9] || 
m10 !== matVar[10] || 
m11 !== matVar[11] || 
m12 !== matVar[12] || 
m13 !== matVar[13] || 
m14 !== matVar[14] || 
m15 !== matVar[15];},


transformScale:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[0] = matVar[0] * x;
matVar[1] = matVar[1] * x;
matVar[2] = matVar[2] * x;
matVar[3] = matVar[3] * x;
matVar[4] = matVar[4] * y;
matVar[5] = matVar[5] * y;
matVar[6] = matVar[6] * y;
matVar[7] = matVar[7] * y;
matVar[8] = matVar[8] * z;
matVar[9] = matVar[9] * z;
matVar[10] = matVar[10] * z;
matVar[11] = matVar[11] * z;
matVar[12] = matVar[12];
matVar[13] = matVar[13];
matVar[14] = matVar[14];
matVar[15] = matVar[15];},






transformTranslate:function(matVar,opVar){

var x=opVar[0];
var y=opVar[1];
var z=opVar[2];
matVar[12] = matVar[0] * x + matVar[4] * y + matVar[8] * z + matVar[12];
matVar[13] = matVar[1] * x + matVar[5] * y + matVar[9] * z + matVar[13];
matVar[14] = matVar[2] * x + matVar[6] * y + matVar[10] * z + matVar[14];
matVar[15] = matVar[3] * x + matVar[7] * y + matVar[11] * z + matVar[15];},






transformRotateRadians:function(matVar,q){

var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var a00=matVar[0];
var a01=matVar[1];
var a02=matVar[2];
var a03=matVar[3];
var a10=matVar[4];
var a11=matVar[5];
var a12=matVar[6];
var a13=matVar[7];
var a20=matVar[8];
var a21=matVar[9];
var a22=matVar[10];
var a23=matVar[11];

var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[1] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[2] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[3] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[5] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[6] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[7] = b0 * a03 + b1 * a13 + b2 * a23;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0 * a00 + b1 * a10 + b2 * a20;
matVar[9] = b0 * a01 + b1 * a11 + b2 * a21;
matVar[10] = b0 * a02 + b1 * a12 + b2 * a22;
matVar[11] = b0 * a03 + b1 * a13 + b2 * a23;}};





var MatrixOpsInitial={
transformScale:function(matVar,opVar){

matVar[0] = opVar[0];
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = opVar[1];
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = opVar[2];
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;},


transformTranslate:function(matVar,opVar){

matVar[0] = 1;
matVar[1] = 0;
matVar[2] = 0;
matVar[3] = 0;
matVar[4] = 0;
matVar[5] = 1;
matVar[6] = 0;
matVar[7] = 0;
matVar[8] = 0;
matVar[9] = 0;
matVar[10] = 1;
matVar[11] = 0;
matVar[12] = opVar[0];
matVar[13] = opVar[1];
matVar[14] = opVar[2];
matVar[15] = 1;},







transformRotateRadians:function(matVar,q){


var xQuat=q[0],yQuat=q[1],zQuat=q[2],wQuat=q[3];
var x2Quat=xQuat + xQuat;
var y2Quat=yQuat + yQuat;
var z2Quat=zQuat + zQuat;
var xxQuat=xQuat * x2Quat;
var xyQuat=xQuat * y2Quat;
var xzQuat=xQuat * z2Quat;
var yyQuat=yQuat * y2Quat;
var yzQuat=yQuat * z2Quat;
var zzQuat=zQuat * z2Quat;
var wxQuat=wQuat * x2Quat;
var wyQuat=wQuat * y2Quat;
var wzQuat=wQuat * z2Quat;

var quatMat0=1 - (yyQuat + zzQuat);
var quatMat1=xyQuat + wzQuat;
var quatMat2=xzQuat - wyQuat;
var quatMat4=xyQuat - wzQuat;
var quatMat5=1 - (xxQuat + zzQuat);
var quatMat6=yzQuat + wxQuat;
var quatMat8=xzQuat + wyQuat;
var quatMat9=yzQuat - wxQuat;
var quatMat10=1 - (xxQuat + yyQuat);



var b0=quatMat0,b1=quatMat1,b2=quatMat2;
matVar[0] = b0;
matVar[1] = b1;
matVar[2] = b2;
matVar[3] = 0;
b0 = quatMat4;b1 = quatMat5;b2 = quatMat6;
matVar[4] = b0;
matVar[5] = b1;
matVar[6] = b2;
matVar[7] = 0;
b0 = quatMat8;b1 = quatMat9;b2 = quatMat10;
matVar[8] = b0;
matVar[9] = b1;
matVar[10] = b2;
matVar[11] = 0;
matVar[12] = 0;
matVar[13] = 0;
matVar[14] = 0;
matVar[15] = 1;}};




var setNextValAndDetectChange=function(name,tmpVarName){
return (
'  if (!didChange) {\n' + 
'    var prevVal = result.' + name + ';\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'    didChange = didChange  || (' + tmpVarName + ' !== prevVal);\n' + 
'  } else {\n' + 
'    result.' + name + ' = ' + tmpVarName + ';\n' + 
'  }\n');};



var computeNextValLinear=function(anim,from,to,tmpVarName){
var hasRoundRatio=('round' in anim);
var roundRatio=anim.round;
var fn='  ratio = (value - ' + anim.min + ') / ' + (anim.max - anim.min) + ';\n';
if(!anim.extrapolate){
fn += '  ratio = ratio > 1 ? 1 : (ratio < 0 ? 0 : ratio);\n';}


var roundOpen=hasRoundRatio?'Math.round(' + roundRatio + ' * ':'';
var roundClose=hasRoundRatio?') / ' + roundRatio:'';
fn += 
'  ' + tmpVarName + ' = ' + 
roundOpen + 
'(' + from + ' * (1 - ratio) + ' + to + ' * ratio)' + 
roundClose + ';\n';
return fn;};


var computeNextValLinearScalar=function(anim){
return computeNextValLinear(anim,anim.from,anim.to,'nextScalarVal');};


var computeNextValConstant=function(anim){
var constantExpression=JSON.stringify(anim.value);
return '  nextScalarVal = ' + constantExpression + ';\n';};


var computeNextValStep=function(anim){
return (
'  nextScalarVal = value >= ' + (
anim.threshold + ' ? ' + anim.to + ' : ' + anim.from) + ';\n');};



var computeNextValIdentity=function(anim){
return '  nextScalarVal = value;\n';};


var operationVar=function(name){
return name + 'ReuseOp';};


var createReusableOperationVars=function(anims){
var ret='';
for(var name in anims) {
if(ShouldAllocateReusableOperationVars[name]){
ret += 'var ' + operationVar(name) + ' = [];\n';}}


return ret;};


var newlines=function(statements){
return '\n' + statements.join('\n') + '\n';};








var computeNextMatrixOperationField=function(anim,name,dimension,index){
var fieldAccess=operationVar(name) + '[' + index + ']';
if(anim.from[dimension] !== undefined && anim.to[dimension] !== undefined){
return '  ' + anim.from[dimension] !== anim.to[dimension]?
computeNextValLinear(anim,anim.from[dimension],anim.to[dimension],fieldAccess):
fieldAccess + ' = ' + anim.from[dimension] + ';';}else 
{
return '  ' + fieldAccess + ' = ' + InitialOperationField[name][index] + ';';}};



var unrolledVars=[];
for(var varIndex=0;varIndex < 16;varIndex++) {
unrolledVars.push('m' + varIndex);}

var setNextMatrixAndDetectChange=function(orderedMatrixOperations){
var fn=[
'  var transformMatrix = result.transformMatrix !== undefined ? ' + 
'result.transformMatrix : (result.transformMatrix = []);'];

fn.push.apply(
fn,
inline(MatrixOps.unroll,['transformMatrix'].concat(unrolledVars)));

for(var i=0;i < orderedMatrixOperations.length;i++) {
var opName=orderedMatrixOperations[i];
if(i === 0){
fn.push.apply(
fn,
inline(MatrixOpsInitial[opName],['transformMatrix',operationVar(opName)]));}else 

{
fn.push.apply(
fn,
inline(MatrixOps[opName],['transformMatrix',operationVar(opName)]));}}



fn.push.apply(
fn,
inline(MatrixOps.matrixDiffers,['didChange','transformMatrix'].concat(unrolledVars)));

return fn;};


var InterpolateMatrix={
transformTranslate:true,
transformRotateRadians:true,
transformScale:true};


var createFunctionString=function(anims){


var orderedMatrixOperations=[];



var fn='return (function() {\n';
fn += createReusableOperationVars(anims);
fn += 'return function(result, value) {\n';
fn += '  var didChange = false;\n';
fn += '  var nextScalarVal;\n';
fn += '  var ratio;\n';

for(var name in anims) {
var anim=anims[name];
if(anim.type === 'linear'){
if(InterpolateMatrix[name]){
orderedMatrixOperations.push(name);
var setOperations=[
computeNextMatrixOperationField(anim,name,X_DIM,0),
computeNextMatrixOperationField(anim,name,Y_DIM,1),
computeNextMatrixOperationField(anim,name,Z_DIM,2)];

if(name === TRANSFORM_ROTATE_NAME){
setOperations.push(computeNextMatrixOperationField(anim,name,W_DIM,3));}

fn += newlines(setOperations);}else 
{
fn += computeNextValLinearScalar(anim,'nextScalarVal');
fn += setNextValAndDetectChange(name,'nextScalarVal');}}else 

if(anim.type === 'constant'){
fn += computeNextValConstant(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'step'){
fn += computeNextValStep(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}else 
if(anim.type === 'identity'){
fn += computeNextValIdentity(anim);
fn += setNextValAndDetectChange(name,'nextScalarVal');}}


if(orderedMatrixOperations.length){
fn += newlines(setNextMatrixAndDetectChange(orderedMatrixOperations));}

fn += '  return didChange;\n';
fn += '};\n';
fn += '})()';
return fn;};







var buildStyleInterpolator=function(anims){
return Function(createFunctionString(anims))();};



module.exports = buildStyleInterpolator;});
__d('StaticContainer.react',["React","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 

















React=require('React');

var onlyChild=require('onlyChild');
















var StaticContainer=React.createClass({

shouldComponentUpdate:function(nextProps){
return nextProps.shouldUpdate;},


render:function(){
return onlyChild(this.props.children);}});




module.exports = StaticContainer;});
__d('NavigatorInterceptor',["React","getNavigatorContext"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var React=require('React');

var getNavigatorContext=require('getNavigatorContext');

var NavigatorInterceptor=React.createClass({

contextTypes:{
navigator:React.PropTypes.object},


componentWillMount:function(){
this.navigator = getNavigatorContext(this);},


componentDidMount:function(){
this.navigator.setHandler(this._navigatorHandleRequest);},


childContextTypes:{
navigator:React.PropTypes.object},


getChildContext:function(){var _this=this;
return {
navigator:_extends({},
this.navigator,{
setHandler:function(handler){
_this._childNavigationHandler = handler;}})};},





componentWillUnmount:function(){
this.navigator.setHandler(null);},


_navigatorHandleRequest:function(action,arg1,arg2){
if(this._interceptorHandle(action,arg1,arg2)){
return true;}

if(this._childNavigationHandler && this._childNavigationHandler(action,arg1,arg2)){
return true;}},



_interceptorHandle:function(action,arg1,arg2){
if(this.props.onRequest && this.props.onRequest(action,arg1,arg2)){
return true;}

switch(action){
case 'pop':
return this.props.onPopRequest && this.props.onPopRequest(arg1,arg2);
case 'popTo':
return this.props.onPopToRequest && this.props.onPopToRequest(arg1,arg2);
case 'push':
return this.props.onPushRequest && this.props.onPushRequest(arg1,arg2);
default:
return false;}},



render:function(){
return this.props.children;}});




module.exports = NavigatorInterceptor;});
__d('getNavigatorContext',["ReactInstanceMap"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




























var ReactInstanceMap=require('ReactInstanceMap');

function getNavigatorContext(el){

return ReactInstanceMap.get(el)._context.navigator;}


module.exports = getNavigatorContext;});
__d('NavigatorNavigationBar',["React","NavigatorNavigationBarStyles","StaticContainer.react","StyleSheet","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var NavigatorNavigationBarStyles=require('NavigatorNavigationBarStyles');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var COMPONENT_NAMES=['Title','LeftButton','RightButton'];

var navStatePresentedIndex=function(navState){
if(navState.presentedIndex !== undefined){
return navState.presentedIndex;}


return navState.observedTopOfStack;};


var NavigatorNavigationBar=React.createClass({

propTypes:{
navigator:React.PropTypes.object,
routeMapper:React.PropTypes.shape({
Title:React.PropTypes.func.isRequired,
LeftButton:React.PropTypes.func.isRequired,
RightButton:React.PropTypes.func.isRequired}),

navState:React.PropTypes.shape({
routeStack:React.PropTypes.arrayOf(React.PropTypes.object),
idStack:React.PropTypes.arrayOf(React.PropTypes.number),
presentedIndex:React.PropTypes.number}),

style:View.propTypes.style},


statics:{
Styles:NavigatorNavigationBarStyles},


_getReusableProps:function(
componentName,
index)
{
if(!this._reusableProps){
this._reusableProps = {};}

var propStack=this._reusableProps[componentName];
if(!propStack){
propStack = this._reusableProps[componentName] = [];}

var props=propStack[index];
if(!props){
props = propStack[index] = {style:{}};}

return props;},


_updateIndexProgress:function(
progress,
index,
fromIndex,
toIndex)
{
var amount=toIndex > fromIndex?progress:1 - progress;
var oldDistToCenter=index - fromIndex;
var newDistToCenter=index - toIndex;
var interpolate;
if(oldDistToCenter > 0 && newDistToCenter === 0 || 
newDistToCenter > 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
if(oldDistToCenter < 0 && newDistToCenter === 0 || 
newDistToCenter < 0 && oldDistToCenter === 0){
interpolate = NavigatorNavigationBarStyles.Interpolators.CenterToLeft;}else 
if(oldDistToCenter === newDistToCenter){
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToCenter;}else 
{
interpolate = NavigatorNavigationBarStyles.Interpolators.RightToLeft;}


COMPONENT_NAMES.forEach(function(componentName){
var component=this.refs[componentName + index];
var props=this._getReusableProps(componentName,index);
if(component && interpolate[componentName](props.style,amount)){
component.setNativeProps(props);}},

this);},


updateProgress:function(
progress,
fromIndex,
toIndex)
{
var max=Math.max(fromIndex,toIndex);
var min=Math.min(fromIndex,toIndex);
for(var index=min;index <= max;index++) {
this._updateIndexProgress(progress,index,fromIndex,toIndex);}},



render:function(){
var navState=this.props.navState;
var components=COMPONENT_NAMES.map(function(componentName){
return navState.routeStack.map(
this._renderOrReturnComponent.bind(this,componentName));},

this);

return (
React.createElement(View,{style:[styles.navBarContainer,this.props.style]},
components));},




_renderOrReturnComponent:function(
componentName,
route,
index)
{
var navState=this.props.navState;
var uid=navState.idStack[index];
var containerRef=componentName + 'Container' + uid;
var alreadyRendered=this.refs[containerRef];
if(alreadyRendered){

return (
React.createElement(StaticContainer,{
ref:containerRef,
key:containerRef,
shouldUpdate:false}));}




var content=this.props.routeMapper[componentName](
navState.routeStack[index],
this.props.navigator,
index,
this.props.navState);

if(!content){
return null;}


var initialStage=index === navStatePresentedIndex(this.props.navState)?
NavigatorNavigationBarStyles.Stages.Center:NavigatorNavigationBarStyles.Stages.Left;
return (
React.createElement(StaticContainer,{
ref:containerRef,
key:containerRef,
shouldUpdate:false},
React.createElement(View,{ref:componentName + index,style:initialStage[componentName]},
content)));}});








var styles=StyleSheet.create({
navBarContainer:{
position:'absolute',
height:NavigatorNavigationBarStyles.General.TotalNavHeight,
top:0,
left:0,
right:0,
backgroundColor:'transparent'}});



module.exports = NavigatorNavigationBar;});
__d('NavigatorSceneConfigs',["Dimensions","PixelRatio","buildStyleInterpolator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};



























var Dimensions=require('Dimensions');
var PixelRatio=require('PixelRatio');

var buildStyleInterpolator=require('buildStyleInterpolator');

var SCREEN_WIDTH=Dimensions.get('window').width;
var SCREEN_HEIGHT=Dimensions.get('window').height;

var FadeToTheLeft={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Math.round(Dimensions.get('window').width * 0.3),y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},












transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

translateX:{
from:0,
to:-Math.round(Dimensions.get('window').width * 0.3),
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FadeToTheRight=_extends({},
FadeToTheLeft,{
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:Math.round(SCREEN_WIDTH * 0.3),y:0,z:0}},

translateX:{
from:0,
to:Math.round(SCREEN_WIDTH * 0.3)}});



var FadeIn={
opacity:{
from:0,
to:1,
min:0.5,
max:1,
type:'linear',
extrapolate:false,
round:100}};



var FadeOut={
opacity:{
from:1,
to:0,
min:0,
max:0.5,
type:'linear',
extrapolate:false,
round:100}};



var ToTheLeft={
transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:-Dimensions.get('window').width,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

opacity:{
value:1.0,
type:'constant'},


translateX:{
from:0,
to:-Dimensions.get('window').width,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var FromTheRight={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:Dimensions.get('window').width,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


translateX:{
from:Dimensions.get('window').width,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},


scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var FromTheLeft=_extends({},
FromTheRight,{
transformTranslate:{
from:{x:-SCREEN_WIDTH,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateX:{
from:-SCREEN_WIDTH,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}});



var ToTheBack={


transformTranslate:{
from:{x:0,y:0,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

transformScale:{
from:{x:1,y:1,z:1},
to:{x:0.95,y:0.95,z:1},
min:0,
max:1,
type:'linear',
extrapolate:true},

opacity:{
from:1,
to:0.3,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

scaleX:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true},

scaleY:{
from:1,
to:0.95,
min:0,
max:1,
type:'linear',
extrapolate:true}};



var FromTheFront={
opacity:{
value:1.0,
type:'constant'},


transformTranslate:{
from:{x:0,y:Dimensions.get('window').height,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:Dimensions.get('window').height,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

scaleX:{
value:1,
type:'constant'},

scaleY:{
value:1,
type:'constant'}};



var ToTheBackAndroid={
opacity:{
value:1,
type:'constant'}};



var FromTheFrontAndroid={
opacity:{
from:0,
to:1,
min:0,
max:1,
type:'linear',
extrapolate:false,
round:100},

transformTranslate:{
from:{x:0,y:50,z:0},
to:{x:0,y:0,z:0},
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()},

translateY:{
from:50,
to:0,
min:0,
max:1,
type:'linear',
extrapolate:true,
round:PixelRatio.get()}};



var BaseOverswipeConfig={
frictionConstant:1,
frictionByDistance:1.5};


var BaseLeftToRightGesture={


isDetachable:false,


gestureDetectMovement:2,


notMoving:0.3,


directionRatio:0.66,


snapVelocity:2,


edgeHitWidth:30,


stillCompletionRatio:3 / 5,

fullDistance:SCREEN_WIDTH,

direction:'left-to-right'};



var BaseRightToLeftGesture=_extends({},
BaseLeftToRightGesture,{
direction:'right-to-left'});


var BaseConfig={

gestures:{
pop:BaseLeftToRightGesture},



springFriction:26,
springTension:200,


defaultTransitionVelocity:1.5,


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(FadeToTheLeft)}};



var NavigatorSceneConfigs={
PushFromRight:_extends({},
BaseConfig),


FloatFromRight:_extends({},
BaseConfig),


FloatFromLeft:_extends({},
BaseConfig,{
animationInterpolators:{
into:buildStyleInterpolator(FromTheLeft),
out:buildStyleInterpolator(FadeToTheRight)}}),


FloatFromBottom:_extends({},
BaseConfig,{
gestures:{
pop:_extends({},
BaseLeftToRightGesture,{
edgeHitWidth:150,
direction:'top-to-bottom',
fullDistance:SCREEN_HEIGHT})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheFront),
out:buildStyleInterpolator(ToTheBack)}}),


FloatFromBottomAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FromTheFrontAndroid),
out:buildStyleInterpolator(ToTheBackAndroid)}}),


FadeAndroid:_extends({},
BaseConfig,{
gestures:null,
animationInterpolators:{
into:buildStyleInterpolator(FadeIn),
out:buildStyleInterpolator(FadeOut)}}),


HorizontalSwipeJump:_extends({},
BaseConfig,{
gestures:{
jumpBack:_extends({},
BaseLeftToRightGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true}),

jumpForward:_extends({},
BaseRightToLeftGesture,{
overswipe:BaseOverswipeConfig,
edgeHitWidth:null,
isDetachable:true})},


animationInterpolators:{
into:buildStyleInterpolator(FromTheRight),
out:buildStyleInterpolator(ToTheLeft)}})};




module.exports = NavigatorSceneConfigs;});
__d('NavigatorStaticContextContainer',["React","StaticContainer.react"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



























var React=require('React');
var StaticContainer=require('StaticContainer.react');

var PropTypes=React.PropTypes;

var NavigatorStaticContextContainer=React.createClass({

childContextTypes:{
navigator:PropTypes.object},


getChildContext:function(){
return {
navigator:this.props.navigatorContext};},



render:function(){
return (
React.createElement(StaticContainer,this.props));}});




module.exports = NavigatorStaticContextContainer;});
__d('PanResponder',["TouchHistoryMath"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath=require("TouchHistoryMath");

var currentCentroidXOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidXOfTouchesChangedAfter;
var currentCentroidYOfTouchesChangedAfter=
TouchHistoryMath.currentCentroidYOfTouchesChangedAfter;
var previousCentroidXOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidXOfTouchesChangedAfter;
var previousCentroidYOfTouchesChangedAfter=
TouchHistoryMath.previousCentroidYOfTouchesChangedAfter;
var currentCentroidX=TouchHistoryMath.currentCentroidX;
var currentCentroidY=TouchHistoryMath.currentCentroidY;










































































var PanResponder={
































































_initializeGestureState:function(gestureState){
gestureState.moveX = 0;
gestureState.moveY = 0;
gestureState.x0 = 0;
gestureState.y0 = 0;
gestureState.dx = 0;
gestureState.dy = 0;
gestureState.vx = 0;
gestureState.vy = 0;
gestureState.numberActiveTouches = 0;

gestureState._accountsForMovesUpTo = 0;},


























_updateGestureStateOnMove:function(gestureState,touchHistory){
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
gestureState.moveX = currentCentroidXOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

gestureState.moveY = currentCentroidYOfTouchesChangedAfter(
touchHistory,
gestureState._accountsForMovesUpTo);

var movedAfter=gestureState._accountsForMovesUpTo;
var prevX=previousCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var x=currentCentroidXOfTouchesChangedAfter(touchHistory,movedAfter);
var prevY=previousCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var y=currentCentroidYOfTouchesChangedAfter(touchHistory,movedAfter);
var nextDX=gestureState.dx + (x - prevX);
var nextDY=gestureState.dy + (y - prevY);


var dt=
touchHistory.mostRecentTimeStamp - gestureState._accountsForMovesUpTo;
gestureState.vx = (nextDX - gestureState.dx) / dt;
gestureState.vy = (nextDY - gestureState.dy) / dt;

gestureState.dx = nextDX;
gestureState.dy = nextDY;
gestureState._accountsForMovesUpTo = touchHistory.mostRecentTimeStamp;},

































create:function(config){
var gestureState={

stateID:Math.random()};

PanResponder._initializeGestureState(gestureState);
var panHandlers={
onStartShouldSetResponder:function(e){
return config.onStartShouldSetPanResponder === undefined?false:
config.onStartShouldSetPanResponder(e,gestureState);},

onMoveShouldSetResponder:function(e){
return config.onMoveShouldSetPanResponder === undefined?false:
config.onMoveShouldSetPanResponder(e,gestureState);},

onStartShouldSetResponderCapture:function(e){


if(e.nativeEvent.touches.length === 1){
PanResponder._initializeGestureState(gestureState);}

gestureState.numberActiveTouches = e.touchHistory.numberActiveTouches;
return config.onStartShouldSetPanResponderCapture !== undefined?
config.onStartShouldSetPanResponderCapture(e,gestureState):false;},


onMoveShouldSetResponderCapture:function(e){
var touchHistory=e.touchHistory;



if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return false;}

PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
return config.onMoveShouldSetResponderCapture?
config.onMoveShouldSetPanResponderCapture(e,gestureState):false;},


onResponderGrant:function(e){
gestureState.x0 = currentCentroidX(e.touchHistory);
gestureState.y0 = currentCentroidY(e.touchHistory);
gestureState.dx = 0;
gestureState.dy = 0;
config.onPanResponderGrant && config.onPanResponderGrant(e,gestureState);},


onResponderReject:function(e){
config.onPanResponderReject && config.onPanResponderReject(e,gestureState);},


onResponderRelease:function(e){
config.onPanResponderRelease && config.onPanResponderRelease(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderStart:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderStart && config.onPanResponderStart(e,gestureState);},


onResponderMove:function(e){
var touchHistory=e.touchHistory;


if(gestureState._accountsForMovesUpTo === touchHistory.mostRecentTimeStamp){
return;}



PanResponder._updateGestureStateOnMove(gestureState,touchHistory);
config.onPanResponderMove && config.onPanResponderMove(e,gestureState);},


onResponderEnd:function(e){
var touchHistory=e.touchHistory;
gestureState.numberActiveTouches = touchHistory.numberActiveTouches;
config.onPanResponderEnd && config.onPanResponderEnd(e,gestureState);},


onResponderTerminate:function(e){
config.onPanResponderTerminate && 
config.onPanResponderTerminate(e,gestureState);
PanResponder._initializeGestureState(gestureState);},


onResponderTerminationRequest:function(e){
return config.onPanResponderTerminationRequest === undefined?true:
config.onPanResponderTerminationRequest(e,gestureState);}};


return {panHandlers:panHandlers};}};



module.exports = PanResponder;});
__d('TouchHistoryMath',[],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var TouchHistoryMath={
















centroidDimension:function(touchHistory,touchesChangedAfter,isXAxis,ofCurrent){
var touchBank=touchHistory.touchBank;
var total=0;
var count=0;

var oneTouchData=touchHistory.numberActiveTouches === 1?
touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch]:null;

if(oneTouchData !== null){
if(oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter){
total += ofCurrent && isXAxis?oneTouchData.currentPageX:
ofCurrent && !isXAxis?oneTouchData.currentPageY:
!ofCurrent && isXAxis?oneTouchData.previousPageX:
oneTouchData.previousPageY;
count = 1;}}else 

{
for(var i=0;i < touchBank.length;i++) {
var touchTrack=touchBank[i];
if(touchTrack !== null && 
touchTrack !== undefined && 
touchTrack.touchActive && 
touchTrack.currentTimeStamp >= touchesChangedAfter){
var toAdd;
if(ofCurrent && isXAxis){
toAdd = touchTrack.currentPageX;}else 
if(ofCurrent && !isXAxis){
toAdd = touchTrack.currentPageY;}else 
if(!ofCurrent && isXAxis){
toAdd = touchTrack.previousPageX;}else 
{
toAdd = touchTrack.previousPageY;}

total += toAdd;
count++;}}}



return count > 0?total / count:TouchHistoryMath.noCentroid;},


currentCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
true);},



currentCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
true);},



previousCentroidXOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
true,
false);},



previousCentroidYOfTouchesChangedAfter:function(touchHistory,touchesChangedAfter){
return TouchHistoryMath.centroidDimension(
touchHistory,
touchesChangedAfter,
false,
false);},



currentCentroidX:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
true,
true);},



currentCentroidY:function(touchHistory){
return TouchHistoryMath.centroidDimension(
touchHistory,
0,
false,
true);},



noCentroid:-1};


module.exports = TouchHistoryMath;});
__d('clamp',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























clamp(min,value,max){
if(value < min){
return min;}

if(value > max){
return max;}

return value;}


module.exports = clamp;});
__d('rebound/rebound',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (


























































































































function(){
var rebound={};
var util=rebound.util = {};
var concat=Array.prototype.concat;
var slice=Array.prototype.slice;


util.bind = function bind(func,context){
var args=slice.call(arguments,2);
return function(){
func.apply(context,concat.call(args,slice.call(arguments)));};};




util.extend = function extend(target,source){
for(var key in source) {
if(source.hasOwnProperty(key)){
target[key] = source[key];}}};









var SpringSystem=rebound.SpringSystem = function SpringSystem(looper){
this._springRegistry = {};
this._activeSprings = [];
this.listeners = [];
this._idleSpringIndices = [];
this.looper = looper || new AnimationLooper();
this.looper.springSystem = this;};


util.extend(SpringSystem.prototype,{

_springRegistry:null,

_isIdle:true,

_lastTimeMillis:-1,

_activeSprings:null,

listeners:null,

_idleSpringIndices:null,






setLooper:function(looper){
this.looper = looper;
looper.springSystem = this;},






createSpring:function(tension,friction){
var springConfig;
if(tension === undefined || friction === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromOrigamiTensionAndFriction(tension,friction);}

return this.createSpringWithConfig(springConfig);},





createSpringWithBouncinessAndSpeed:function(bounciness,speed){
var springConfig;
if(bounciness === undefined || speed === undefined){
springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;}else 
{
springConfig = 
SpringConfig.fromBouncinessAndSpeed(bounciness,speed);}

return this.createSpringWithConfig(springConfig);},



createSpringWithConfig:function(springConfig){
var spring=new Spring(this);
this.registerSpring(spring);
spring.setSpringConfig(springConfig);
return spring;},






getIsIdle:function(){
return this._isIdle;},





getSpringById:function(id){
return this._springRegistry[id];},




getAllSprings:function(){
var vals=[];
for(var id in this._springRegistry) {
if(this._springRegistry.hasOwnProperty(id)){
vals.push(this._springRegistry[id]);}}


return vals;},






registerSpring:function(spring){
this._springRegistry[spring.getId()] = spring;},






deregisterSpring:function(spring){
removeFirst(this._activeSprings,spring);
delete this._springRegistry[spring.getId()];},


advance:function(time,deltaTime){
while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();
for(var i=0,len=this._activeSprings.length;i < len;i++) {
var spring=this._activeSprings[i];
if(spring.systemShouldAdvance()){
spring.advance(time / 1000.0,deltaTime / 1000.0);}else 
{
this._idleSpringIndices.push(this._activeSprings.indexOf(spring));}}


while(this._idleSpringIndices.length > 0) {
var idx=this._idleSpringIndices.pop();
idx >= 0 && this._activeSprings.splice(idx,1);}},
















loop:function(currentTimeMillis){
var listener;
if(this._lastTimeMillis === -1){
this._lastTimeMillis = currentTimeMillis - 1;}

var ellapsedMillis=currentTimeMillis - this._lastTimeMillis;
this._lastTimeMillis = currentTimeMillis;

var i=0,len=this.listeners.length;
for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);}


this.advance(currentTimeMillis,ellapsedMillis);
if(this._activeSprings.length === 0){
this._isIdle = true;
this._lastTimeMillis = -1;}


for(i = 0;i < len;i++) {
listener = this.listeners[i];
listener.onAfterIntegrate && listener.onAfterIntegrate(this);}


if(!this._isIdle){
this.looper.run();}},






activateSpring:function(springId){
var spring=this._springRegistry[springId];
if(this._activeSprings.indexOf(spring) == -1){
this._activeSprings.push(spring);}

if(this.getIsIdle()){
this._isIdle = false;
this.looper.run();}},






addListener:function(listener){
this.listeners.push(listener);},



removeListener:function(listener){
removeFirst(this.listeners,listener);},



removeAllListeners:function(){
this.listeners = [];}});


















var Spring=rebound.Spring = function Spring(springSystem){
this._id = 's' + Spring._ID++;
this._springSystem = springSystem;
this.listeners = [];
this._currentState = new PhysicsState();
this._previousState = new PhysicsState();
this._tempState = new PhysicsState();};


util.extend(Spring,{
_ID:0,

MAX_DELTA_TIME_SEC:0.064,

SOLVER_TIMESTEP_SEC:0.001});



util.extend(Spring.prototype,{

_id:0,

_springConfig:null,

_overshootClampingEnabled:false,

_currentState:null,

_previousState:null,

_tempState:null,

_startValue:0,

_endValue:0,

_wasAtRest:true,

_restSpeedThreshold:0.001,

_displacementFromRestThreshold:0.001,

listeners:null,

_timeAccumulator:0,

_springSystem:null,


destroy:function(){
this.listeners = [];
this.frames = [];
this._springSystem.deregisterSpring(this);},




getId:function(){
return this._id;},





setSpringConfig:function(springConfig){
this._springConfig = springConfig;
return this;},



getSpringConfig:function(){
return this._springConfig;},





























setCurrentValue:function(currentValue,skipSetAtRest){
this._startValue = currentValue;
this._currentState.position = currentValue;
if(!skipSetAtRest){
this.setAtRest();}

this.notifyPositionUpdated(false,false);
return this;},





getStartValue:function(){
return this._startValue;},



getCurrentValue:function(){
return this._currentState.position;},




getCurrentDisplacementDistance:function(){
return this.getDisplacementDistanceForState(this._currentState);},


getDisplacementDistanceForState:function(state){
return Math.abs(this._endValue - state.position);},








setEndValue:function(endValue){
if(this._endValue == endValue && this.isAtRest()){
return this;}

this._startValue = this.getCurrentValue();
this._endValue = endValue;
this._springSystem.activateSpring(this.getId());
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
var onChange=listener.onSpringEndStateChange;
onChange && onChange(this);}

return this;},



getEndValue:function(){
return this._endValue;},









setVelocity:function(velocity){
if(velocity === this._currentState.velocity){
return this;}

this._currentState.velocity = velocity;
this._springSystem.activateSpring(this.getId());
return this;},



getVelocity:function(){
return this._currentState.velocity;},




setRestSpeedThreshold:function(restSpeedThreshold){
this._restSpeedThreshold = restSpeedThreshold;
return this;},



getRestSpeedThreshold:function(){
return this._restSpeedThreshold;},





setRestDisplacementThreshold:function(displacementFromRestThreshold){
this._displacementFromRestThreshold = displacementFromRestThreshold;},



getRestDisplacementThreshold:function(){
return this._displacementFromRestThreshold;},







setOvershootClampingEnabled:function(enabled){
this._overshootClampingEnabled = enabled;
return this;},



isOvershootClampingEnabled:function(){
return this._overshootClampingEnabled;},





isOvershooting:function(){
var start=this._startValue;
var end=this._endValue;
return this._springConfig.tension > 0 && (
start < end && this.getCurrentValue() > end || 
start > end && this.getCurrentValue() < end);},







advance:function(time,realDeltaTime){
var isAtRest=this.isAtRest();

if(isAtRest && this._wasAtRest){
return;}


var adjustedDeltaTime=realDeltaTime;
if(realDeltaTime > Spring.MAX_DELTA_TIME_SEC){
adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;}


this._timeAccumulator += adjustedDeltaTime;

var tension=this._springConfig.tension,
friction=this._springConfig.friction,

position=this._currentState.position,
velocity=this._currentState.velocity,
tempPosition=this._tempState.position,
tempVelocity=this._tempState.velocity,

aVelocity,aAcceleration,
bVelocity,bAcceleration,
cVelocity,cAcceleration,
dVelocity,dAcceleration,

dxdt,dvdt;

while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {

this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;

if(this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC){
this._previousState.position = position;
this._previousState.velocity = velocity;}


aVelocity = velocity;
aAcceleration = 
tension * (this._endValue - tempPosition) - friction * velocity;

tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
bVelocity = tempVelocity;
bAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
cVelocity = tempVelocity;
cAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;
tempVelocity = 
velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;
dVelocity = tempVelocity;
dAcceleration = 
tension * (this._endValue - tempPosition) - friction * tempVelocity;

dxdt = 
1.0 / 6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);
dvdt = 1.0 / 6.0 * (
aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);


position += dxdt * Spring.SOLVER_TIMESTEP_SEC;
velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;}


this._tempState.position = tempPosition;
this._tempState.velocity = tempVelocity;

this._currentState.position = position;
this._currentState.velocity = velocity;

if(this._timeAccumulator > 0){
this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);}


if(this.isAtRest() || 
this._overshootClampingEnabled && this.isOvershooting()){

if(this._springConfig.tension > 0){
this._startValue = this._endValue;
this._currentState.position = this._endValue;}else 
{
this._endValue = this._currentState.position;
this._startValue = this._endValue;}

this.setVelocity(0);
isAtRest = true;}


var notifyActivate=false;
if(this._wasAtRest){
this._wasAtRest = false;
notifyActivate = true;}


var notifyAtRest=false;
if(isAtRest){
this._wasAtRest = true;
notifyAtRest = true;}


this.notifyPositionUpdated(notifyActivate,notifyAtRest);},


notifyPositionUpdated:function(notifyActivate,notifyAtRest){
for(var i=0,len=this.listeners.length;i < len;i++) {
var listener=this.listeners[i];
if(notifyActivate && listener.onSpringActivate){
listener.onSpringActivate(this);}


if(listener.onSpringUpdate){
listener.onSpringUpdate(this);}


if(notifyAtRest && listener.onSpringAtRest){
listener.onSpringAtRest(this);}}},









systemShouldAdvance:function(){
return !this.isAtRest() || !this.wasAtRest();},


wasAtRest:function(){
return this._wasAtRest;},








isAtRest:function(){
return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (
this.getDisplacementDistanceForState(this._currentState) <= 
this._displacementFromRestThreshold || 
this._springConfig.tension === 0);},






setAtRest:function(){
this._endValue = this._currentState.position;
this._tempState.position = this._currentState.position;
this._currentState.velocity = 0;
return this;},


interpolate:function(alpha){
this._currentState.position = this._currentState.position * 
alpha + this._previousState.position * (1 - alpha);
this._currentState.velocity = this._currentState.velocity * 
alpha + this._previousState.velocity * (1 - alpha);},


getListeners:function(){
return this.listeners;},


addListener:function(newListener){
this.listeners.push(newListener);
return this;},


removeListener:function(listenerToRemove){
removeFirst(this.listeners,listenerToRemove);
return this;},


removeAllListeners:function(){
this.listeners = [];
return this;},


currentValueIsApproximately:function(value){
return Math.abs(this.getCurrentValue() - value) <= 
this.getRestDisplacementThreshold();}});









var PhysicsState=function PhysicsState(){};

util.extend(PhysicsState.prototype,{
position:0,
velocity:0});








var SpringConfig=rebound.SpringConfig = 
function SpringConfig(tension,friction){
this.tension = tension;
this.friction = friction;};







var AnimationLooper=rebound.AnimationLooper = function AnimationLooper(){
this.springSystem = null;
var _this=this;
var _run=function(){
_this.springSystem.loop(Date.now());};


this.run = function(){
util.onFrame(_run);};};









rebound.SimulationLooper = function SimulationLooper(timestep){
this.springSystem = null;
var time=0;
var running=false;
timestep = timestep || 16.667;

this.run = function(){
if(running){
return;}

running = true;
while(!this.springSystem.getIsIdle()) {
this.springSystem.loop(time += timestep);}

running = false;};};








rebound.SteppingSimulationLooper = function(timestep){
this.springSystem = null;
var time=0;



this.run = function(){};


this.step = function(timestep){
this.springSystem.loop(time += timestep);};};








var OrigamiValueConverter=rebound.OrigamiValueConverter = {
tensionFromOrigamiValue:function(oValue){
return (oValue - 30.0) * 3.62 + 194.0;},


origamiValueFromTension:function(tension){
return (tension - 194.0) / 3.62 + 30.0;},


frictionFromOrigamiValue:function(oValue){
return (oValue - 8.0) * 3.0 + 25.0;},


origamiFromFriction:function(friction){
return (friction - 25.0) / 3.0 + 8.0;}};










var BouncyConversion=rebound.BouncyConversion = function(bounciness,speed){
this.bounciness = bounciness;
this.speed = speed;
var b=this.normalize(bounciness / 1.7,0,20.0);
b = this.projectNormal(b,0.0,0.8);
var s=this.normalize(speed / 1.7,0,20.0);
this.bouncyTension = this.projectNormal(s,0.5,200);
this.bouncyFriction = this.quadraticOutInterpolation(
b,
this.b3Nobounce(this.bouncyTension),
0.01);};


util.extend(BouncyConversion.prototype,{

normalize:function(value,startValue,endValue){
return (value - startValue) / (endValue - startValue);},


projectNormal:function(n,start,end){
return start + n * (end - start);},


linearInterpolation:function(t,start,end){
return t * end + (1.0 - t) * start;},


quadraticOutInterpolation:function(t,start,end){
return this.linearInterpolation(2 * t - t * t,start,end);},


b3Friction1:function(x){
return 0.0007 * Math.pow(x,3) - 
0.031 * Math.pow(x,2) + 0.64 * x + 1.28;},


b3Friction2:function(x){
return 0.000044 * Math.pow(x,3) - 
0.006 * Math.pow(x,2) + 0.36 * x + 2;},


b3Friction3:function(x){
return 0.00000045 * Math.pow(x,3) - 
0.000332 * Math.pow(x,2) + 0.1078 * x + 5.84;},


b3Nobounce:function(tension){
var friction=0;
if(tension <= 18){
friction = this.b3Friction1(tension);}else 
if(tension > 18 && tension <= 44){
friction = this.b3Friction2(tension);}else 
{
friction = this.b3Friction3(tension);}

return friction;}});



util.extend(SpringConfig,{




fromOrigamiTensionAndFriction:function(tension,friction){
return new SpringConfig(
OrigamiValueConverter.tensionFromOrigamiValue(tension),
OrigamiValueConverter.frictionFromOrigamiValue(friction));},





fromBouncinessAndSpeed:function(bounciness,speed){
var bouncyConversion=new rebound.BouncyConversion(bounciness,speed);
return this.fromOrigamiTensionAndFriction(
bouncyConversion.bouncyTension,
bouncyConversion.bouncyFriction);},




coastingConfigWithOrigamiFriction:function(friction){
return new SpringConfig(
0,
OrigamiValueConverter.frictionFromOrigamiValue(friction));}});




SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = 
SpringConfig.fromOrigamiTensionAndFriction(40,7);

util.extend(SpringConfig.prototype,{friction:0,tension:0});




var colorCache={};
util.hexToRGB = function(color){
if(colorCache[color]){
return colorCache[color];}

color = color.replace('#','');
if(color.length === 3){
color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];}

var parts=color.match(/.{2}/g);

var ret={
r:parseInt(parts[0],16),
g:parseInt(parts[1],16),
b:parseInt(parts[2],16)};


colorCache[color] = ret;
return ret;};


util.rgbToHex = function(r,g,b){
r = r.toString(16);
g = g.toString(16);
b = b.toString(16);
r = r.length < 2?'0' + r:r;
g = g.length < 2?'0' + g:g;
b = b.length < 2?'0' + b:b;
return '#' + r + g + b;};


var MathUtil=rebound.MathUtil = {








mapValueInRange:function(value,fromLow,fromHigh,toLow,toHigh){
var fromRangeSize=fromHigh - fromLow;
var toRangeSize=toHigh - toLow;
var valueScale=(value - fromLow) / fromRangeSize;
return toLow + valueScale * toRangeSize;},





interpolateColor:
function(val,startColor,endColor,fromLow,fromHigh,asRGB){
fromLow = fromLow === undefined?0:fromLow;
fromHigh = fromHigh === undefined?1:fromHigh;
startColor = util.hexToRGB(startColor);
endColor = util.hexToRGB(endColor);
var r=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.r,endColor.r));

var g=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.g,endColor.g));

var b=Math.floor(
util.mapValueInRange(val,fromLow,fromHigh,startColor.b,endColor.b));

if(asRGB){
return 'rgb(' + r + ',' + g + ',' + b + ')';}else 
{
return util.rgbToHex(r,g,b);}},



degreesToRadians:function(deg){
return deg * Math.PI / 180;},


radiansToDegrees:function(rad){
return rad * 180 / Math.PI;}};




util.extend(util,MathUtil);







function removeFirst(array,item){
var idx=array.indexOf(item);
idx != -1 && array.splice(idx,1);}


var _onFrame;
if(typeof window !== 'undefined'){
_onFrame = window.requestAnimationFrame || 
window.webkitRequestAnimationFrame || 
window.mozRequestAnimationFrame || 
window.msRequestAnimationFrame || 
window.oRequestAnimationFrame;}

if(!_onFrame && typeof process !== 'undefined' && process.title === 'node'){
_onFrame = setImmediate;}



util.onFrame = function onFrame(func){
return _onFrame(func);};




if(typeof exports != 'undefined'){
util.extend(exports,rebound);}else 
if(typeof window != 'undefined'){
window.rebound = rebound;}})();});
__d('NavigatorIOS',["EventEmitter","Image","React","ReactNativeViewAttributes","NativeModules","StyleSheet","StaticContainer.react","View","createReactNativeComponentClass","invariant","logError","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var EventEmitter=require('EventEmitter');
var Image=require('Image');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTNavigatorManager=require('NativeModules').NavigatorManager;
var StyleSheet=require('StyleSheet');
var StaticContainer=require('StaticContainer.react');
var View=require('View');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var invariant=require('invariant');
var logError=require('logError');
var merge=require('merge');

var TRANSITIONER_REF='transitionerRef';

var PropTypes=React.PropTypes;

var __uid=0;
function getuid(){
return __uid++;}


var RCTNavigator=createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
requestedTopOfStack:true}),

uiViewClassName:'RCTNavigator'});


var RCTNavigatorItem=createReactNativeComponentClass({
validAttributes:{


title:true,
barTintColor:true,
leftButtonIcon:true,
leftButtonTitle:true,
onNavLeftButtonTap:true,
rightButtonIcon:true,
rightButtonTitle:true,
onNavRightButtonTap:true,
backButtonIcon:true,
backButtonTitle:true,
tintColor:true,
navigationBarHidden:true,
titleTextColor:true,
style:true},

uiViewClassName:'RCTNavItem'});


var NavigatorTransitionerIOS=React.createClass({
requestSchedulingNavigation:function(cb){
RCTNavigatorManager.requestSchedulingJavaScriptNavigation(
React.findNodeHandle(this),
logError,
cb);},



render:function(){
return (
React.createElement(RCTNavigator,this.props));}});

























































































































var NavigatorIOS=React.createClass({

propTypes:{






initialRoute:PropTypes.shape({



component:PropTypes.func.isRequired,




title:PropTypes.string.isRequired,





passProps:PropTypes.object,






backButtonIcon:Image.propTypes.source,






backButtonTitle:PropTypes.string,




leftButtonIcon:Image.propTypes.source,




leftButtonTitle:PropTypes.string,




onLeftButtonPress:PropTypes.func,




rightButtonIcon:Image.propTypes.source,




rightButtonTitle:PropTypes.string,




onRightButtonPress:PropTypes.func,




wrapperStyle:View.propTypes.style}).

isRequired,




navigationBarHidden:PropTypes.bool,





itemWrapperStyle:View.propTypes.style,




tintColor:PropTypes.string,




barTintColor:PropTypes.string,




titleTextColor:PropTypes.string},



navigator:undefined,

componentWillMount:function(){


this.navigator = {
push:this.push,
pop:this.pop,
popN:this.popN,
replace:this.replace,
replacePrevious:this.replacePrevious,
replacePreviousAndPop:this.replacePreviousAndPop,
resetTo:this.resetTo,
popToRoute:this.popToRoute,
popToTop:this.popToTop};},



getInitialState:function(){
return {
idStack:[getuid()],
routeStack:[this.props.initialRoute],

requestedTopOfStack:0,






observedTopOfStack:0,
progress:1,
fromIndex:0,
toIndex:0,


makingNavigatorRequest:false,



updatingAllIndicesAtOrBeyond:0};},



_toFocusOnNavigationComplete:undefined,

_handleFocusRequest:function(item){
if(this.state.makingNavigatorRequest){
this._toFocusOnNavigationComplete = item;}else 
{
this._getFocusEmitter().emit('focus',item);}},



_focusEmitter:undefined,

_getFocusEmitter:function(){

var focusEmitter=this._focusEmitter;
if(!focusEmitter){
focusEmitter = new EventEmitter();
this._focusEmitter = focusEmitter;}

return focusEmitter;},


getChildContext:function()


{
return {
onFocusRequested:this._handleFocusRequest,
focusEmitter:this._getFocusEmitter()};},



childContextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_tryLockNavigator:function(cb){
this.refs[TRANSITIONER_REF].requestSchedulingNavigation(
function(acquiredLock){return acquiredLock && cb();});},



_handleNavigatorStackChanged:function(e){
var newObservedTopOfStack=e.nativeEvent.stackLength - 1;
invariant(
newObservedTopOfStack <= this.state.requestedTopOfStack,
'No navigator item should be pushed without JS knowing about it %s %s',newObservedTopOfStack,this.state.requestedTopOfStack);

var wasWaitingForConfirmation=
this.state.requestedTopOfStack !== this.state.observedTopOfStack;
if(wasWaitingForConfirmation){
invariant(
newObservedTopOfStack === this.state.requestedTopOfStack,
'If waiting for observedTopOfStack to reach requestedTopOfStack, ' + 
'the only valid observedTopOfStack should be requestedTopOfStack.');}











var nextState={
observedTopOfStack:newObservedTopOfStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:null,
progress:1,
toIndex:newObservedTopOfStack,
fromIndex:newObservedTopOfStack};

this.setState(nextState,this._eliminateUnneededChildren);},


_eliminateUnneededChildren:function(){



var updatingAllIndicesAtOrBeyond=
this.state.routeStack.length > this.state.observedTopOfStack + 1?
this.state.observedTopOfStack + 1:
null;
this.setState({
idStack:this.state.idStack.slice(0,this.state.observedTopOfStack + 1),
routeStack:this.state.routeStack.slice(0,this.state.observedTopOfStack + 1),

requestedTopOfStack:this.state.observedTopOfStack,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:updatingAllIndicesAtOrBeyond});},



push:function(route){var _this=this;
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
this._tryLockNavigator(function(){
var nextStack=_this.state.routeStack.concat([route]);
var nextIDStack=_this.state.idStack.concat([getuid()]);
_this.setState({


idStack:nextIDStack,
routeStack:nextStack,
requestedTopOfStack:nextStack.length - 1,
makingNavigatorRequest:true,
updatingAllIndicesAtOrBeyond:nextStack.length - 1});});}},





popN:function(n){var _this2=this;
if(n === 0){
return;}


if(this.state.requestedTopOfStack === this.state.observedTopOfStack){
if(this.state.requestedTopOfStack > 0){
this._tryLockNavigator(function(){
invariant(
_this2.state.requestedTopOfStack - n >= 0,
'Cannot pop below 0');

_this2.setState({
requestedTopOfStack:_this2.state.requestedTopOfStack - n,
makingNavigatorRequest:true,


updatingAllIndicesAtOrBeyond:null});});}}},






pop:function(){
this.popN(1);},








replaceAtIndex:function(route,index){
invariant(!!route,'Must supply route to replace');
if(index < 0){
index += this.state.routeStack.length;}


if(this.state.routeStack.length <= index){
return;}




var nextIDStack=this.state.idStack.slice();
var nextRouteStack=this.state.routeStack.slice();
nextIDStack[index] = getuid();
nextRouteStack[index] = route;

this.setState({
idStack:nextIDStack,
routeStack:nextRouteStack,
makingNavigatorRequest:false,
updatingAllIndicesAtOrBeyond:index});},






replace:function(route){
this.replaceAtIndex(route,-1);},





replacePrevious:function(route){
this.replaceAtIndex(route,-2);},


popToTop:function(){
this.popToRoute(this.state.routeStack[0]);},


popToRoute:function(route){
var indexOfRoute=this.state.routeStack.indexOf(route);
invariant(
indexOfRoute !== -1,
'Calling pop to route for a route that doesn\'t exist!');

var numToPop=this.state.routeStack.length - indexOfRoute - 1;
this.popN(numToPop);},


replacePreviousAndPop:function(route){var _this3=this;

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

if(this.state.routeStack.length < 2){
return;}

this._tryLockNavigator(function(){
_this3.replacePrevious(route);
_this3.setState({
requestedTopOfStack:_this3.state.requestedTopOfStack - 1,
makingNavigatorRequest:true});});},




resetTo:function(route){
invariant(!!route,'Must supply route to push');

if(this.state.requestedTopOfStack !== this.state.observedTopOfStack){
return;}

this.replaceAtIndex(route,0);
this.popToRoute(route);},


handleNavigationComplete:function(e){
if(this._toFocusOnNavigationComplete){
this._getFocusEmitter().emit('focus',this._toFocusOnNavigationComplete);
this._toFocusOnNavigationComplete = null;}

this._handleNavigatorStackChanged(e);},


_routeToStackItem:function(route,i){
var Component=route.component;
var shouldUpdateChild=this.state.updatingAllIndicesAtOrBeyond !== null && 
this.state.updatingAllIndicesAtOrBeyond >= i;

return (
React.createElement(StaticContainer,{key:'nav' + i,shouldUpdate:shouldUpdateChild},
React.createElement(RCTNavigatorItem,{
title:route.title,
style:[
styles.stackItem,
this.props.itemWrapperStyle,
route.wrapperStyle],

backButtonIcon:this._imageNameFromSource(route.backButtonIcon),
backButtonTitle:route.backButtonTitle,
leftButtonIcon:this._imageNameFromSource(route.leftButtonIcon),
leftButtonTitle:route.leftButtonTitle,
onNavLeftButtonTap:route.onLeftButtonPress,
rightButtonIcon:this._imageNameFromSource(route.rightButtonIcon),
rightButtonTitle:route.rightButtonTitle,
onNavRightButtonTap:route.onRightButtonPress,
navigationBarHidden:this.props.navigationBarHidden,
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor,
titleTextColor:this.props.titleTextColor},
React.createElement(Component,_extends({
navigator:this.navigator,
route:route},
route.passProps)))));},






_imageNameFromSource:function(source){
return source?source.uri:undefined;},


renderNavigationStackItems:function(){
var shouldRecurseToNavigator=
this.state.makingNavigatorRequest || 
this.state.updatingAllIndicesAtOrBeyond !== null;


var items=shouldRecurseToNavigator?
this.state.routeStack.map(this._routeToStackItem):null;
return (
React.createElement(StaticContainer,{shouldUpdate:shouldRecurseToNavigator},
React.createElement(NavigatorTransitionerIOS,{
ref:TRANSITIONER_REF,
style:styles.transitioner,
vertical:this.props.vertical,
requestedTopOfStack:this.state.requestedTopOfStack,
onNavigationComplete:this.handleNavigationComplete},
items)));},





render:function(){
return (
React.createElement(View,{style:this.props.style},
this.renderNavigationStackItems()));}});





var styles=StyleSheet.create({
stackItem:{
backgroundColor:'white',
overflow:'hidden',
position:'absolute',
top:0,
left:0,
right:0,
bottom:0},

transitioner:{
flex:1}});



module.exports = NavigatorIOS;});
__d('PickerIOS',["NativeMethodsMixin","React","ReactChildren","ReactNativeViewAttributes","NativeModules","StyleSheet","View","requireNativeComponent","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var RCTPickerIOSConsts=require('NativeModules').UIManager.RCTPicker.Constants;
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');
var merge=require('merge');

var PICKER='picker';

var PickerIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{
onValueChange:React.PropTypes.func,
selectedValue:React.PropTypes.any},


getInitialState:function(){
return this._stateFromProps(this.props);},


componentWillReceiveProps:function(nextProps){
this.setState(this._stateFromProps(nextProps));},



_stateFromProps:function(props){
var selectedIndex=0;
var items=[];
ReactChildren.forEach(props.children,function(child,index){
if(child.props.value === props.selectedValue){
selectedIndex = index;}

items.push({value:child.props.value,label:child.props.label});});

return {selectedIndex:selectedIndex,items:items};},


render:function(){
return (
React.createElement(View,{style:this.props.style},
React.createElement(RCTPickerIOS,{
ref:PICKER,
style:styles.pickerIOS,
items:this.state.items,
selectedIndex:this.state.selectedIndex,
onChange:this._onChange})));},





_onChange:function(event){
if(this.props.onChange){
this.props.onChange(event);}

if(this.props.onValueChange){
this.props.onValueChange(event.nativeEvent.newValue);}








if(this.state.selectedIndex !== event.nativeEvent.newIndex){
this.refs[PICKER].setNativeProps({
selectedIndex:this.state.selectedIndex});}}});





PickerIOS.Item = React.createClass({
propTypes:{
value:React.PropTypes.any,
label:React.PropTypes.string},


render:function(){

return null;}});



var styles=StyleSheet.create({
pickerIOS:{



height:RCTPickerIOSConsts.ComponentHeight}});



var RCTPickerIOS=requireNativeComponent('RCTPicker',null);

module.exports = PickerIOS;});
__d('ProgressViewIOS',["Image","NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var Image=require('Image');
var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');




var ProgressViewIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



progressViewStyle:PropTypes.oneOf(['default','bar']),




progress:PropTypes.number,




progressTintColor:PropTypes.string,




trackTintColor:PropTypes.string,




progressImage:Image.propTypes.source,




trackImage:Image.propTypes.source},


render:function(){
return (
React.createElement(RCTProgressView,_extends({},
this.props,{
style:[styles.progressView,this.props.style]})));}});





var styles=StyleSheet.create({
progressView:{
height:NativeModules.ProgressViewManager.ComponentHeight}});



var RCTProgressView=requireNativeComponent(
'RCTProgressView',
ProgressViewIOS);


module.exports = ProgressViewIOS;});
__d('SegmentedControlIOS',["NativeMethodsMixin","NativeModules","ReactPropTypes","React","StyleSheet","requireNativeComponent","verifyPropTypes"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var NativeMethodsMixin=require('NativeMethodsMixin');
var NativeModules=require('NativeModules');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');
var verifyPropTypes=require('verifyPropTypes');






var SEGMENTED_CONTROL_REFERENCE='segmentedcontrol';






var SegmentedControlIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{



values:PropTypes.arrayOf(PropTypes.string),




selectedIndex:PropTypes.number,





onValueChange:PropTypes.func,





onChange:PropTypes.func,





enabled:PropTypes.bool,




tintColor:PropTypes.string,





momentary:PropTypes.bool},


getDefaultProps:function(){
return {
values:[],
enabled:true};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);},


render:function(){
return (
React.createElement(RCTSegmentedControl,_extends({},
this.props,{
ref:SEGMENTED_CONTROL_REFERENCE,
style:[styles.segmentedControl,this.props.style],
onChange:this._onChange})));}});





var styles=StyleSheet.create({
segmentedControl:{
height:NativeModules.SegmentedControlManager.ComponentHeight}});



var RCTSegmentedControl=requireNativeComponent(
'RCTSegmentedControl',
SegmentedControlIOS);


module.exports = SegmentedControlIOS;});
__d('SliderIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');



var SliderIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




style:View.propTypes.style,









value:PropTypes.number,




minimumValue:PropTypes.number,




maximumValue:PropTypes.number,





minimumTrackTintColor:PropTypes.string,





maximumTrackTintColor:PropTypes.string,




onValueChange:PropTypes.func,





onSlidingComplete:PropTypes.func},


_onValueChange:function(event){
this.props.onChange && this.props.onChange(event);
if(event.nativeEvent.continuous){
this.props.onValueChange && 
this.props.onValueChange(event.nativeEvent.value);}else 
{
this.props.onSlidingComplete && event.nativeEvent.value !== undefined && 
this.props.onSlidingComplete(event.nativeEvent.value);}},



render:function(){
return (
React.createElement(RCTSlider,{
style:[styles.slider,this.props.style],
value:this.props.value,
maximumValue:this.props.maximumValue,
minimumValue:this.props.minimumValue,
minimumTrackTintColor:this.props.minimumTrackTintColor,
maximumTrackTintColor:this.props.maximumTrackTintColor,
onChange:this._onValueChange}));}});





var styles=StyleSheet.create({
slider:{
height:40}});



var RCTSlider=requireNativeComponent('RCTSlider',SliderIOS);

module.exports = SliderIOS;});
__d('SwitchIOS',["NativeMethodsMixin","ReactPropTypes","React","StyleSheet","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};














var NativeMethodsMixin=require('NativeMethodsMixin');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var StyleSheet=require('StyleSheet');

var requireNativeComponent=require('requireNativeComponent');

var SWITCH='switch';















var SwitchIOS=React.createClass({
mixins:[NativeMethodsMixin],

propTypes:{




value:PropTypes.bool,





disabled:PropTypes.bool,




onValueChange:PropTypes.func,




onTintColor:PropTypes.string,




thumbTintColor:PropTypes.string,




tintColor:PropTypes.string},


getDefaultProps:function(){
return {
value:false,
disabled:false};},



_onChange:function(event){
this.props.onChange && this.props.onChange(event);
this.props.onValueChange && this.props.onValueChange(event.nativeEvent.value);



this.refs[SWITCH].setNativeProps({value:this.props.value});},


render:function(){
return (
React.createElement(RCTSwitch,_extends({},
this.props,{
ref:SWITCH,
onChange:this._onChange,
style:[styles.rkSwitch,this.props.style]})));}});





var styles=StyleSheet.create({
rkSwitch:{
height:31,
width:51}});



var RCTSwitch=requireNativeComponent('RCTSwitch',SwitchIOS);

module.exports = SwitchIOS;});
__d('TabBarIOS',["React","StyleSheet","TabBarItemIOS","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var TabBarItemIOS=require('TabBarItemIOS');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarIOS=React.createClass({
statics:{
Item:TabBarItemIOS},


propTypes:{
style:View.propTypes.style,



tintColor:React.PropTypes.string,



barTintColor:React.PropTypes.string},


render:function(){
return (
React.createElement(RCTTabBar,{
style:[styles.tabGroup,this.props.style],
tintColor:this.props.tintColor,
barTintColor:this.props.barTintColor},
this.props.children));}});





var styles=StyleSheet.create({
tabGroup:{
flex:1}});



var RCTTabBar=requireNativeComponent('RCTTabBar',TabBarIOS);

module.exports = TabBarIOS;});
__d('TabBarItemIOS',["Image","React","StaticContainer.react","StyleSheet","View","requireNativeComponent"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Image=require('Image');
var React=require('React');
var StaticContainer=require('StaticContainer.react');
var StyleSheet=require('StyleSheet');
var View=require('View');

var requireNativeComponent=require('requireNativeComponent');

var TabBarItemIOS=React.createClass({
propTypes:{



badge:React.PropTypes.oneOfType([
React.PropTypes.string,
React.PropTypes.number]),






systemIcon:React.PropTypes.oneOf([
'bookmarks',
'contacts',
'downloads',
'favorites',
'featured',
'history',
'more',
'most-recent',
'most-viewed',
'recents',
'search',
'top-rated']),




icon:Image.propTypes.source,




selectedIcon:Image.propTypes.source,




onPress:React.PropTypes.func,




selected:React.PropTypes.bool,



style:View.propTypes.style,




title:React.PropTypes.string},


getInitialState:function(){
return {
hasBeenSelected:false};},



componentWillMount:function(){
if(this.props.selected){
this.setState({hasBeenSelected:true});}},



componentWillReceiveProps:function(nextProps){
if(this.state.hasBeenSelected || nextProps.selected){
this.setState({hasBeenSelected:true});}},



render:function(){
var tabContents=null;


if(this.state.hasBeenSelected){
tabContents = 
React.createElement(StaticContainer,{shouldUpdate:this.props.selected},
this.props.children);}else 

{
tabContents = React.createElement(View,null);}


var icon=this.props.systemIcon || 
this.props.icon && this.props.icon.uri;


var badge=typeof this.props.badge === 'number'?
'' + this.props.badge:
this.props.badge;

return (
React.createElement(RCTTabBarItem,{
icon:icon,
selectedIcon:this.props.selectedIcon && this.props.selectedIcon.uri,
onPress:this.props.onPress,
selected:this.props.selected,
badge:badge,
title:this.props.title,
style:[styles.tab,this.props.style]},
tabContents));}});





var styles=StyleSheet.create({
tab:{
position:'absolute',
top:0,
right:0,
bottom:0,
left:0}});



var RCTTabBarItem=requireNativeComponent('RCTTabBarItem',TabBarItemIOS);

module.exports = TabBarItemIOS;});
__d('Text',["NativeMethodsMixin","Platform","React","ReactInstanceMap","ReactNativeViewAttributes","StyleSheetPropType","TextStylePropTypes","Touchable","createReactNativeComponentClass","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeMethodsMixin=require('NativeMethodsMixin');
var Platform=require('Platform');
var React=require('React');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheetPropType=require('StyleSheetPropType');
var TextStylePropTypes=require('TextStylePropTypes');
var Touchable=require('Touchable');

var createReactNativeComponentClass=
require('createReactNativeComponentClass');
var merge=require('merge');

var stylePropType=StyleSheetPropType(TextStylePropTypes);

var viewConfig={
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true,
numberOfLines:true}),

uiViewClassName:'RCTText'};



































var Text=React.createClass({

mixins:[Touchable.Mixin,NativeMethodsMixin],

propTypes:{





numberOfLines:React.PropTypes.number,





onPress:React.PropTypes.func,




suppressHighlighting:React.PropTypes.bool,
style:stylePropType,



testID:React.PropTypes.string,





onLayout:React.PropTypes.func},


viewConfig:viewConfig,

getInitialState:function(){
return merge(this.touchableGetInitialState(),{
isHighlighted:false});},



onStartShouldSetResponder:function(){
var shouldSetFromProps=this.props.onStartShouldSetResponder && 
this.props.onStartShouldSetResponder();
return shouldSetFromProps || !!this.props.onPress;},





handleResponderTerminationRequest:function(){


var allowTermination=this.touchableHandleResponderTerminationRequest();
if(allowTermination && this.props.onResponderTerminationRequest){
allowTermination = this.props.onResponderTerminationRequest();}

return allowTermination;},


handleResponderGrant:function(e,dispatchID){
this.touchableHandleResponderGrant(e,dispatchID);
this.props.onResponderGrant && 
this.props.onResponderGrant.apply(this,arguments);},


handleResponderMove:function(e){
this.touchableHandleResponderMove(e);
this.props.onResponderMove && 
this.props.onResponderMove.apply(this,arguments);},


handleResponderRelease:function(e){
this.touchableHandleResponderRelease(e);
this.props.onResponderRelease && 
this.props.onResponderRelease.apply(this,arguments);},


handleResponderTerminate:function(e){
this.touchableHandleResponderTerminate(e);
this.props.onResponderTerminate && 
this.props.onResponderTerminate.apply(this,arguments);},


touchableHandleActivePressIn:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:true});},



touchableHandleActivePressOut:function(){
if(this.props.suppressHighlighting || !this.props.onPress){
return;}

this.setState({
isHighlighted:false});},



touchableHandlePress:function(){
this.props.onPress && this.props.onPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
var props={};
for(var key in this.props) {
props[key] = this.props[key];}


if(props.accessible !== false){
props.accessible = true;}

props.isHighlighted = this.state.isHighlighted;
props.onStartShouldSetResponder = this.onStartShouldSetResponder;
props.onResponderTerminationRequest = 
this.handleResponderTerminationRequest;
props.onResponderGrant = this.handleResponderGrant;
props.onResponderMove = this.handleResponderMove;
props.onResponderRelease = this.handleResponderRelease;
props.onResponderTerminate = this.handleResponderTerminate;


var context=ReactInstanceMap.get(this)._context;
if(context.isInAParentText){
return React.createElement(RCTVirtualText,props);}else 
{
return React.createElement(RCTText,props);}}});











var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var RCTText=createReactNativeComponentClass(viewConfig);
var RCTVirtualText=RCTText;

if(Platform.OS === 'android'){
RCTVirtualText = createReactNativeComponentClass({
validAttributes:merge(ReactNativeViewAttributes.UIView,{
isHighlighted:true}),

uiViewClassName:'RCTVirtualText'});}



module.exports = Text;});
__d('Touchable',["BoundingDimensions","Position","TouchEventUtils","keyMirror","queryLayoutByID"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





var BoundingDimensions=require('BoundingDimensions');
var Position=require('Position');
var TouchEventUtils=require('TouchEventUtils');

var keyMirror=require('keyMirror');
var queryLayoutByID=require('queryLayoutByID');

























































































var States=keyMirror({
NOT_RESPONDER:null,
RESPONDER_INACTIVE_PRESS_IN:null,
RESPONDER_INACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_PRESS_IN:null,
RESPONDER_ACTIVE_PRESS_OUT:null,
RESPONDER_ACTIVE_LONG_PRESS_IN:null,
RESPONDER_ACTIVE_LONG_PRESS_OUT:null,
ERROR:null});





var IsActive={
RESPONDER_ACTIVE_PRESS_OUT:true,
RESPONDER_ACTIVE_PRESS_IN:true};






var IsPressingIn={
RESPONDER_INACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_PRESS_IN:true,
RESPONDER_ACTIVE_LONG_PRESS_IN:true};


var IsLongPressingIn={
RESPONDER_ACTIVE_LONG_PRESS_IN:true};





var Signals=keyMirror({
DELAY:null,
RESPONDER_GRANT:null,
RESPONDER_RELEASE:null,
RESPONDER_TERMINATED:null,
ENTER_PRESS_RECT:null,
LEAVE_PRESS_RECT:null,
LONG_PRESS_DETECTED:null});





var Transitions={
NOT_RESPONDER:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.ERROR,
RESPONDER_TERMINATED:States.ERROR,
ENTER_PRESS_RECT:States.ERROR,
LEAVE_PRESS_RECT:States.ERROR,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_IN:{
DELAY:States.RESPONDER_ACTIVE_PRESS_IN,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_INACTIVE_PRESS_OUT:{
DELAY:States.RESPONDER_ACTIVE_PRESS_OUT,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

RESPONDER_ACTIVE_LONG_PRESS_IN:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},

RESPONDER_ACTIVE_LONG_PRESS_OUT:{
DELAY:States.ERROR,
RESPONDER_GRANT:States.ERROR,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,
LEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,
LONG_PRESS_DETECTED:States.ERROR},

error:{
DELAY:States.NOT_RESPONDER,
RESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,
RESPONDER_RELEASE:States.NOT_RESPONDER,
RESPONDER_TERMINATED:States.NOT_RESPONDER,
ENTER_PRESS_RECT:States.NOT_RESPONDER,
LEAVE_PRESS_RECT:States.NOT_RESPONDER,
LONG_PRESS_DETECTED:States.NOT_RESPONDER}};






var HIGHLIGHT_DELAY_MS=130;

var PRESS_EXPAND_PX=20;

var LONG_PRESS_THRESHOLD=500;

var LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;

var LONG_PRESS_ALLOWED_MOVEMENT=10;



































































var TouchableMixin={







touchableGetInitialState:function(){
return {
touchable:{touchState:undefined,responderID:null}};},







touchableHandleResponderTerminationRequest:function(){
return !this.props.rejectResponderTermination;},





touchableHandleStartShouldSetResponder:function(){
return true;},





touchableLongPressCancelsPress:function(){
return true;},








touchableHandleResponderGrant:function(e,dispatchID){



e.persist();

this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);
this.pressOutDelayTimeout = null;

this.state.touchable.touchState = States.NOT_RESPONDER;
this.state.touchable.responderID = dispatchID;
this._receiveSignal(Signals.RESPONDER_GRANT,e);
var delayMS=
this.touchableGetHighlightDelayMS !== undefined?
Math.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;
delayMS = isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;
if(delayMS !== 0){
this.touchableDelayTimeout = setTimeout(
this._handleDelay.bind(this,e),
delayMS);}else 

{
this._handleDelay(e);}


var longDelayMS=
this.touchableGetLongPressDelayMS !== undefined?
Math.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;
longDelayMS = isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;
this.longPressDelayTimeout = setTimeout(
this._handleLongDelay.bind(this,e),
longDelayMS + delayMS);},






touchableHandleResponderRelease:function(e){
this._receiveSignal(Signals.RESPONDER_RELEASE,e);},





touchableHandleResponderTerminate:function(e){
this._receiveSignal(Signals.RESPONDER_TERMINATED,e);},





touchableHandleResponderMove:function(e){


if(this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN){
return;}



if(!this.state.touchable.positionOnActivate){
return;}


var positionOnActivate=this.state.touchable.positionOnActivate;
var dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;
var pressRectOffset=this.touchableGetPressRectOffset?
this.touchableGetPressRectOffset():null;
var pressExpandLeft=
pressRectOffset.left != null?pressRectOffset.left:PRESS_EXPAND_PX;
var pressExpandTop=
pressRectOffset.top != null?pressRectOffset.top:PRESS_EXPAND_PX;
var pressExpandRight=
pressRectOffset.right != null?pressRectOffset.right:PRESS_EXPAND_PX;
var pressExpandBottom=
pressRectOffset.bottom != null?pressRectOffset.bottom:PRESS_EXPAND_PX;

var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;

if(this.pressInLocation){
var movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);
if(movedDistance > LONG_PRESS_ALLOWED_MOVEMENT){
this._cancelLongPressDelayTimeout();}}



var isTouchWithinActive=
pageX > positionOnActivate.left - pressExpandLeft && 
pageY > positionOnActivate.top - pressExpandTop && 
pageX < 
positionOnActivate.left + 
dimensionsOnActivate.width + 
pressExpandRight && 
pageY < 
positionOnActivate.top + 
dimensionsOnActivate.height + 
pressExpandBottom;
if(isTouchWithinActive){
this._receiveSignal(Signals.ENTER_PRESS_RECT,e);}else 
{
this._cancelLongPressDelayTimeout();
this._receiveSignal(Signals.LEAVE_PRESS_RECT,e);}},

















































































_remeasureMetricsOnActivation:function(){
queryLayoutByID(
this.state.touchable.responderID,
null,
this._handleQueryLayout);},



_handleQueryLayout:function(l,t,w,h,globalX,globalY){
this.state.touchable.positionOnActivate && 
Position.release(this.state.touchable.positionOnActivate);
this.state.touchable.dimensionsOnActivate && 
BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);
this.state.touchable.positionOnActivate = Position.getPooled(globalX,globalY);
this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w,h);},


_handleDelay:function(e){
this.touchableDelayTimeout = null;
this._receiveSignal(Signals.DELAY,e);},


_handleLongDelay:function(e){
this.longPressDelayTimeout = null;
this._receiveSignal(Signals.LONG_PRESS_DETECTED,e);},










_receiveSignal:function(signal,e){
var curState=this.state.touchable.touchState;
if(!(Transitions[curState] && Transitions[curState][signal])){
throw new Error(
'Unrecognized signal `' + signal + '` or state `' + curState + 
'` for Touchable responder `' + this.state.touchable.responderID + '`');}


var nextState=Transitions[curState][signal];
if(nextState === States.ERROR){
throw new Error(
'Touchable cannot transition from `' + curState + '` to `' + signal + 
'` for responder `' + this.state.touchable.responderID + '`');}


if(curState !== nextState){
this._performSideEffectsForTransition(curState,nextState,signal,e);
this.state.touchable.touchState = nextState;}},



_cancelLongPressDelayTimeout:function(){
this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);
this.longPressDelayTimeout = null;},


_isHighlight:function(state){
return state === States.RESPONDER_ACTIVE_PRESS_IN || 
state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;},


_savePressInLocation:function(e){
var touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);
var pageX=touch && touch.pageX;
var pageY=touch && touch.pageY;
this.pressInLocation = {pageX:pageX,pageY:pageY};},


_getDistanceBetweenPoints:function(aX,aY,bX,bY){
var deltaX=aX - bX;
var deltaY=aY - bY;
return Math.sqrt(deltaX * deltaX + deltaY * deltaY);},













_performSideEffectsForTransition:function(curState,nextState,signal,e){
var curIsHighlight=this._isHighlight(curState);
var newIsHighlight=this._isHighlight(nextState);

var isFinalSignal=
signal === Signals.RESPONDER_TERMINATED || 
signal === Signals.RESPONDER_RELEASE;

if(isFinalSignal){
this._cancelLongPressDelayTimeout();}


if(!IsActive[curState] && IsActive[nextState]){
this._remeasureMetricsOnActivation();}


if(IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED){
this.touchableHandleLongPress && this.touchableHandleLongPress();}


if(newIsHighlight && !curIsHighlight){
this._savePressInLocation(e);
this.touchableHandleActivePressIn && this.touchableHandleActivePressIn();}else 
if(!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut){
if(this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()){
this.pressOutDelayTimeout = this.setTimeout(function(){
this.touchableHandleActivePressOut();},
this.touchableGetPressOutDelayMS());}else 
{
this.touchableHandleActivePressOut();}}



if(IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE){
var hasLongPressHandler=!!this.props.onLongPress;
var pressIsLongButStillCallOnPress=
IsLongPressingIn[curState] && (
!hasLongPressHandler || 
!this.touchableLongPressCancelsPress());


var shouldInvokePress=!IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;
if(shouldInvokePress && this.touchableHandlePress){
this.touchableHandlePress(e);}}



this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);
this.touchableDelayTimeout = null;}};




var Touchable={
Mixin:TouchableMixin};


module.exports = Touchable;});
__d('BoundingDimensions',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require("PooledClass");

var twoArgumentPooler=PooledClass.twoArgumentPooler;








function BoundingDimensions(width,height){
this.width = width;
this.height = height;}






BoundingDimensions.getPooledFromElement = function(element){
return BoundingDimensions.getPooled(
element.offsetWidth,
element.offsetHeight);};



PooledClass.addPoolingTo(BoundingDimensions,twoArgumentPooler);

module.exports = BoundingDimensions;});
__d('Position',["PooledClass"],function(global, require, requireDynamic, requireLazy, module, exports) {  "use strict";





var PooledClass=require("PooledClass");

var twoArgumentPooler=PooledClass.twoArgumentPooler;









function Position(left,top){
this.left = left;
this.top = top;}


PooledClass.addPoolingTo(Position,twoArgumentPooler);

module.exports = Position;});
__d('TouchEventUtils',[],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










TouchEventUtils={










extractSingleTouch:function(nativeEvent){
var touches=nativeEvent.touches;
var changedTouches=nativeEvent.changedTouches;
var hasTouches=touches && touches.length > 0;
var hasChangedTouches=changedTouches && changedTouches.length > 0;

return !hasTouches && hasChangedTouches?changedTouches[0]:
hasTouches?touches[0]:
nativeEvent;}};



module.exports = TouchEventUtils;});
__d('queryLayoutByID',["ReactNativeTagHandles","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactNativeTagHandles=require('ReactNativeTagHandles');
var RCTUIManager=require('NativeModules').UIManager;
































var queryLayoutByID=function(
rootNodeID,
onError,
onSuccess)
{

RCTUIManager.measure(
ReactNativeTagHandles.rootNodeIDToTag[rootNodeID],
onSuccess);};



module.exports = queryLayoutByID;});
__d('TextInput',["DocumentSelectionState","EventEmitter","NativeMethodsMixin","NativeModules","Platform","ReactPropTypes","React","ReactChildren","ReactNativeViewAttributes","StyleSheet","Text","TextInputState","react-timer-mixin/TimerMixin","TouchableWithoutFeedback","createReactNativeComponentClass","emptyFunction","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};












var DocumentSelectionState=require('DocumentSelectionState');
var EventEmitter=require('EventEmitter');
var NativeMethodsMixin=require('NativeMethodsMixin');
var RCTUIManager=require('NativeModules').UIManager;
var Platform=require('Platform');
var PropTypes=require('ReactPropTypes');
var React=require('React');
var ReactChildren=require('ReactChildren');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TextInputState=require('TextInputState');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var createReactNativeComponentClass=require('createReactNativeComponentClass');
var emptyFunction=require('emptyFunction');
var invariant=require('invariant');
var merge=require('merge');

var RCTTextViewAttributes=merge(ReactNativeViewAttributes.UIView,{
autoCorrect:true,
autoCapitalize:true,
clearTextOnFocus:true,
color:true,
editable:true,
fontFamily:true,
fontSize:true,
fontStyle:true,
fontWeight:true,
keyboardType:true,
returnKeyType:true,
enablesReturnKeyAutomatically:true,
secureTextEntry:true,
selectTextOnFocus:true,
mostRecentEventCounter:true,
placeholder:true,
placeholderTextColor:true,
text:true});


var RCTTextFieldAttributes=merge(RCTTextViewAttributes,{
caretHidden:true,
enabled:true,
clearButtonMode:true,
clearTextOnFocus:true,
selectTextOnFocus:true});


var onlyMultiline={
onSelectionChange:true,
onTextInput:true,
children:true};


var notMultiline={
onSubmitEditing:true};


var AndroidTextInputAttributes={
autoCapitalize:true,
autoCorrect:true,
autoFocus:true,
keyboardType:true,
multiline:true,
password:true,
placeholder:true,
text:true,
testID:true};


var viewConfigIOS={
uiViewClassName:'RCTTextField',
validAttributes:RCTTextFieldAttributes};


var viewConfigAndroid={
uiViewClassName:'AndroidTextInput',
validAttributes:AndroidTextInputAttributes};









































var TextInput=React.createClass({
propTypes:{








autoCapitalize:PropTypes.oneOf([
'none',
'sentences',
'words',
'characters']),




autoCorrect:PropTypes.bool,



autoFocus:PropTypes.bool,



editable:PropTypes.bool,



keyboardType:PropTypes.oneOf([

'default',
'numeric',
'email-address',

'ascii-capable',
'numbers-and-punctuation',
'url',
'number-pad',
'phone-pad',
'name-phone-pad',
'decimal-pad',
'twitter',
'web-search']),




returnKeyType:PropTypes.oneOf([
'default',
'go',
'google',
'join',
'next',
'route',
'search',
'send',
'yahoo',
'done',
'emergency-call']),





enablesReturnKeyAutomatically:PropTypes.bool,



multiline:PropTypes.bool,



onBlur:PropTypes.func,



onFocus:PropTypes.func,



onChange:PropTypes.func,
onChangeText:PropTypes.func,



onEndEditing:PropTypes.func,



onSubmitEditing:PropTypes.func,



onLayout:PropTypes.func,




password:PropTypes.bool,



placeholder:PropTypes.string,



placeholderTextColor:PropTypes.string,




selectionState:PropTypes.instanceOf(DocumentSelectionState),



value:PropTypes.string,






bufferDelay:PropTypes.number,





controlled:PropTypes.bool,



clearButtonMode:PropTypes.oneOf([
'never',
'while-editing',
'unless-editing',
'always']),




clearTextOnFocus:PropTypes.bool,



selectTextOnFocus:PropTypes.bool,



style:Text.propTypes.style,



testID:PropTypes.string},






mixins:[NativeMethodsMixin,TimerMixin],

viewConfig:Platform.OS === 'ios'?viewConfigIOS:
Platform.OS === 'android'?viewConfigAndroid:{},

isFocused:function(){
return TextInputState.currentlyFocusedField() === 
React.findNodeHandle(this.refs.input);},


getDefaultProps:function(){
return {
bufferDelay:100};},



getInitialState:function(){
return {
mostRecentEventCounter:0,
bufferedValue:this.props.value};},



contextTypes:{
onFocusRequested:React.PropTypes.func,
focusEmitter:React.PropTypes.instanceOf(EventEmitter)},


_focusSubscription:undefined,

componentDidMount:function(){var _this=this;
if(!this.context.focusEmitter){
if(this.props.autoFocus){
this.requestAnimationFrame(this.focus);}

return;}

this._focusSubscription = this.context.focusEmitter.addListener(
'focus',
function(el){
if(_this === el){
_this.requestAnimationFrame(_this.focus);}else 
if(_this.isFocused()){
_this.blur();}});



if(this.props.autoFocus){
this.context.onFocusRequested(this);}},



componentWillUnmount:function(){
this._focusSubscription && this._focusSubscription.remove();
if(this.isFocused()){
this.blur();}},



_bufferTimeout:undefined,

componentWillReceiveProps:function(newProps){var _this2=this;
if(newProps.value !== this.props.value){
if(!this.isFocused()){


this.setState({bufferedValue:newProps.value});}else 
{




























this.clearTimeout(this._bufferTimeout);
this._bufferTimeout = this.setTimeout(
function(){return _this2.setState({bufferedValue:newProps.value});},
this.props.bufferDelay);}}},





getChildContext:function(){
return {isInAParentText:true};},


childContextTypes:{
isInAParentText:React.PropTypes.bool},


render:function(){
if(Platform.OS === 'ios'){
return this._renderIOS();}else 
if(Platform.OS === 'android'){
return this._renderAndroid();}},



_renderIOS:function(){
var textContainer;

var props=this.props;
props.style = [styles.input,this.props.style];

if(!props.multiline){
for(var propKey in onlyMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` is only supported with multiline.');}}



textContainer = 
React.createElement(RCTTextField,_extends({
ref:'input'},
props,{
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChangeShouldSetResponder:function(){return true;},
text:this.state.bufferedValue}));}else 

{
for(var propKey in notMultiline) {
if(props[propKey]){
throw new Error(
'TextInput prop `' + propKey + '` cannot be used with multiline.');}}




var children=props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

if(props.inputView){
children = [children,props.inputView];}

textContainer = 
React.createElement(RCTTextView,_extends({
ref:'input'},
props,{
children:children,
mostRecentEventCounter:this.state.mostRecentEventCounter,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onSelectionChange:this._onSelectionChange,
onTextInput:this._onTextInput,
onSelectionChangeShouldSetResponder:emptyFunction.thatReturnsTrue,
text:this.state.bufferedValue}));}



return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
rejectResponderTermination:true,
testID:props.testID},
textContainer));},




_renderAndroid:function(){
var autoCapitalize=RCTUIManager.UIText.AutocapitalizationType[this.props.autoCapitalize];
var children=this.props.children;
var childCount=0;
ReactChildren.forEach(children,function(){return ++childCount;});
invariant(
!(this.props.value && childCount),
'Cannot specify both value and children.');

if(childCount > 1){
children = React.createElement(Text,null,children);}

var textContainer=
React.createElement(AndroidTextInput,{
ref:'input',
style:[this.props.style],
autoCapitalize:autoCapitalize,
autoCorrect:this.props.autoCorrect,
keyboardType:this.props.keyboardType,
multiline:this.props.multiline,
onFocus:this._onFocus,
onBlur:this._onBlur,
onChange:this._onChange,
onEndEditing:this.props.onEndEditing,
onSubmitEditing:this.props.onSubmitEditing,
onLayout:this.props.onLayout,
password:this.props.password || this.props.secureTextEntry,
placeholder:this.props.placeholder,
text:this.state.bufferedValue,
children:children});


return (
React.createElement(TouchableWithoutFeedback,{
onPress:this._onPress,
testID:this.props.testID},
textContainer));},




_onFocus:function(event){
if(this.props.onFocus){
this.props.onFocus(event);}},



_onPress:function(event){
this.focus();},


_onChange:function(event){
if(this.props.controlled && event.nativeEvent.text !== this.props.value){
this.refs.input.setNativeProps({text:this.props.value});}

this.props.onChange && this.props.onChange(event);
this.props.onChangeText && this.props.onChangeText(event.nativeEvent.text);},


_onBlur:function(event){
this.blur();
if(this.props.onBlur){
this.props.onBlur(event);}},



_onSelectionChange:function(event){
if(this.props.selectionState){
var selection=event.nativeEvent.selection;
this.props.selectionState.update(selection.start,selection.end);}

this.props.onSelectionChange && this.props.onSelectionChange(event);},


_onTextInput:function(event){
this.props.onTextInput && this.props.onTextInput(event);
var counter=event.nativeEvent.eventCounter;
if(counter > this.state.mostRecentEventCounter){
this.setState({mostRecentEventCounter:counter});}}});




var styles=StyleSheet.create({
input:{
alignSelf:'stretch'}});



var RCTTextView=createReactNativeComponentClass({
validAttributes:RCTTextViewAttributes,
uiViewClassName:'RCTTextView'});


var RCTTextField=createReactNativeComponentClass({
validAttributes:RCTTextFieldAttributes,
uiViewClassName:'RCTTextField'});


var AndroidTextInput=createReactNativeComponentClass({
validAttributes:AndroidTextInputAttributes,
uiViewClassName:'AndroidTextInput'});


module.exports = TextInput;});
__d('DocumentSelectionState',["mixInEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}

















var mixInEventEmitter=require('mixInEventEmitter');var 










DocumentSelectionState=(function(){




function DocumentSelectionState(anchor,focus){_classCallCheck(this,DocumentSelectionState);
this._anchorOffset = anchor;
this._focusOffset = focus;
this._hasFocus = false;}_createClass(DocumentSelectionState,[{key:'update',value:









function update(anchor,focus){
if(this._anchorOffset !== anchor || this._focusOffset !== focus){
this._anchorOffset = anchor;
this._focusOffset = focus;
this.emit('update');}}},{key:'constrainLength',value:









function constrainLength(maxLength){
this.update(
Math.min(this._anchorOffset,maxLength),
Math.min(this._focusOffset,maxLength));}},{key:'focus',value:



function focus(){
if(!this._hasFocus){
this._hasFocus = true;
this.emit('focus');}}},{key:'blur',value:



function blur(){
if(this._hasFocus){
this._hasFocus = false;
this.emit('blur');}}},{key:'hasFocus',value:






function hasFocus(){
return this._hasFocus;}},{key:'isCollapsed',value:





function isCollapsed(){
return this._anchorOffset === this._focusOffset;}},{key:'isBackward',value:





function isBackward(){
return this._anchorOffset > this._focusOffset;}},{key:'getAnchorOffset',value:





function getAnchorOffset(){
return this._hasFocus?this._anchorOffset:null;}},{key:'getFocusOffset',value:





function getFocusOffset(){
return this._hasFocus?this._focusOffset:null;}},{key:'getStartOffset',value:





function getStartOffset(){
return (
this._hasFocus?Math.min(this._anchorOffset,this._focusOffset):null);}},{key:'getEndOffset',value:






function getEndOffset(){
return (
this._hasFocus?Math.max(this._anchorOffset,this._focusOffset):null);}},{key:'overlaps',value:








function overlaps(start,end){
return (
this.hasFocus() && 
this.getStartOffset() <= end && start <= this.getEndOffset());}}]);return DocumentSelectionState;})();




mixInEventEmitter(DocumentSelectionState,{
'blur':true,
'focus':true,
'update':true});


module.exports = DocumentSelectionState;});
__d('mixInEventEmitter',["EventEmitter","EventEmitterWithHolding","EventHolder","EventValidator","copyProperties","invariant","keyOf"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 
















EventEmitter=require('EventEmitter');
var EventEmitterWithHolding=require('EventEmitterWithHolding');
var EventHolder=require('EventHolder');
var EventValidator=require('EventValidator');

var copyProperties=require('copyProperties');
var invariant=require('invariant');
var keyOf=require('keyOf');

var TYPES_KEY=keyOf({__types:true});






















function mixInEventEmitter(klass,types){
invariant(types,'Must supply set of valid event types');
invariant(!this.__eventEmitter,'An active emitter is already mixed in');



var target=klass.prototype || klass;

var ctor=klass.constructor;
if(ctor){
invariant(
ctor === Object || ctor === Function,
'Mix EventEmitter into a class, not an instance');}





if(target.hasOwnProperty(TYPES_KEY)){
copyProperties(target.__types,types);}else 
if(target.__types){
target.__types = copyProperties({},target.__types,types);}else 
{
target.__types = types;}

copyProperties(target,EventEmitterMixin);}


var EventEmitterMixin={
emit:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emit(eventType,a,b,c,d,e,_);},


emitAndHold:function(eventType,a,b,c,d,e,_){
return this.__getEventEmitter().emitAndHold(eventType,a,b,c,d,e,_);},


addListener:function(eventType,listener,context){
return this.__getEventEmitter().addListener(eventType,listener,context);},


once:function(eventType,listener,context){
return this.__getEventEmitter().once(eventType,listener,context);},


addRetroactiveListener:function(eventType,listener,context){
return this.__getEventEmitter().addRetroactiveListener(
eventType,
listener,
context);},



addListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


addRetroactiveListenerMap:function(listenerMap,context){
return this.__getEventEmitter().addListenerMap(listenerMap,context);},


removeAllListeners:function(){
this.__getEventEmitter().removeAllListeners();},


removeCurrentListener:function(){
this.__getEventEmitter().removeCurrentListener();},


releaseHeldEventType:function(eventType){
this.__getEventEmitter().releaseHeldEventType(eventType);},


__getEventEmitter:function(){
if(!this.__eventEmitter){
var emitter=new EventEmitter();
emitter = EventValidator.addValidation(emitter,this.__types);

var holder=new EventHolder();
this.__eventEmitter = new EventEmitterWithHolding(emitter,holder);}

return this.__eventEmitter;}};



module.exports = mixInEventEmitter;});
__d('EventEmitterWithHolding',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}var 






























EventEmitterWithHolding=(function(){







function EventEmitterWithHolding(emitter,holder){_classCallCheck(this,EventEmitterWithHolding);
this._emitter = emitter;
this._eventHolder = holder;
this._currentEventToken = null;
this._emittingHeldEvents = false;}_createClass(EventEmitterWithHolding,[{key:'addListener',value:





function addListener(eventType,listener,context){
return this._emitter.addListener(eventType,listener,context);}},{key:'once',value:





function once(eventType,listener,context){
return this._emitter.once(eventType,listener,context);}},{key:'addRetroactiveListener',value:






















function addRetroactiveListener(
eventType,listener,context){
var subscription=this._emitter.addListener(eventType,listener,context);

this._emittingHeldEvents = true;
this._eventHolder.emitToListener(eventType,listener,context);
this._emittingHeldEvents = false;

return subscription;}},{key:'removeAllListeners',value:





function removeAllListeners(eventType){
this._emitter.removeAllListeners(eventType);}},{key:'removeCurrentListener',value:





function removeCurrentListener(){
this._emitter.removeCurrentListener();}},{key:'listeners',value:





function listeners(eventType){
return this._emitter.listeners(eventType);}},{key:'emit',value:





function emit(eventType,a,b,c,d,e,_){
this._emitter.emit(eventType,a,b,c,d,e,_);}},{key:'emitAndHold',value:

















function emitAndHold(eventType,a,b,c,d,e,_){
this._currentEventToken = this._eventHolder.holdEvent(
eventType,
a,b,c,d,e,_);

this._emitter.emit(eventType,a,b,c,d,e,_);
this._currentEventToken = null;}},{key:'releaseCurrentEvent',value:





function releaseCurrentEvent(){
if(this._currentEventToken !== null){
this._eventHolder.releaseEvent(this._currentEventToken);}else 
if(this._emittingHeldEvents){
this._eventHolder.releaseCurrentEvent();}}},{key:'releaseHeldEventType',value:







function releaseHeldEventType(eventType){
this._eventHolder.releaseEventType(eventType);}}]);return EventEmitterWithHolding;})();



module.exports = EventEmitterWithHolding;});
__d('EventHolder',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}


















var invariant=require('invariant');var 

EventHolder=(function(){
function EventHolder(){_classCallCheck(this,EventHolder);
this._heldEvents = {};
this._currentEventKey = null;}_createClass(EventHolder,[{key:'holdEvent',value:























function holdEvent(eventType,a,b,c,d,e,_){
this._heldEvents[eventType] = this._heldEvents[eventType] || [];
var eventsOfType=this._heldEvents[eventType];
var key={
eventType:eventType,
index:eventsOfType.length};

eventsOfType.push([a,b,c,d,e,_]);
return key;}},{key:'emitToListener',value:










function emitToListener(eventType,listener,context){var _this=this;
var eventsOfType=this._heldEvents[eventType];
if(!eventsOfType){
return;}

var origEventKey=this._currentEventKey;
eventsOfType.forEach(function(eventHeld,index){
if(!eventHeld){
return;}

_this._currentEventKey = {
eventType:eventType,
index:index};

listener.apply(context,eventHeld);});

this._currentEventKey = origEventKey;}},{key:'releaseCurrentEvent',value:










function releaseCurrentEvent(){
invariant(
this._currentEventKey !== null,
'Not in an emitting cycle; there is no current event');

this.releaseEvent(this._currentEventKey);}},{key:'releaseEvent',value:








function releaseEvent(token){
delete this._heldEvents[token.eventType][token.index];}},{key:'releaseEventType',value:







function releaseEventType(type){
this._heldEvents[type] = [];}}]);return EventHolder;})();



module.exports = EventHolder;});
__d('EventValidator',["copyProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

















var copyProperties=require('copyProperties');










var EventValidator={










addValidation:function(emitter,types){
var eventTypes=Object.keys(types);
var emitterWithValidation=Object.create(emitter);

copyProperties(emitterWithValidation,{
emit:function emit(type,a,b,c,d,e,_){
assertAllowsEventType(type,eventTypes);
return emitter.emit.call(this,type,a,b,c,d,e,_);}});



return emitterWithValidation;}};



function assertAllowsEventType(type,allowedTypes){
if(allowedTypes.indexOf(type) === -1){
throw new TypeError(errorMessageFor(type,allowedTypes));}}



function errorMessageFor(type,allowedTypes){
var message='Unknown event type "' + type + '". ';
if(__DEV__){
message += recommendationFor(type,allowedTypes);}

message += 'Known event types: ' + allowedTypes.join(', ') + '.';
return message;}



if(__DEV__){
var recommendationFor=function(type,allowedTypes){
var closestTypeRecommendation=closestTypeFor(type,allowedTypes);
if(isCloseEnough(closestTypeRecommendation,type)){
return 'Did you mean "' + closestTypeRecommendation.type + '"? ';}else 
{
return '';}};



var closestTypeFor=function(type,allowedTypes){
var typeRecommendations=allowedTypes.map(
typeRecommendationFor.bind(this,type));

return typeRecommendations.sort(recommendationSort)[0];};


var typeRecommendationFor=function(type,recomendedType){
return {
type:recomendedType,
distance:damerauLevenshteinDistance(type,recomendedType)};};



var recommendationSort=function(recommendationA,recommendationB){
if(recommendationA.distance < recommendationB.distance){
return -1;}else 
if(recommendationA.distance > recommendationB.distance){
return 1;}else 
{
return 0;}};



var isCloseEnough=function(closestType,actualType){
return closestType.distance / actualType.length < 0.334;};


var damerauLevenshteinDistance=function(a,b){
var i,j;
var d=[];

for(i = 0;i <= a.length;i++) {
d[i] = [i];}


for(j = 1;j <= b.length;j++) {
d[0][j] = j;}


for(i = 1;i <= a.length;i++) {
for(j = 1;j <= b.length;j++) {
var cost=a.charAt(i - 1) === b.charAt(j - 1)?0:1;

d[i][j] = Math.min(
d[i - 1][j] + 1,
d[i][j - 1] + 1,
d[i - 1][j - 1] + cost);


if(i > 1 && j > 1 && 
a.charAt(i - 1) == b.charAt(j - 2) && 
a.charAt(i - 2) == b.charAt(j - 1)){
d[i][j] = Math.min(d[i][j],d[i - 2][j - 2] + cost);}}}




return d[a.length][b.length];};}



module.exports = EventValidator;});
__d('copyProperties',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 























copyProperties(obj,a,b,c,d,e,f){
obj = obj || {};

if(__DEV__){
if(f){
throw new Error('Too many arguments passed to copyProperties');}}



var args=[a,b,c,d,e];
var ii=0,v;
while(args[ii]) {
v = args[ii++];
for(var k in v) {
obj[k] = v[k];}




if(v.hasOwnProperty && v.hasOwnProperty('toString') && 
typeof v.toString != 'undefined' && obj.toString !== v.toString){
obj.toString = v.toString;}}



return obj;}


module.exports = copyProperties;});
__d('TouchableWithoutFeedback',["React","react-timer-mixin/TimerMixin","Touchable","ensurePositiveDelayProps","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var Touchable=require('Touchable');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var onlyChild=require('onlyChild');







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};








var TouchableWithoutFeedback=React.createClass({
mixins:[TimerMixin,Touchable.Mixin],

propTypes:{




accessible:React.PropTypes.bool,
onPress:React.PropTypes.func,
onPressIn:React.PropTypes.func,
onPressOut:React.PropTypes.func,
onLongPress:React.PropTypes.func,



delayPressIn:React.PropTypes.number,



delayPressOut:React.PropTypes.number,



delayLongPress:React.PropTypes.number},


getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},






touchableHandlePress:function(e){
this.props.onPress && this.props.onPress(e);},


touchableHandleActivePressIn:function(){
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
this.props.onPressOut && this.props.onPressOut();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut || 0;},


render:function(){

return React.cloneElement(onlyChild(this.props.children),{
accessible:this.props.accessible !== false,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});




module.exports = TouchableWithoutFeedback;});
__d('ensurePositiveDelayProps',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensurePositiveDelayProps=function(props){
invariant(
!(props.delayPressIn < 0 || props.delayPressOut < 0 || 
props.delayLongPress < 0),
'Touchable components cannot have negative delay properties');};



module.exports = ensurePositiveDelayProps;});
__d('TouchableHighlight',["NativeMethodsMixin","React","ReactNativeViewAttributes","StyleSheet","react-timer-mixin/TimerMixin","Touchable","TouchableWithoutFeedback","View","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","keyOf","merge","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var React=require('React');
var ReactNativeViewAttributes=require('ReactNativeViewAttributes');
var StyleSheet=require('StyleSheet');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');
var View=require('View');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var keyOf=require('keyOf');
var merge=require('merge');
var onlyChild=require('onlyChild');

var DEFAULT_PROPS={
activeOpacity:0.8,
underlayColor:'black'};


























var TouchableHighlight=React.createClass({
propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number,




underlayColor:React.PropTypes.string,
style:View.propTypes.style,



onShowUnderlay:React.PropTypes.func,



onHideUnderlay:React.PropTypes.func}),


mixins:[NativeMethodsMixin,TimerMixin,Touchable.Mixin],

getDefaultProps:function(){return DEFAULT_PROPS;},


computeSyntheticState:function(props){
return {
activeProps:{
style:{
opacity:props.activeOpacity}},


activeUnderlayProps:{
style:{
backgroundColor:props.underlayColor}},


underlayStyle:[
INACTIVE_UNDERLAY_PROPS.style,
props.style]};},




getInitialState:function(){
return merge(
this.touchableGetInitialState(),this.computeSyntheticState(this.props));},



componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);
if(nextProps.activeOpacity !== this.props.activeOpacity || 
nextProps.underlayColor !== this.props.underlayColor || 
nextProps.style !== this.props.style){
this.setState(this.computeSyntheticState(nextProps));}},



viewConfig:{
uiViewClassName:'RCTView',
validAttributes:ReactNativeViewAttributes.RCTView},






touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._showUnderlay();
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._hideUnderlay();}

this.props.onPressOut && this.props.onPressOut();},


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._showUnderlay();
this._hideTimeout = this.setTimeout(this._hideUnderlay,
this.props.delayPressOut || 100);
this.props.onPress && this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_showUnderlay:function(){
this.refs[UNDERLAY_REF].setNativeProps(this.state.activeUnderlayProps);
this.refs[CHILD_REF].setNativeProps(this.state.activeProps);
this.props.onShowUnderlay && this.props.onShowUnderlay();},


_hideUnderlay:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
if(this.refs[UNDERLAY_REF]){
this.refs[CHILD_REF].setNativeProps(INACTIVE_CHILD_PROPS);
this.refs[UNDERLAY_REF].setNativeProps(_extends({},
INACTIVE_UNDERLAY_PROPS,{
style:this.state.underlayStyle}));

this.props.onHideUnderlay && this.props.onHideUnderlay();}},



render:function(){
return (
React.createElement(View,{
ref:UNDERLAY_REF,
style:this.state.underlayStyle,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate},
cloneWithProps(
onlyChild(this.props.children),
{
ref:CHILD_REF,
accessible:true,
testID:this.props.testID})));}});







var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};
var CHILD_REF=keyOf({childRef:null});
var UNDERLAY_REF=keyOf({underlayRef:null});
var INACTIVE_CHILD_PROPS={
style:StyleSheet.create({x:{opacity:1.0}}).x};

var INACTIVE_UNDERLAY_PROPS={
style:StyleSheet.create({x:{backgroundColor:'transparent'}}).x};


module.exports = TouchableHighlight;});
__d('cloneWithProps',["ReactElement","ReactPropTransferer","keyOf","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactElement=require('ReactElement');
var ReactPropTransferer=require('ReactPropTransferer');

var keyOf=require('keyOf');
var warning=require('warning');

var CHILDREN_PROP=keyOf({children:null});










function cloneWithProps(child,props){
if(__DEV__){
warning(
!child.ref,
'You are calling cloneWithProps() on a child with a ref. This is ' + 
'dangerous because you\'re creating a new child which will not be ' + 
'added as a ref to its parent.');}



var newProps=ReactPropTransferer.mergeProps(props,child.props);


if(!newProps.hasOwnProperty(CHILDREN_PROP) && 
child.props.hasOwnProperty(CHILDREN_PROP)){
newProps.children = child.props.children;}




return ReactElement.createElement(child.type,newProps);}


module.exports = cloneWithProps;});
__d('ReactPropTransferer',["Object.assign","emptyFunction","joinClasses"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var assign=require('Object.assign');
var emptyFunction=require('emptyFunction');
var joinClasses=require('joinClasses');








function createTransferStrategy(mergeStrategy){
return function(props,key,value){
if(!props.hasOwnProperty(key)){
props[key] = value;}else 
{
props[key] = mergeStrategy(props[key],value);}};}




var transferStrategyMerge=createTransferStrategy(function(a,b){



return assign({},b,a);});







var TransferStrategies={



children:emptyFunction,



className:createTransferStrategy(joinClasses),



style:transferStrategyMerge};










function transferInto(props,newProps){
for(var thisKey in newProps) {
if(!newProps.hasOwnProperty(thisKey)){
continue;}


var transferStrategy=TransferStrategies[thisKey];

if(transferStrategy && TransferStrategies.hasOwnProperty(thisKey)){
transferStrategy(props,thisKey,newProps[thisKey]);}else 
if(!props.hasOwnProperty(thisKey)){
props[thisKey] = newProps[thisKey];}}


return props;}








var ReactPropTransferer={








mergeProps:function(oldProps,newProps){
return transferInto(assign({},oldProps),newProps);}};




module.exports = ReactPropTransferer;});
__d('joinClasses',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




















function joinClasses(className){
if(!className){
className = '';}

var nextClass;
var argLength=arguments.length;
if(argLength > 1){
for(var ii=1;ii < argLength;ii++) {
nextClass = arguments[ii];
if(nextClass){
className = (className?className + ' ':'') + nextClass;}}}



return className;}


module.exports = joinClasses;});
__d('ensureComponentIsNative',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');

var ensureComponentIsNative=function(component){
invariant(
component && typeof component.setNativeProps === 'function',
'Touchable child must either be native or forward setNativeProps to a ' + 
'native component');};



module.exports = ensureComponentIsNative;});
__d('TouchableOpacity',["NativeMethodsMixin","POPAnimationMixin","React","react-timer-mixin/TimerMixin","Touchable","TouchableWithoutFeedback","cloneWithProps","ensureComponentIsNative","ensurePositiveDelayProps","flattenStyle","keyOf","onlyChild"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};













var NativeMethodsMixin=require('NativeMethodsMixin');
var POPAnimationMixin=require('POPAnimationMixin');
var React=require('React');
var TimerMixin=require('react-timer-mixin/TimerMixin');
var Touchable=require('Touchable');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var cloneWithProps=require('cloneWithProps');
var ensureComponentIsNative=require('ensureComponentIsNative');
var ensurePositiveDelayProps=require('ensurePositiveDelayProps');
var flattenStyle=require('flattenStyle');
var keyOf=require('keyOf');
var onlyChild=require('onlyChild');


























var TouchableOpacity=React.createClass({
mixins:[TimerMixin,Touchable.Mixin,NativeMethodsMixin,POPAnimationMixin],

propTypes:_extends({},
TouchableWithoutFeedback.propTypes,{




activeOpacity:React.PropTypes.number}),


getDefaultProps:function(){
return {
activeOpacity:0.2};},



getInitialState:function(){
return this.touchableGetInitialState();},


componentDidMount:function(){
ensurePositiveDelayProps(this.props);
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentDidUpdate:function(){
ensureComponentIsNative(this.refs[CHILD_REF]);},


componentWillReceiveProps:function(nextProps){
ensurePositiveDelayProps(nextProps);},


setOpacityTo:function(value){
if(POPAnimationMixin){

this.stopAllAnimations();
var anim={
type:this.AnimationTypes.linear,
property:this.AnimationProperties.opacity,
duration:0.15,
toValue:value};

this.startAnimation(CHILD_REF,anim);}else 
{

this.refs[CHILD_REF].setNativeProps({
opacity:value});}},








touchableHandleActivePressIn:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
this._opacityActive();
this.props.onPressIn && this.props.onPressIn();},


touchableHandleActivePressOut:function(){
if(!this._hideTimeout){
this._opacityInactive();}

this.props.onPressOut && this.props.onPressOut();},


touchableHandlePress:function(){
this.clearTimeout(this._hideTimeout);
this._opacityActive();
this._hideTimeout = this.setTimeout(
this._opacityInactive,
this.props.delayPressOut || 100);

this.props.onPress && this.props.onPress();},


touchableHandleLongPress:function(){
this.props.onLongPress && this.props.onLongPress();},


touchableGetPressRectOffset:function(){
return PRESS_RECT_OFFSET;},


touchableGetHighlightDelayMS:function(){
return this.props.delayPressIn || 0;},


touchableGetLongPressDelayMS:function(){
return this.props.delayLongPress === 0?0:
this.props.delayLongPress || 500;},


touchableGetPressOutDelayMS:function(){
return this.props.delayPressOut;},


_opacityActive:function(){
this.setOpacityTo(this.props.activeOpacity);},


_opacityInactive:function(){
this.clearTimeout(this._hideTimeout);
this._hideTimeout = null;
var child=onlyChild(this.props.children);
var childStyle=flattenStyle(child.props.style) || {};
this.setOpacityTo(
childStyle.opacity === undefined?1:childStyle.opacity);},



render:function(){
return cloneWithProps(onlyChild(this.props.children),{
ref:CHILD_REF,
accessible:true,
testID:this.props.testID,
onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,
onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,
onResponderGrant:this.touchableHandleResponderGrant,
onResponderMove:this.touchableHandleResponderMove,
onResponderRelease:this.touchableHandleResponderRelease,
onResponderTerminate:this.touchableHandleResponderTerminate});}});










var PRESS_RECT_OFFSET={top:20,left:20,right:20,bottom:30};

var CHILD_REF=keyOf({childRef:null});

module.exports = TouchableOpacity;});
__d('POPAnimationMixin',["POPAnimation","React","invariant","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var POPAnimationOrNull=require('POPAnimation');
var React=require('React');

if(!POPAnimationOrNull){


module.exports = null;}else 
{



var POPAnimation=POPAnimationOrNull;

var invariant=require('invariant');
var warning=require('warning');

var POPAnimationMixin={




AnimationTypes:POPAnimation.Types,
AnimationProperties:POPAnimation.Properties,

getInitialState:function(){
return {
_currentAnimationsByNodeHandle:{}};},



_ensureBookkeepingSetup:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
this.state._currentAnimationsByNodeHandle[nodeHandle] = [];}},

















startAnimation:function(
refKey,
anim,
doneCallback)
{
var animID=0;
if(typeof anim === 'number'){
animID = anim;}else 
{
invariant(
anim instanceof Object && 
anim.type !== undefined && 
anim.property !== undefined,
'Animation definitions must specify a type of animation and a ' + 
'property to animate.');

animID = POPAnimation.createAnimation(anim.type,anim);}

invariant(
this.refs[refKey],
'Invalid refKey ' + refKey + ' for anim:\n' + JSON.stringify(anim) + 
'\nvalid refs: ' + JSON.stringify(Object.keys(this.refs)));

var refNodeHandle=React.findNodeHandle(this.refs[refKey]);
this.startAnimationWithNodeHandle(refNodeHandle,animID,doneCallback);},








startAnimationWithNodeHandle:function(
nodeHandle,
animID,
doneCallback)
{var _this=this;
this._ensureBookkeepingSetup(nodeHandle);
var animations=this.state._currentAnimationsByNodeHandle[nodeHandle];
var animIndex=animations.length;
animations.push(animID);
var cleanupWrapper=function(finished){
if(!_this.isMounted()){
return;}

animations[animIndex] = 0;
var allDone=true;
for(var ii=0;ii < animations.length;ii++) {
if(animations[ii]){
allDone = false;
break;}}


if(allDone){
_this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;}

doneCallback && doneCallback(finished);};

POPAnimation.addAnimation(nodeHandle,animID,cleanupWrapper);},













startAnimations:function(
animations,
onSuccess,
onFailure)
{var _this2=this;
var numReturned=0;
var numFinished=0;
var numAnimations=animations.length;
var metaCallback=function(finished){
if(finished){
++numFinished;}

if(++numReturned === numAnimations){
onSuccess && onSuccess(numFinished === numAnimations);}};


animations.forEach(function(anim){
warning(
anim.ref != null || anim.nodeHandle != null && 
!anim.ref !== !anim.nodeHandle,
'Animations must be specified with either ref xor nodeHandle');

if(anim.ref){
_this2.startAnimation(anim.ref,anim.anim,metaCallback);}else 
if(anim.nodeHandle){
_this2.startAnimationWithNodeHandle(anim.nodeHandle,anim.anim,metaCallback);}});},











stopNodeHandleAnimations:function(nodeHandle){
if(!this.state._currentAnimationsByNodeHandle[nodeHandle]){
return;}

var anims=this.state._currentAnimationsByNodeHandle[nodeHandle];
for(var i=0;i < anims.length;i++) {
var anim=anims[i];
if(anim){

POPAnimation.removeAnimation(+nodeHandle,anim);}}


this.state._currentAnimationsByNodeHandle[nodeHandle] = undefined;},







stopAnimations:function(refKey){
invariant(this.refs[refKey],'invalid ref');
this.stopNodeHandleAnimations(React.findNodeHandle(this.refs[refKey]));},






stopAllAnimations:function(){
for(var nodeHandle in this.state._currentAnimationsByNodeHandle) {
this.stopNodeHandleAnimations(nodeHandle);}},



















animateToFrame:function(
refKey,
frame,
type,
velocity,
doneCallback)
{
var animFrame={
x:frame.left + frame.width / 2,
y:frame.top + frame.height / 2,
w:frame.width,
h:frame.height};

var posAnim=POPAnimation.createAnimation(type,{
property:POPAnimation.Properties.position,
toValue:[animFrame.x,animFrame.y],
velocity:velocity || [0,0]});

var sizeAnim=POPAnimation.createAnimation(type,{
property:POPAnimation.Properties.size,
toValue:[animFrame.w,animFrame.h]});

this.startAnimation(refKey,posAnim,doneCallback);
this.startAnimation(refKey,sizeAnim);},



componentWillUnmount:function(){
this.stopAllAnimations();}};



module.exports = POPAnimationMixin;}});
__d('POPAnimation',["NativeModules","ReactPropTypes","createStrictShapeTypeChecker","getObjectValues","invariant","merge"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var RCTPOPAnimationManager=require('NativeModules').POPAnimationManager;
if(!RCTPOPAnimationManager){




module.exports = null;}else 
{

var ReactPropTypes=require('ReactPropTypes');
var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var getObjectValues=require('getObjectValues');
var invariant=require('invariant');
var merge=require('merge');

var RCTTypes=RCTPOPAnimationManager.Types;
var RCTProperties=RCTPOPAnimationManager.Properties;

var Properties={
bounds:RCTProperties.bounds,
opacity:RCTProperties.opacity,
position:RCTProperties.position,
positionX:RCTProperties.positionX,
positionY:RCTProperties.positionY,
zPosition:RCTProperties.zPosition,
rotation:RCTProperties.rotation,
rotationX:RCTProperties.rotationX,
rotationY:RCTProperties.rotationY,
scaleX:RCTProperties.scaleX,
scaleXY:RCTProperties.scaleXY,
scaleY:RCTProperties.scaleY,
shadowColor:RCTProperties.shadowColor,
shadowOffset:RCTProperties.shadowOffset,
shadowOpacity:RCTProperties.shadowOpacity,
shadowRadius:RCTProperties.shadowRadius,
size:RCTProperties.size,
subscaleXY:RCTProperties.subscaleXY,
subtranslationX:RCTProperties.subtranslationX,
subtranslationXY:RCTProperties.subtranslationXY,
subtranslationY:RCTProperties.subtranslationY,
subtranslationZ:RCTProperties.subtranslationZ,
translationX:RCTProperties.translationX,
translationXY:RCTProperties.translationXY,
translationY:RCTProperties.translationY,
translationZ:RCTProperties.translationZ};


var Types={
decay:RCTTypes.decay,
easeIn:RCTTypes.easeIn,
easeInEaseOut:RCTTypes.easeInEaseOut,
easeOut:RCTTypes.easeOut,
linear:RCTTypes.linear,
spring:RCTTypes.spring};
















var POPAnimation={
Types:Types,
Properties:Properties,

attributeChecker:createStrictShapeTypeChecker({
type:ReactPropTypes.oneOf(getObjectValues(Types)),
property:ReactPropTypes.oneOf(getObjectValues(Properties)),
fromValue:ReactPropTypes.any,
toValue:ReactPropTypes.any,
duration:ReactPropTypes.any,
velocity:ReactPropTypes.any,
deceleration:ReactPropTypes.any,
springBounciness:ReactPropTypes.any,
dynamicsFriction:ReactPropTypes.any,
dynamicsMass:ReactPropTypes.any,
dynamicsTension:ReactPropTypes.any}),


lastUsedTag:0,
allocateTagForAnimation:function(){
return ++this.lastUsedTag;},


createAnimation:function(typeName,attrs){
var tag=this.allocateTagForAnimation();

if(__DEV__){
POPAnimation.attributeChecker(
{attrs:attrs},
'attrs',
'POPAnimation.createAnimation');

POPAnimation.attributeChecker(
{attrs:{type:typeName}},
'attrs',
'POPAnimation.createAnimation');}



RCTPOPAnimationManager.createAnimationInternal(tag,typeName,attrs);
return tag;},


createSpringAnimation:function(attrs){
return this.createAnimation(this.Types.spring,attrs);},


createDecayAnimation:function(attrs){
return this.createAnimation(this.Types.decay,attrs);},


createLinearAnimation:function(attrs){
return this.createAnimation(this.Types.linear,attrs);},


createEaseInAnimation:function(attrs){
return this.createAnimation(this.Types.easeIn,attrs);},


createEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeOut,attrs);},


createEaseInEaseOutAnimation:function(attrs){
return this.createAnimation(this.Types.easeInEaseOut,attrs);},


addAnimation:function(nodeHandle,anim,callback){
RCTPOPAnimationManager.addAnimation(nodeHandle,anim,callback);},


removeAnimation:function(nodeHandle,anim){
RCTPOPAnimationManager.removeAnimation(nodeHandle,anim);}};





if(__DEV__){
var allProperties=merge(
RCTPOPAnimationManager.Properties,
RCTPOPAnimationManager.Properties);

for(var key in allProperties) {
invariant(
POPAnimation.Properties[key] === RCTPOPAnimationManager.Properties[key],
'POPAnimation doesn\'t copy property ' + key + ' correctly');}



var allTypes=merge(
RCTPOPAnimationManager.Types,
RCTPOPAnimationManager.Types);

for(var key in allTypes) {
invariant(
POPAnimation.Types[key] === RCTPOPAnimationManager.Types[key],
'POPAnimation doesn\'t copy type ' + key + ' correctly');}}




module.exports = POPAnimation;}});
__d('getObjectValues',[],function(global, require, requireDynamic, requireLazy, module, exports) {  function 


























getObjectValues(obj){
var values=[];
for(var key in obj) {
values.push(obj[key]);}

return values;}


module.exports = getObjectValues;});
__d('WebView',["ActivityIndicatorIOS","EdgeInsetsPropType","React","StyleSheet","Text","View","invariant","keyMirror","requireNativeComponent","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ActivityIndicatorIOS=require('ActivityIndicatorIOS');
var EdgeInsetsPropType=require('EdgeInsetsPropType');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');

var invariant=require('invariant');
var keyMirror=require('keyMirror');
var requireNativeComponent=require('requireNativeComponent');

var PropTypes=React.PropTypes;
var RCTWebViewManager=require('NativeModules').WebViewManager;

var BGWASH='rgba(255,255,255,0.8)';
var RCT_WEBVIEW_REF='webview';

var WebViewState=keyMirror({
IDLE:null,
LOADING:null,
ERROR:null});


var NavigationType={
click:RCTWebViewManager.NavigationType.LinkClicked,
formsubmit:RCTWebViewManager.NavigationType.FormSubmitted,
backforward:RCTWebViewManager.NavigationType.BackForward,
reload:RCTWebViewManager.NavigationType.Reload,
formresubmit:RCTWebViewManager.NavigationType.FormResubmitted,
other:RCTWebViewManager.NavigationType.Other};










var defaultRenderLoading=function(){return (
React.createElement(View,{style:styles.loadingView},
React.createElement(ActivityIndicatorIOS,null)));};


var defaultRenderError=function(errorDomain,errorCode,errorDesc){return (
React.createElement(View,{style:styles.errorContainer},
React.createElement(Text,{style:styles.errorTextTitle},'Error loading page'),


React.createElement(Text,{style:styles.errorText},
'Domain: ' + errorDomain),

React.createElement(Text,{style:styles.errorText},
'Error Code: ' + errorCode),

React.createElement(Text,{style:styles.errorText},
'Description: ' + errorDesc)));};




var WebView=React.createClass({
statics:{
NavigationType:NavigationType},


propTypes:{
url:PropTypes.string,
html:PropTypes.string,
renderError:PropTypes.func,
renderLoading:PropTypes.func,
bounces:PropTypes.bool,
scrollEnabled:PropTypes.bool,
automaticallyAdjustContentInsets:PropTypes.bool,
shouldInjectAJAXHandler:PropTypes.bool,
contentInset:EdgeInsetsPropType,
onNavigationStateChange:PropTypes.func,
startInLoadingState:PropTypes.bool,
style:View.propTypes.style,



javaScriptEnabledAndroid:PropTypes.bool},


getInitialState:function(){
return {
viewState:WebViewState.IDLE,
lastErrorEvent:null,
startInLoadingState:true};},



componentWillMount:function(){
if(this.props.startInLoadingState){
this.setState({viewState:WebViewState.LOADING});}},



render:function(){
var otherView=null;

if(this.state.viewState === WebViewState.LOADING){
otherView = (this.props.renderLoading || defaultRenderLoading)();}else 
if(this.state.viewState === WebViewState.ERROR){
var errorEvent=this.state.lastErrorEvent;
invariant(
errorEvent != null,
'lastErrorEvent expected to be non-null');

otherView = (this.props.renderError || defaultRenderError)(
errorEvent.domain,
errorEvent.code,
errorEvent.description);}else 

if(this.state.viewState !== WebViewState.IDLE){
console.error(
'RCTWebView invalid state encountered: ' + this.state.loading);}



var webViewStyles=[styles.container,styles.webView,this.props.style];
if(this.state.viewState === WebViewState.LOADING || 
this.state.viewState === WebViewState.ERROR){

webViewStyles.push(styles.hidden);}


var webView=
React.createElement(RCTWebView,{
ref:RCT_WEBVIEW_REF,
key:'webViewKey',
style:webViewStyles,
url:this.props.url,
html:this.props.html,
bounces:this.props.bounces,
scrollEnabled:this.props.scrollEnabled,
shouldInjectAJAXHandler:this.props.shouldInjectAJAXHandler,
contentInset:this.props.contentInset,
automaticallyAdjustContentInsets:this.props.automaticallyAdjustContentInsets,
onLoadingStart:this.onLoadingStart,
onLoadingFinish:this.onLoadingFinish,
onLoadingError:this.onLoadingError});


return (
React.createElement(View,{style:styles.container},
webView,
otherView));},




goForward:function(){
RCTWebViewManager.goForward(this.getWebWiewHandle());},


goBack:function(){
RCTWebViewManager.goBack(this.getWebWiewHandle());},


reload:function(){
RCTWebViewManager.reload(this.getWebWiewHandle());},






updateNavigationState:function(event){
if(this.props.onNavigationStateChange){
this.props.onNavigationStateChange(event.nativeEvent);}},



getWebWiewHandle:function(){
return React.findNodeHandle(this.refs[RCT_WEBVIEW_REF]);},


onLoadingStart:function(event){
this.updateNavigationState(event);},


onLoadingError:function(event){
event.persist();
console.error('Encountered an error loading page',event.nativeEvent);

this.setState({
lastErrorEvent:event.nativeEvent,
viewState:WebViewState.ERROR});},



onLoadingFinish:function(event){
this.setState({
viewState:WebViewState.IDLE});

this.updateNavigationState(event);}});



var RCTWebView=requireNativeComponent('RCTWebView',WebView);

var styles=StyleSheet.create({
container:{
flex:1},

errorContainer:{
flex:1,
justifyContent:'center',
alignItems:'center',
backgroundColor:BGWASH},

errorText:{
fontSize:14,
textAlign:'center',
marginBottom:2},

errorTextTitle:{
fontSize:15,
fontWeight:'500',
marginBottom:10},

hidden:{
height:0,
flex:0},

loadingView:{
backgroundColor:BGWASH,
flex:1,
justifyContent:'center',
alignItems:'center'},

webView:{
backgroundColor:'#ffffff'}});



module.exports = WebView;});
__d('AlertIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTAlertManager=require('NativeModules').AlertManager;
var invariant=require('invariant');

var DEFAULT_BUTTON_TEXT='OK';
var DEFAULT_BUTTON={
text:DEFAULT_BUTTON_TEXT,
onPress:null};var 
























AlertIOS=(function(){function AlertIOS(){_classCallCheck(this,AlertIOS);}_createClass(AlertIOS,null,[{key:'alert',value:
function alert(
title,
message,
buttons,



type)
{
var callbacks=[];
var buttonsSpec=[];
title = title || '';
message = message || '';
buttons = buttons || [DEFAULT_BUTTON];
type = type || '';

buttons.forEach(function(btn,index){
callbacks[index] = btn.onPress;
var btnDef={};
btnDef[index] = btn.text || DEFAULT_BUTTON_TEXT;
buttonsSpec.push(btnDef);});

RCTAlertManager.alertWithArgs({
title:title,
message:message,
buttons:buttonsSpec,
type:type},
function(id,value){
var cb=callbacks[id];
cb && cb(value);});}},{key:'prompt',value:



function prompt(
title,
value,
buttons,



callback)
{
if(arguments.length === 2){
if(typeof value === 'object'){
buttons = value;
value = undefined;}else 
if(typeof value === 'function'){
callback = value;
value = undefined;}}else 

if(arguments.length === 3 && typeof buttons === 'function'){
callback = buttons;
buttons = undefined;}


invariant(
!(callback && buttons) && (callback || buttons),
'Must provide either a button list or a callback, but not both');


if(!buttons){
buttons = [{
text:'Cancel'},
{
text:'OK',
onPress:callback}];}


this.alert(title,value,buttons,'plain-text');}}]);return AlertIOS;})();



module.exports = AlertIOS;});
__d('AppRegistry',["invariant","renderApplication","RCTRenderingPerf"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var invariant=require('invariant');
var renderApplication=require('renderApplication');

if(__DEV__){


require('RCTRenderingPerf');}


var runnables={};


















var AppRegistry={
registerConfig:function(config){
for(var i=0;i < config.length;++i) {
var appConfig=config[i];
if(appConfig.run){
AppRegistry.registerRunnable(appConfig.appKey,appConfig.run);}else 
{
AppRegistry.registerComponent(appConfig.appKey,appConfig.component);}}},




registerComponent:function(appKey,getComponentFunc){
runnables[appKey] = {
run:function(appParameters){return (
renderApplication(getComponentFunc(),appParameters.initialProps,appParameters.rootTag));}};

return appKey;},


registerRunnable:function(appKey,func){
runnables[appKey] = {run:func};
return appKey;},


runApplication:function(appKey,appParameters){
console.log(
'Running application "' + appKey + '" with appParams: ' + 
JSON.stringify(appParameters) + '. ' + 
'__DEV__ === ' + __DEV__ + 
', development-level warning are ' + (__DEV__?'ON':'OFF') + 
', performance optimizations are ' + (__DEV__?'OFF':'ON'));

invariant(
runnables[appKey] && runnables[appKey].run,
'Application ' + appKey + ' has not been registered. This ' + 
'is either due to a require() error during initialization ' + 
'or failure to call AppRegistry.registerComponent.');

runnables[appKey].run(appParameters);}};



module.exports = AppRegistry;});
__d('renderApplication',["InspectorOverlay","RCTDeviceEventEmitter","React","StyleSheet","Subscribable","View","WarningBox","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var InspectorOverlay=require('InspectorOverlay');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Subscribable=require('Subscribable');
var View=require('View');
var WarningBox=require('WarningBox');

var invariant=require('invariant');

var AppContainer=React.createClass({
mixins:[Subscribable.Mixin],

getInitialState:function(){
return {inspector:null};},


toggleElementInspector:function(){
var inspector=this.state.inspector?
null:
React.createElement(InspectorOverlay,{
rootTag:this.props.rootTag,
inspectedViewTag:React.findNodeHandle(this.refs.main)});

this.setState({inspector:inspector});},


componentDidMount:function(){
this.addListenerOn(
RCTDeviceEventEmitter,
'toggleElementInspector',
this.toggleElementInspector);},



render:function(){
var shouldRenderWarningBox=__DEV__ && console.yellowBoxEnabled;
var warningBox=shouldRenderWarningBox?React.createElement(WarningBox,null):null;
return (
React.createElement(View,{style:styles.appContainer},
React.createElement(View,{style:styles.appContainer,ref:'main'},
this.props.children),

warningBox,
this.state.inspector));}});





function renderApplication(
RootComponent,
initialProps,
rootTag)
{
invariant(
rootTag,
'Expect to have a valid rootTag, instead got ',rootTag);

React.render(
React.createElement(AppContainer,{rootTag:rootTag},
React.createElement(RootComponent,
initialProps)),


rootTag);}



var styles=StyleSheet.create({
appContainer:{
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = renderApplication;});
__d('InspectorOverlay',["Dimensions","Inspector","React","StyleSheet","Text","NativeModules","View","ElementBox","ElementProperties"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var Dimensions=require('Dimensions');
var Inspector=require('Inspector');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var UIManager=require('NativeModules').UIManager;
var View=require('View');
var ElementBox=require('ElementBox');
var ElementProperties=require('ElementProperties');

var InspectorOverlay=React.createClass({
getInitialState:function(){
return {
frame:null,
pointerY:0,
hierarchy:[],
selection:-1};},



findViewForTouchEvent:function(e){var _this=this;var _e$nativeEvent$touches$0=
e.nativeEvent.touches[0];var locationX=_e$nativeEvent$touches$0.locationX;var locationY=_e$nativeEvent$touches$0.locationY;
UIManager.findSubviewIn(
this.props.inspectedViewTag,
[locationX,locationY],
function(nativeViewTag,left,top,width,height){
var instance=Inspector.findInstanceByNativeTag(_this.props.rootTag,nativeViewTag);
if(!instance){
return;}

var hierarchy=Inspector.getOwnerHierarchy(instance);
var publicInstance=instance.getPublicInstance();
_this.setState({
hierarchy:hierarchy,
pointerY:locationY,
selection:hierarchy.length - 1,
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{}});});},





setSelection:function(i){var _this2=this;
var instance=this.state.hierarchy[i];
var publicInstance=instance.getPublicInstance();
UIManager.measure(React.findNodeHandle(instance),function(x,y,width,height,left,top){
_this2.setState({
frame:{left:left,top:top,width:width,height:height},
style:publicInstance.props?publicInstance.props.style:{},
selection:i});});},




shouldSetResponser:function(e){
this.findViewForTouchEvent(e);
return true;},


render:function(){
var content=[];
var justifyContent='flex-end';

if(this.state.frame){
var distanceToTop=this.state.pointerY;
var distanceToBottom=Dimensions.get('window').height - distanceToTop;

justifyContent = distanceToTop > distanceToBottom?
'flex-start':
'flex-end';

content.push(React.createElement(ElementBox,{frame:this.state.frame,style:this.state.style}));
content.push(
React.createElement(ElementProperties,{
style:this.state.style,
frame:this.state.frame,
hierarchy:this.state.hierarchy,
selection:this.state.selection,
setSelection:this.setSelection}));}else 


{
content.push(
React.createElement(View,{style:styles.welcomeMessage},
React.createElement(Text,{style:styles.welcomeText},'Welcome to the inspector! Tap something to inspect it.')));}



return (
React.createElement(View,{
onStartShouldSetResponder:this.shouldSetResponser,
onResponderMove:this.findViewForTouchEvent,
style:[styles.inspector,{justifyContent:justifyContent}]},
content));}});





var styles=StyleSheet.create({
welcomeMessage:{
backgroundColor:'rgba(0, 0, 0, 0.7)',
padding:10,
paddingVertical:50},

welcomeText:{
color:'white'},

inspector:{
backgroundColor:'rgba(255,255,255,0.0)',
position:'absolute',
left:0,
top:0,
right:0,
bottom:0}});



module.exports = InspectorOverlay;});
__d('Inspector',["ReactInstanceHandles","ReactInstanceMap","ReactNativeMount","ReactNativeTagHandles"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';











var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactNativeMount=require('ReactNativeMount');
var ReactNativeTagHandles=require('ReactNativeTagHandles');

function traverseOwnerTreeUp(hierarchy,instance){
if(instance){
hierarchy.unshift(instance);
traverseOwnerTreeUp(hierarchy,instance._currentElement._owner);}}



function findInstance(component,targetID){
if(targetID === findRootNodeID(component)){
return component;}

if(component._renderedComponent){
return findInstance(component._renderedComponent,targetID);}else 
{
for(var key in component._renderedChildren) {
var child=component._renderedChildren[key];
if(ReactInstanceHandles.isAncestorIDOf(findRootNodeID(child),targetID)){
var instance=findInstance(child,targetID);
if(instance){
return instance;}}}}}






function findRootNodeID(component){
var internalInstance=ReactInstanceMap.get(component);
return internalInstance?internalInstance._rootNodeID:component._rootNodeID;}


function findInstanceByNativeTag(rootTag,nativeTag){
var containerID=ReactNativeTagHandles.tagToRootNodeID[rootTag];
var rootInstance=ReactNativeMount._instancesByContainerID[containerID];
var targetID=ReactNativeTagHandles.tagToRootNodeID[nativeTag];
if(!targetID){
return undefined;}

return findInstance(rootInstance,targetID);}


function getOwnerHierarchy(instance){
var hierarchy=[];
traverseOwnerTreeUp(hierarchy,instance);
return hierarchy;}


module.exports = {findInstanceByNativeTag:findInstanceByNativeTag,getOwnerHierarchy:getOwnerHierarchy};});
__d('ElementBox',["React","View","StyleSheet","BorderBox","resolveBoxStyle","flattenStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');
var StyleSheet=require('StyleSheet');
var BorderBox=require('BorderBox');
var resolveBoxStyle=require('resolveBoxStyle');

var flattenStyle=require('flattenStyle');var 

ElementBox=(function(_React$Component){function ElementBox(){_classCallCheck(this,ElementBox);_get(Object.getPrototypeOf(ElementBox.prototype),'constructor',this).apply(this,arguments);}_inherits(ElementBox,_React$Component);_createClass(ElementBox,[{key:'render',value:
function render(){
var style=flattenStyle(this.props.style) || {};
var margin=resolveBoxStyle('margin',style);
var padding=resolveBoxStyle('padding',style);
var frameStyle=this.props.frame;
if(margin){
frameStyle = {
top:frameStyle.top - margin.top,
left:frameStyle.left - margin.left,
height:frameStyle.height + margin.top + margin.bottom,
width:frameStyle.width + margin.left + margin.right};}


var contentStyle={
width:this.props.frame.width,
height:this.props.frame.height};

if(padding){
contentStyle = {
width:contentStyle.width - padding.left - padding.right,
height:contentStyle.height - padding.top - padding.bottom};}


return (
React.createElement(View,{style:[styles.frame,frameStyle],pointerEvents:'none'},
React.createElement(BorderBox,{box:margin,style:styles.margin},
React.createElement(BorderBox,{box:padding,style:styles.padding},
React.createElement(View,{style:[styles.content,contentStyle]})))));}}]);return ElementBox;})(React.Component);







var styles=StyleSheet.create({
frame:{
position:'absolute'},

content:{
backgroundColor:'rgba(200, 230, 255, 0.8)'},

padding:{
borderColor:'rgba(77, 255, 0, 0.3)'},

margin:{
borderColor:'rgba(255, 132, 0, 0.3)'}});



module.exports = ElementBox;});
__d('BorderBox',["React","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var View=require('View');var 

BorderBox=(function(_React$Component){function BorderBox(){_classCallCheck(this,BorderBox);_get(Object.getPrototypeOf(BorderBox.prototype),'constructor',this).apply(this,arguments);}_inherits(BorderBox,_React$Component);_createClass(BorderBox,[{key:'render',value:
function render(){
var box=this.props.box;
if(!box){
return this.props.children;}

var style={
borderTopWidth:box.top,
borderBottomWidth:box.bottom,
borderLeftWidth:box.left,
borderRightWidth:box.right};

return (
React.createElement(View,{style:[style,this.props.style]},
this.props.children));}}]);return BorderBox;})(React.Component);





module.exports = BorderBox;});
__d('resolveBoxStyle',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';





















function resolveBoxStyle(prefix,style){
var res={};
var subs=['top','left','bottom','right'];
var set=false;
subs.forEach(function(sub){
res[sub] = style[prefix] || 0;});

if(style[prefix]){
set = true;}

if(style[prefix + 'Vertical']){
res.top = res.bottom = style[prefix + 'Vertical'];
set = true;}

if(style[prefix + 'Horizontal']){
res.left = res.right = style[prefix + 'Horizontal'];
set = true;}

subs.forEach(function(sub){
var val=style[prefix + capFirst(sub)];
if(val){
res[sub] = val;
set = true;}});


if(!set){
return;}

return res;}


function capFirst(text){
return text[0].toUpperCase() + text.slice(1);}


module.exports = resolveBoxStyle;});
__d('ElementProperties',["React","StyleSheet","Text","View","ReactPropTypes","BoxInspector","StyleInspector","TouchableHighlight","TouchableWithoutFeedback","flattenStyle","mapWithSeparator"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var PropTypes=require('ReactPropTypes');
var BoxInspector=require('BoxInspector');
var StyleInspector=require('StyleInspector');
var TouchableHighlight=require('TouchableHighlight');
var TouchableWithoutFeedback=require('TouchableWithoutFeedback');

var flattenStyle=require('flattenStyle');
var mapWithSeparator=require('mapWithSeparator');

var ElementProperties=React.createClass({
propTypes:{
hierarchy:PropTypes.array.isRequired,
style:PropTypes.array.isRequired},


render:function(){var _this=this;
var style=flattenStyle(this.props.style);
var selection=this.props.selection;


return (
React.createElement(TouchableWithoutFeedback,null,
React.createElement(View,{style:styles.info},
React.createElement(View,{style:styles.breadcrumb},
mapWithSeparator(
this.props.hierarchy,
function(item,i){return (
React.createElement(TouchableHighlight,{
style:[styles.breadItem,i === selection && styles.selected],
onPress:function(){return _this.props.setSelection(i);}},
React.createElement(Text,{style:styles.breadItemText},
item.getName?item.getName():'Unknown')));},



function(){return React.createElement(Text,{style:styles.breadSep},'▸');})),


React.createElement(View,{style:styles.row},
React.createElement(StyleInspector,{style:style}),
React.createElement(BoxInspector,{style:style,frame:this.props.frame})))));}});







var styles=StyleSheet.create({
breadSep:{
fontSize:8,
color:'white'},

breadcrumb:{
flexDirection:'row',
flexWrap:'wrap',
marginBottom:5},

selected:{
borderColor:'white',
borderRadius:5},

breadItem:{
borderWidth:1,
borderColor:'transparent',
marginHorizontal:2},

breadItemText:{
fontSize:10,
color:'white',
marginHorizontal:5},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-between'},

info:{
backgroundColor:'rgba(0, 0, 0, 0.7)',
padding:10},

path:{
color:'white',
fontSize:9}});



module.exports = ElementProperties;});
__d('BoxInspector',["React","StyleSheet","Text","View","resolveBoxStyle"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');
var resolveBoxStyle=require('resolveBoxStyle');

var blank={
top:0,
left:0,
right:0,
bottom:0};var 


BoxInspector=(function(_React$Component){function BoxInspector(){_classCallCheck(this,BoxInspector);_get(Object.getPrototypeOf(BoxInspector.prototype),'constructor',this).apply(this,arguments);}_inherits(BoxInspector,_React$Component);_createClass(BoxInspector,[{key:'render',value:
function render(){
var frame=this.props.frame;
var style=this.props.style;
var margin=style && resolveBoxStyle('margin',style) || blank;
var padding=style && resolveBoxStyle('padding',style) || blank;
return (
React.createElement(BoxContainer,{title:'margin',titleStyle:styles.marginLabel,box:margin},
React.createElement(BoxContainer,{title:'padding',box:padding},
React.createElement(View,null,
React.createElement(Text,{style:styles.innerText},'(',
frame.left,', ',frame.top,')'),

React.createElement(Text,{style:styles.innerText},
frame.width,' × ',frame.height)))));}}]);return BoxInspector;})(React.Component);var 








BoxContainer=(function(_React$Component2){function BoxContainer(){_classCallCheck(this,BoxContainer);_get(Object.getPrototypeOf(BoxContainer.prototype),'constructor',this).apply(this,arguments);}_inherits(BoxContainer,_React$Component2);_createClass(BoxContainer,[{key:'render',value:
function render(){
var box=this.props.box;
return (
React.createElement(View,{style:styles.box},
React.createElement(View,{style:styles.row},
React.createElement(Text,{style:[this.props.titleStyle,styles.label]},this.props.title),
React.createElement(Text,{style:styles.boxText},box.top)),

React.createElement(View,{style:styles.row},
React.createElement(Text,{style:styles.boxText},box.left),
this.props.children,
React.createElement(Text,{style:styles.boxText},box.right)),

React.createElement(Text,{style:styles.boxText},box.bottom)));}}]);return BoxContainer;})(React.Component);





var styles=StyleSheet.create({
row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

marginLabel:{
width:60},

label:{
fontSize:10,
color:'rgb(255,100,0)',
marginLeft:5,
flex:1,
textAlign:'left',
top:-3},

buffer:{
fontSize:10,
color:'yellow',
flex:1,
textAlign:'center'},

innerText:{
color:'yellow',
fontSize:12,
textAlign:'center',
width:70},

box:{
borderWidth:1,
borderColor:'grey'},

boxText:{
color:'white',
fontSize:12,
marginHorizontal:3,
marginVertical:2,
textAlign:'center'}});



module.exports = BoxInspector;});
__d('StyleInspector',["React","StyleSheet","Text","View"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();var _get=function get(object,property,receiver){if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {return get(parent,property,receiver);}}else if('value' in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}function _inherits(subClass,superClass){if(typeof superClass !== 'function' && superClass !== null){throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)subClass.__proto__ = superClass;}












var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var View=require('View');var 

StyleInspector=(function(_React$Component){function StyleInspector(){_classCallCheck(this,StyleInspector);_get(Object.getPrototypeOf(StyleInspector.prototype),'constructor',this).apply(this,arguments);}_inherits(StyleInspector,_React$Component);_createClass(StyleInspector,[{key:'render',value:
function render(){var _this=this;
if(!this.props.style){
return React.createElement(Text,{style:styles.noStyle},'No style');}

var names=Object.keys(this.props.style);
return (
React.createElement(View,{style:styles.container},
React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.attr},name,':');})),

React.createElement(View,null,
names.map(function(name){return React.createElement(Text,{style:styles.value},_this.props.style[name]);}))));}}]);return StyleInspector;})(React.Component);






var styles=StyleSheet.create({
container:{
flexDirection:'row'},

row:{
flexDirection:'row',
alignItems:'center',
justifyContent:'space-around'},

attr:{
fontSize:10,
color:'#ccc'},

value:{
fontSize:10,
color:'white',
marginLeft:10},

noStyle:{
color:'white',
fontSize:10}});



module.exports = StyleInspector;});
__d('mapWithSeparator',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';






function mapWithSeparator(array,valueFunction,separatorFunction){
var results=[];
for(var i=0;i < array.length;i++) {
results.push(valueFunction(array[i],i,array));
if(i !== array.length - 1){
results.push(separatorFunction(i));}}


return results;}


module.exports = mapWithSeparator;});
__d('WarningBox',["AsyncStorage","EventEmitter","Map","PanResponder","React","StyleSheet","Text","TouchableOpacity","View","invariant","rebound/rebound","stringifySafe","Dimensions"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};











var AsyncStorage=require('AsyncStorage');
var EventEmitter=require('EventEmitter');
var Map=require('Map');
var PanResponder=require('PanResponder');
var React=require('React');
var StyleSheet=require('StyleSheet');
var Text=require('Text');
var TouchableOpacity=require('TouchableOpacity');
var View=require('View');

var invariant=require('invariant');
var rebound=require('rebound/rebound');
var stringifySafe=require('stringifySafe');

var SCREEN_WIDTH=require('Dimensions').get('window').width;
var IGNORED_WARNINGS_KEY='__DEV_WARNINGS_IGNORED';

var consoleWarn=console.warn.bind(console);

var warningCounts=new Map();
var ignoredWarnings=[];
var totalWarningCount=0;
var warningCountEvents=new EventEmitter();























if(__DEV__){
console.warn = function(){
consoleWarn.apply(null,arguments);
if(!console.yellowBoxEnabled){
return;}

var warning=Array.prototype.map.call(arguments,stringifySafe).join(' ');
if(!console.yellowBoxResetIgnored && 
ignoredWarnings.indexOf(warning) !== -1){
return;}

var count=warningCounts.has(warning)?warningCounts.get(warning) + 1:1;
warningCounts.set(warning,count);
totalWarningCount += 1;
warningCountEvents.emit('count',totalWarningCount);};}



function saveIgnoredWarnings(){
AsyncStorage.setItem(
IGNORED_WARNINGS_KEY,
JSON.stringify(ignoredWarnings),
function(err){
if(err){
console.warn('Could not save ignored warnings.',err);}});}





AsyncStorage.getItem(IGNORED_WARNINGS_KEY,function(err,data){
if(!err && data && !console.yellowBoxResetIgnored){
ignoredWarnings = JSON.parse(data);}});



var WarningRow=React.createClass({
componentWillMount:function(){var _this=this;
this.springSystem = new rebound.SpringSystem();
this.dismissalSpring = this.springSystem.createSpring();
this.dismissalSpring.setRestSpeedThreshold(0.05);
this.dismissalSpring.setCurrentValue(0);
this.dismissalSpring.addListener({
onSpringUpdate:function(){
var val=_this.dismissalSpring.getCurrentValue();
_this.text && _this.text.setNativeProps({
left:SCREEN_WIDTH * val});

_this.container && _this.container.setNativeProps({
opacity:1 - val});

_this.closeButton && _this.closeButton.setNativeProps({
opacity:1 - val * 5});},


onSpringAtRest:function(){
if(_this.dismissalSpring.getCurrentValue()){
_this.collapseSpring.setEndValue(1);}}});



this.collapseSpring = this.springSystem.createSpring();
this.collapseSpring.setRestSpeedThreshold(0.05);
this.collapseSpring.setCurrentValue(0);
this.collapseSpring.getSpringConfig().friction = 20;
this.collapseSpring.getSpringConfig().tension = 200;
this.collapseSpring.addListener({
onSpringUpdate:function(){
var val=_this.collapseSpring.getCurrentValue();
_this.container && _this.container.setNativeProps({
height:Math.abs(46 - val * 46)});},


onSpringAtRest:function(){
_this.props.onDismissed();}});


this.panGesture = PanResponder.create({
onStartShouldSetPanResponder:function(){
return !!_this.dismissalSpring.getCurrentValue();},

onMoveShouldSetPanResponder:function(){return true;},
onPanResponderGrant:function(){
_this.isResponderOnlyToBlockTouches = 
!!_this.dismissalSpring.getCurrentValue();},

onPanResponderMove:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

_this.dismissalSpring.setCurrentValue(gestureState.dx / SCREEN_WIDTH);},

onPanResponderRelease:function(e,gestureState){
if(_this.isResponderOnlyToBlockTouches){
return;}

var gestureCompletion=gestureState.dx / SCREEN_WIDTH;
var doesGestureRelease=gestureState.vx + gestureCompletion > 0.5;
_this.dismissalSpring.setEndValue(doesGestureRelease?1:0);}});},



render:function(){var _this2=this;
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')',' ');}



return (
React.createElement(View,_extends({
style:styles.warningBox,
ref:function(container){_this2.container = container;}},
this.panGesture.panHandlers),
React.createElement(TouchableOpacity,{
onPress:this.props.onOpened},
React.createElement(View,null,
React.createElement(Text,{
style:styles.warningText,
numberOfLines:2,
ref:function(text){_this2.text = text;}},
countText,
this.props.warning))),



React.createElement(View,{
ref:function(closeButton){_this2.closeButton = closeButton;},
style:styles.closeButton},
React.createElement(TouchableOpacity,{
onPress:function(){
_this2.dismissalSpring.setEndValue(1);}},

React.createElement(Text,{style:styles.closeButtonText},'✕')))));}});







var WarningBoxOpened=React.createClass({
render:function(){
var countText;
if(warningCounts.get(this.props.warning) > 1){
countText = 
React.createElement(Text,{style:styles.bold},'(',
warningCounts.get(this.props.warning),')',' ');}



return (
React.createElement(TouchableOpacity,{
activeOpacity:0.9,
onPress:this.props.onClose},
React.createElement(View,{style:styles.yellowBox},
React.createElement(Text,{style:styles.yellowBoxText},
countText,
this.props.warning),

React.createElement(View,{style:styles.yellowBoxButtons},
React.createElement(View,{style:styles.yellowBoxButton},
React.createElement(TouchableOpacity,{
onPress:this.props.onDismissed},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Dismiss'))),




React.createElement(View,{style:styles.yellowBoxButton},
React.createElement(TouchableOpacity,{
onPress:this.props.onIgnored},
React.createElement(Text,{style:styles.yellowBoxButtonText},'Ignore')))))));}});











var canMountWarningBox=true;

var WarningBox=React.createClass({
getInitialState:function(){
return {
totalWarningCount:totalWarningCount,
openWarning:null};},


componentWillMount:function(){
if(console.yellowBoxResetIgnored){
AsyncStorage.setItem(IGNORED_WARNINGS_KEY,'[]',function(err){
if(err){
console.warn('Could not reset ignored warnings.',err);}});


ignoredWarnings = [];}},


componentDidMount:function(){
invariant(
canMountWarningBox,
'There can only be one WarningBox');

canMountWarningBox = false;
warningCountEvents.addListener(
'count',
this._onWarningCount);},


componentWillUnmount:function(){
warningCountEvents.removeAllListeners();
canMountWarningBox = true;},

_onWarningCount:function(totalWarningCount){var _this3=this;


setImmediate(function(){
_this3.setState({totalWarningCount:totalWarningCount});});},


_onDismiss:function(warning){
warningCounts.delete(warning);
this.setState({
openWarning:null});},


render:function(){var _this4=this;
if(warningCounts.size === 0){
return React.createElement(View,null);}

if(this.state.openWarning){
return (
React.createElement(WarningBoxOpened,{
warning:this.state.openWarning,
onClose:function(){
_this4.setState({openWarning:null});},

onDismissed:this._onDismiss.bind(this,this.state.openWarning),
onIgnored:function(){
ignoredWarnings.push(_this4.state.openWarning);
saveIgnoredWarnings();
_this4._onDismiss(_this4.state.openWarning);}}));}




var warningRows=[];
warningCounts.forEach(function(count,warning){
warningRows.push(
React.createElement(WarningRow,{
key:warning,
onOpened:function(){
_this4.setState({openWarning:warning});},

onDismissed:_this4._onDismiss.bind(_this4,warning),
warning:warning}));});



return (
React.createElement(View,{style:styles.warningContainer},
warningRows));}});





var styles=StyleSheet.create({
bold:{
fontWeight:'bold'},

closeButton:{
position:'absolute',
right:0,
height:46,
width:46},

closeButtonText:{
color:'white',
fontSize:32,
position:'relative',
left:8},

warningContainer:{
position:'absolute',
left:0,
right:0,
bottom:0},

warningBox:{
position:'relative',
backgroundColor:'rgba(171, 124, 36, 0.9)',
flex:1,
height:46},

warningText:{
color:'white',
position:'absolute',
left:0,
marginLeft:15,
marginRight:46,
top:7},

yellowBox:{
backgroundColor:'rgba(171, 124, 36, 0.9)',
position:'absolute',
left:0,
right:0,
top:0,
bottom:0,
padding:15,
paddingTop:35},

yellowBoxText:{
color:'white',
fontSize:20},

yellowBoxButtons:{
flexDirection:'row',
position:'absolute',
bottom:0},

yellowBoxButton:{
flex:1,
padding:25},

yellowBoxButtonText:{
color:'white',
fontSize:16}});



module.exports = WarningBox;});
__d('AsyncStorage',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var RCTAsyncLocalStorage=NativeModules.AsyncLocalStorage;
var RCTAsyncRocksDBStorage=NativeModules.AsyncRocksDBStorage;


var RCTAsyncStorage=RCTAsyncRocksDBStorage || RCTAsyncLocalStorage;













var AsyncStorage={




getItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet([key],function(errors,result){

var value=result && result[0] && result[0][1]?result[0][1]:null;
callback && callback(errors && convertError(errors[0]) || null,value);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(value);}});});},









setItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},







removeItem:function(
key,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove([key],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










mergeItem:function(
key,
value,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge([[key,value]],function(errors){
callback && callback(errors && convertError(errors[0]) || null);
if(errors){
reject(convertError(errors[0]));}else 
{
resolve(null);}});});},










clear:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.clear(function(error){
callback && callback(convertError(error));
if(error && convertError(error)){
reject(convertError(error));}else 
{
resolve(null);}});});},








getAllKeys:function(callback){
return new Promise(function(resolve,reject){
RCTAsyncStorage.getAllKeys(function(error,keys){
callback && callback(convertError(error),keys);
if(error){
reject(convertError(error));}else 
{
resolve(keys);}});});},





















multiGet:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiGet(keys,function(errors,result){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error,result);
if(errors){
reject(error);}else 
{
resolve(result);}});});},











multiSet:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiSet(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},








multiRemove:function(
keys,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiRemove(keys,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});},











multiMerge:function(
keyValuePairs,
callback)
{
return new Promise(function(resolve,reject){
RCTAsyncStorage.multiMerge(keyValuePairs,function(errors){
var error=errors && errors.map(function(error){return convertError(error);}) || null;
callback && callback(error);
if(errors){
reject(error);}else 
{
resolve(null);}});});}};







if(!RCTAsyncStorage.multiMerge){
delete AsyncStorage.mergeItem;
delete AsyncStorage.multiMerge;}


function convertError(error){
if(!error){
return null;}

var out=new Error(error.message);
out.key = error.key;
return out;}


module.exports = AsyncStorage;});
__d('RCTRenderingPerf',["ReactDefaultPerf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactDefaultPerf=require('ReactDefaultPerf');

var invariant=require('invariant');






var perfModules=[];
var enabled=false;

var RCTRenderingPerf={

toggle:function(){
console.log('Render perfomance measurements enabled');
enabled = true;},


start:function(){
if(!enabled){
return;}


ReactDefaultPerf.start();
perfModules.forEach(function(module){return module.start();});},


stop:function(){
if(!enabled){
return;}


ReactDefaultPerf.stop();
ReactDefaultPerf.printInclusive();
ReactDefaultPerf.printWasted();

var totalRender=0;
var totalTime=0;
var measurements=ReactDefaultPerf.getLastMeasurements();
for(var ii=0;ii < measurements.length;ii++) {
var render=measurements[ii].render;
for(var nodeName in render) {
totalRender += render[nodeName];}

totalTime += measurements[ii].totalTime;}

console.log('Total time spent in render(): ' + totalRender + 'ms');

perfModules.forEach(function(module){return module.stop();});},


register:function(module){
invariant(
typeof module.start === 'function',
'Perf module should have start() function');

invariant(
typeof module.stop === 'function',
'Perf module should have stop() function');

perfModules.push(module);}};



module.exports = RCTRenderingPerf;});
__d('ReactDefaultPerf',["DOMProperty","ReactDefaultPerfAnalysis","ReactMount","ReactPerf","performanceNow"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var DOMProperty=require('DOMProperty');
var ReactDefaultPerfAnalysis=require('ReactDefaultPerfAnalysis');
var ReactMount=require('ReactMount');
var ReactPerf=require('ReactPerf');

var performanceNow=require('performanceNow');

function roundFloat(val){
return Math.floor(val * 100) / 100;}


function addValue(obj,key,val){
obj[key] = (obj[key] || 0) + val;}


var ReactDefaultPerf={
_allMeasurements:[],
_mountStack:[0],
_injected:false,

start:function(){
if(!ReactDefaultPerf._injected){
ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);}


ReactDefaultPerf._allMeasurements.length = 0;
ReactPerf.enableMeasure = true;},


stop:function(){
ReactPerf.enableMeasure = false;},


getLastMeasurements:function(){
return ReactDefaultPerf._allMeasurements;},


printExclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Component class name':item.componentName,
'Total inclusive time (ms)':roundFloat(item.inclusive),
'Exclusive mount time (ms)':roundFloat(item.exclusive),
'Exclusive render time (ms)':roundFloat(item.render),
'Mount time per instance (ms)':roundFloat(item.exclusive / item.count),
'Render time per instance (ms)':roundFloat(item.render / item.count),
'Instances':item.count};}));},






printInclusive:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
console.table(summary.map(function(item){
return {
'Owner > component':item.componentName,
'Inclusive time (ms)':roundFloat(item.time),
'Instances':item.count};}));


console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



getMeasurementsSummaryMap:function(measurements){
var summary=ReactDefaultPerfAnalysis.getInclusiveSummary(
measurements,
true);

return summary.map(function(item){
return {
'Owner > component':item.componentName,
'Wasted time (ms)':item.time,
'Instances':item.count};});},




printWasted:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



printDOM:function(measurements){
measurements = measurements || ReactDefaultPerf._allMeasurements;
var summary=ReactDefaultPerfAnalysis.getDOMSummary(measurements);
console.table(summary.map(function(item){
var result={};
result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
result['type'] = item.type;
result['args'] = JSON.stringify(item.args);
return result;}));

console.log(
'Total time:',
ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');},



_recordWrite:function(id,fnName,totalTime,args){

var writes=
ReactDefaultPerf.
_allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].
writes;
writes[id] = writes[id] || [];
writes[id].push({
type:fnName,
time:totalTime,
args:args});},



measure:function(moduleName,fnName,func){
return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}
var totalTime;
var rv;
var start;

if(fnName === '_renderNewRootComponent' || 
fnName === 'flushBatchedUpdates'){




ReactDefaultPerf._allMeasurements.push({
exclusive:{},
inclusive:{},
render:{},
counts:{},
writes:{},
displayNames:{},
totalTime:0});

start = performanceNow();
rv = func.apply(this,args);
ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1].
totalTime = performanceNow() - start;
return rv;}else 
if(fnName === '_mountImageIntoNode' || 
moduleName === 'ReactDOMIDOperations'){
start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(fnName === '_mountImageIntoNode'){
var mountID=ReactMount.getID(args[1]);
ReactDefaultPerf._recordWrite(mountID,fnName,totalTime,args[0]);}else 
if(fnName === 'dangerouslyProcessChildrenUpdates'){

args[0].forEach(function(update){
var writeArgs={};
if(update.fromIndex !== null){
writeArgs.fromIndex = update.fromIndex;}

if(update.toIndex !== null){
writeArgs.toIndex = update.toIndex;}

if(update.textContent !== null){
writeArgs.textContent = update.textContent;}

if(update.markupIndex !== null){
writeArgs.markup = args[1][update.markupIndex];}

ReactDefaultPerf._recordWrite(
update.parentID,
update.type,
totalTime,
writeArgs);});}else 


{

ReactDefaultPerf._recordWrite(
args[0],
fnName,
totalTime,
Array.prototype.slice.call(args,1));}


return rv;}else 
if(moduleName === 'ReactCompositeComponent' && (
fnName === 'mountComponent' || 
fnName === 'updateComponent' || 
fnName === '_renderValidatedComponent')){

if(typeof this._currentElement.type === 'string'){
return func.apply(this,args);}


var rootNodeID=fnName === 'mountComponent'?
args[0]:
this._rootNodeID;
var isRender=fnName === '_renderValidatedComponent';
var isMount=fnName === 'mountComponent';

var mountStack=ReactDefaultPerf._mountStack;
var entry=ReactDefaultPerf._allMeasurements[
ReactDefaultPerf._allMeasurements.length - 1];


if(isRender){
addValue(entry.counts,rootNodeID,1);}else 
if(isMount){
mountStack.push(0);}


start = performanceNow();
rv = func.apply(this,args);
totalTime = performanceNow() - start;

if(isRender){
addValue(entry.render,rootNodeID,totalTime);}else 
if(isMount){
var subMountTime=mountStack.pop();
mountStack[mountStack.length - 1] += totalTime;
addValue(entry.exclusive,rootNodeID,totalTime - subMountTime);
addValue(entry.inclusive,rootNodeID,totalTime);}else 
{
addValue(entry.inclusive,rootNodeID,totalTime);}


entry.displayNames[rootNodeID] = {
current:this.getName(),
owner:this._currentElement._owner?
this._currentElement._owner.getName():
'<root>'};


return rv;}else 
{
return func.apply(this,args);}};}};





module.exports = ReactDefaultPerf;});
__d('DOMProperty',["invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';















var invariant=require('invariant');

function checkMask(value,bitmask){
return (value & bitmask) === bitmask;}


var DOMPropertyInjection={




MUST_USE_ATTRIBUTE:0x1,
MUST_USE_PROPERTY:0x2,
HAS_SIDE_EFFECTS:0x4,
HAS_BOOLEAN_VALUE:0x8,
HAS_NUMERIC_VALUE:0x10,
HAS_POSITIVE_NUMERIC_VALUE:0x20 | 0x10,
HAS_OVERLOADED_BOOLEAN_VALUE:0x40,


























injectDOMPropertyConfig:function(domPropertyConfig){
var Properties=domPropertyConfig.Properties || {};
var DOMAttributeNames=domPropertyConfig.DOMAttributeNames || {};
var DOMPropertyNames=domPropertyConfig.DOMPropertyNames || {};
var DOMMutationMethods=domPropertyConfig.DOMMutationMethods || {};

if(domPropertyConfig.isCustomAttribute){
DOMProperty._isCustomAttributeFunctions.push(
domPropertyConfig.isCustomAttribute);}



for(var propName in Properties) {
invariant(
!DOMProperty.isStandardName.hasOwnProperty(propName),
'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + 
'\'%s\' which has already been injected. You may be accidentally ' + 
'injecting the same DOM property config twice, or you may be ' + 
'injecting two configs that have conflicting property names.',
propName);


DOMProperty.isStandardName[propName] = true;

var lowerCased=propName.toLowerCase();
DOMProperty.getPossibleStandardName[lowerCased] = propName;

if(DOMAttributeNames.hasOwnProperty(propName)){
var attributeName=DOMAttributeNames[propName];
DOMProperty.getPossibleStandardName[attributeName] = propName;
DOMProperty.getAttributeName[propName] = attributeName;}else 
{
DOMProperty.getAttributeName[propName] = lowerCased;}


DOMProperty.getPropertyName[propName] = 
DOMPropertyNames.hasOwnProperty(propName)?
DOMPropertyNames[propName]:
propName;

if(DOMMutationMethods.hasOwnProperty(propName)){
DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];}else 
{
DOMProperty.getMutationMethod[propName] = null;}


var propConfig=Properties[propName];
DOMProperty.mustUseAttribute[propName] = 
checkMask(propConfig,DOMPropertyInjection.MUST_USE_ATTRIBUTE);
DOMProperty.mustUseProperty[propName] = 
checkMask(propConfig,DOMPropertyInjection.MUST_USE_PROPERTY);
DOMProperty.hasSideEffects[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_SIDE_EFFECTS);
DOMProperty.hasBooleanValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_BOOLEAN_VALUE);
DOMProperty.hasNumericValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_NUMERIC_VALUE);
DOMProperty.hasPositiveNumericValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
DOMProperty.hasOverloadedBooleanValue[propName] = 
checkMask(propConfig,DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

invariant(
!DOMProperty.mustUseAttribute[propName] || 
!DOMProperty.mustUseProperty[propName],
'DOMProperty: Cannot require using both attribute and property: %s',
propName);

invariant(
DOMProperty.mustUseProperty[propName] || 
!DOMProperty.hasSideEffects[propName],
'DOMProperty: Properties that have side effects must use property: %s',
propName);

invariant(
!!DOMProperty.hasBooleanValue[propName] + 
!!DOMProperty.hasNumericValue[propName] + 
!!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 
'numeric value, but not a combination: %s',
propName);}}};




var defaultValueCache={};














var DOMProperty={

ID_ATTRIBUTE_NAME:'data-reactid',





isStandardName:{},






getPossibleStandardName:{},






getAttributeName:{},






getPropertyName:{},






getMutationMethod:{},





mustUseAttribute:{},






mustUseProperty:{},







hasSideEffects:{},





hasBooleanValue:{},






hasNumericValue:{},






hasPositiveNumericValue:{},







hasOverloadedBooleanValue:{},




_isCustomAttributeFunctions:[],





isCustomAttribute:function(attributeName){
for(var i=0;i < DOMProperty._isCustomAttributeFunctions.length;i++) {
var isCustomAttributeFn=DOMProperty._isCustomAttributeFunctions[i];
if(isCustomAttributeFn(attributeName)){
return true;}}


return false;},










getDefaultValueForProperty:function(nodeName,prop){
var nodeDefaults=defaultValueCache[nodeName];
var testElement;
if(!nodeDefaults){
defaultValueCache[nodeName] = nodeDefaults = {};}

if(!(prop in nodeDefaults)){
testElement = document.createElement(nodeName);
nodeDefaults[prop] = testElement[prop];}

return nodeDefaults[prop];},


injection:DOMPropertyInjection};


module.exports = DOMProperty;});
__d('ReactDefaultPerfAnalysis',["Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 










assign=require('Object.assign');


var DONT_CARE_THRESHOLD=1.2;
var DOM_OPERATION_TYPES={
'_mountImageIntoNode':'set innerHTML',
INSERT_MARKUP:'set innerHTML',
MOVE_EXISTING:'move',
REMOVE_NODE:'remove',
TEXT_CONTENT:'set textContent',
'updatePropertyByID':'update attribute',
'deletePropertyByID':'delete attribute',
'updateStylesByID':'update styles',
'updateInnerHTMLByID':'set innerHTML',
'dangerouslyReplaceNodeWithMarkupByID':'replace'};


function getTotalTime(measurements){




var totalTime=0;
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
totalTime += measurement.totalTime;}

return totalTime;}


function getDOMSummary(measurements){
var items=[];
for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var id;

for(id in measurement.writes) {
measurement.writes[id].forEach(function(write){
items.push({
id:id,
type:DOM_OPERATION_TYPES[write.type] || write.type,
args:write.args});});}}




return items;}


function getExclusiveSummary(measurements){
var candidates={};
var displayName;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);


for(var id in allIDs) {
displayName = measurement.displayNames[id].current;

candidates[displayName] = candidates[displayName] || {
componentName:displayName,
inclusive:0,
exclusive:0,
render:0,
count:0};

if(measurement.render[id]){
candidates[displayName].render += measurement.render[id];}

if(measurement.exclusive[id]){
candidates[displayName].exclusive += measurement.exclusive[id];}

if(measurement.inclusive[id]){
candidates[displayName].inclusive += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[displayName].count += measurement.counts[id];}}}





var arr=[];
for(displayName in candidates) {
if(candidates[displayName].exclusive >= DONT_CARE_THRESHOLD){
arr.push(candidates[displayName]);}}



arr.sort(function(a,b){
return b.exclusive - a.exclusive;});


return arr;}


function getInclusiveSummary(measurements,onlyClean){
var candidates={};
var inclusiveKey;

for(var i=0;i < measurements.length;i++) {
var measurement=measurements[i];
var allIDs=assign(
{},
measurement.exclusive,
measurement.inclusive);

var cleanComponents;

if(onlyClean){
cleanComponents = getUnchangedComponents(measurement);}


for(var id in allIDs) {
if(onlyClean && !cleanComponents[id]){
continue;}


var displayName=measurement.displayNames[id];




inclusiveKey = displayName.owner + ' > ' + displayName.current;

candidates[inclusiveKey] = candidates[inclusiveKey] || {
componentName:inclusiveKey,
time:0,
count:0};


if(measurement.inclusive[id]){
candidates[inclusiveKey].time += measurement.inclusive[id];}

if(measurement.counts[id]){
candidates[inclusiveKey].count += measurement.counts[id];}}}





var arr=[];
for(inclusiveKey in candidates) {
if(candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD){
arr.push(candidates[inclusiveKey]);}}



arr.sort(function(a,b){
return b.time - a.time;});


return arr;}


function getUnchangedComponents(measurement){



var cleanComponents={};
var dirtyLeafIDs=Object.keys(measurement.writes);
var allIDs=assign({},measurement.exclusive,measurement.inclusive);

for(var id in allIDs) {
var isDirty=false;


for(var i=0;i < dirtyLeafIDs.length;i++) {
if(dirtyLeafIDs[i].indexOf(id) === 0){
isDirty = true;
break;}}


if(!isDirty && measurement.counts[id] > 0){
cleanComponents[id] = true;}}


return cleanComponents;}


var ReactDefaultPerfAnalysis={
getExclusiveSummary:getExclusiveSummary,
getInclusiveSummary:getInclusiveSummary,
getDOMSummary:getDOMSummary,
getTotalTime:getTotalTime};


module.exports = ReactDefaultPerfAnalysis;});
__d('ReactMount',["DOMProperty","ReactBrowserEventEmitter","ReactCurrentOwner","ReactElement","ReactElementValidator","ReactEmptyComponent","ReactInstanceHandles","ReactInstanceMap","ReactMarkupChecksum","ReactPerf","ReactReconciler","ReactUpdateQueue","ReactUpdates","emptyObject","containsNode","getReactRootElementInContainer","instantiateReactComponent","invariant","setInnerHTML","shouldUpdateReactComponent","warning"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOMProperty=require('DOMProperty');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCurrentOwner=require('ReactCurrentOwner');
var ReactElement=require('ReactElement');
var ReactElementValidator=require('ReactElementValidator');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMarkupChecksum=require('ReactMarkupChecksum');
var ReactPerf=require('ReactPerf');
var ReactReconciler=require('ReactReconciler');
var ReactUpdateQueue=require('ReactUpdateQueue');
var ReactUpdates=require('ReactUpdates');

var emptyObject=require('emptyObject');
var containsNode=require('containsNode');
var getReactRootElementInContainer=require('getReactRootElementInContainer');
var instantiateReactComponent=require('instantiateReactComponent');
var invariant=require('invariant');
var setInnerHTML=require('setInnerHTML');
var shouldUpdateReactComponent=require('shouldUpdateReactComponent');
var warning=require('warning');

var SEPARATOR=ReactInstanceHandles.SEPARATOR;

var ATTR_NAME=DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache={};

var ELEMENT_NODE_TYPE=1;
var DOC_NODE_TYPE=9;


var instancesByReactRootID={};


var containersByReactRootID={};

if(__DEV__){

var rootElementsByReactRootID={};}



var findComponentRootReusableArray=[];







function firstDifferenceIndex(string1,string2){
var minLen=Math.min(string1.length,string2.length);
for(var i=0;i < minLen;i++) {
if(string1.charAt(i) !== string2.charAt(i)){
return i;}}


return string1.length === string2.length?-1:minLen;}






function getReactRootID(container){
var rootElement=getReactRootElementInContainer(container);
return rootElement && ReactMount.getID(rootElement);}












function getID(node){
var id=internalGetID(node);
if(id){
if(nodeCache.hasOwnProperty(id)){
var cached=nodeCache[id];
if(cached !== node){
invariant(
!isValid(cached,id),
'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
ATTR_NAME,id);


nodeCache[id] = node;}}else 

{
nodeCache[id] = node;}}



return id;}


function internalGetID(node){



return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';}








function setID(node,id){
var oldID=internalGetID(node);
if(oldID !== id){
delete nodeCache[oldID];}

node.setAttribute(ATTR_NAME,id);
nodeCache[id] = node;}









function getNode(id){
if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}









function getNodeFromInstance(instance){
var id=ReactInstanceMap.get(instance)._rootNodeID;
if(ReactEmptyComponent.isNullComponentID(id)){
return null;}

if(!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id],id)){
nodeCache[id] = ReactMount.findReactNodeByID(id);}

return nodeCache[id];}












function isValid(node,id){
if(node){
invariant(
internalGetID(node) === id,
'ReactMount: Unexpected modification of `%s`',
ATTR_NAME);


var container=ReactMount.findReactContainerForID(id);
if(container && containsNode(container,node)){
return true;}}



return false;}







function purgeID(id){
delete nodeCache[id];}


var deepestNodeSoFar=null;
function findDeepestCachedAncestorImpl(ancestorID){
var ancestor=nodeCache[ancestorID];
if(ancestor && isValid(ancestor,ancestorID)){
deepestNodeSoFar = ancestor;}else 
{


return false;}}






function findDeepestCachedAncestor(targetID){
deepestNodeSoFar = null;
ReactInstanceHandles.traverseAncestors(
targetID,
findDeepestCachedAncestorImpl);


var foundNode=deepestNodeSoFar;
deepestNodeSoFar = null;
return foundNode;}











function mountComponentIntoNode(
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup){
var markup=ReactReconciler.mountComponent(
componentInstance,rootID,transaction,emptyObject);

componentInstance._isTopLevel = true;
ReactMount._mountImageIntoNode(markup,container,shouldReuseMarkup);}










function batchedMountComponentIntoNode(
componentInstance,
rootID,
container,
shouldReuseMarkup){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
transaction.perform(
mountComponentIntoNode,
null,
componentInstance,
rootID,
container,
transaction,
shouldReuseMarkup);

ReactUpdates.ReactReconcileTransaction.release(transaction);}




















var ReactMount={

_instancesByReactRootID:instancesByReactRootID,









scrollMonitor:function(container,renderCallback){
renderCallback();},









_updateRootComponent:function(
prevComponent,
nextElement,
container,
callback){
if(__DEV__){
ReactElementValidator.checkAndWarnForMutatedProps(nextElement);}


ReactMount.scrollMonitor(container,function(){
ReactUpdateQueue.enqueueElementInternal(prevComponent,nextElement);
if(callback){
ReactUpdateQueue.enqueueCallbackInternal(prevComponent,callback);}});



if(__DEV__){

rootElementsByReactRootID[getReactRootID(container)] = 
getReactRootElementInContainer(container);}


return prevComponent;},









_registerComponent:function(nextComponent,container){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'_registerComponent(...): Target container is not a DOM element.');


ReactBrowserEventEmitter.ensureScrollValueMonitoring();

var reactRootID=ReactMount.registerContainer(container);
instancesByReactRootID[reactRootID] = nextComponent;
return reactRootID;},









_renderNewRootComponent:function(
nextElement,
container,
shouldReuseMarkup)
{



warning(
ReactCurrentOwner.current == null,
'_renderNewRootComponent(): Render methods should be a pure function ' + 
'of props and state; triggering nested component updates from ' + 
'render is not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


var componentInstance=instantiateReactComponent(nextElement,null);
var reactRootID=ReactMount._registerComponent(
componentInstance,
container);






ReactUpdates.batchedUpdates(
batchedMountComponentIntoNode,
componentInstance,
reactRootID,
container,
shouldReuseMarkup);


if(__DEV__){

rootElementsByReactRootID[reactRootID] = 
getReactRootElementInContainer(container);}


return componentInstance;},














render:function(nextElement,container,callback){
invariant(
ReactElement.isValidElement(nextElement),
'React.render(): Invalid component element.%s',

typeof nextElement === 'string'?
' Instead of passing an element string, make sure to instantiate ' + 
'it by passing it to React.createElement.':
typeof nextElement === 'function'?
' Instead of passing a component class, make sure to instantiate ' + 
'it by passing it to React.createElement.':

nextElement != null && nextElement.props !== undefined?
' This may be caused by unintentionally loading two independent ' + 
'copies of React.':
'');



var prevComponent=instancesByReactRootID[getReactRootID(container)];

if(prevComponent){
var prevElement=prevComponent._currentElement;
if(shouldUpdateReactComponent(prevElement,nextElement)){
return ReactMount._updateRootComponent(
prevComponent,
nextElement,
container,
callback).
getPublicInstance();}else 
{
ReactMount.unmountComponentAtNode(container);}}



var reactRootElement=getReactRootElementInContainer(container);
var containerHasReactMarkup=
reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

if(__DEV__){
if(!containerHasReactMarkup || reactRootElement.nextSibling){
var rootElementSibling=reactRootElement;
while(rootElementSibling) {
if(ReactMount.isRenderedByReact(rootElementSibling)){
warning(
false,
'render(): Target node has markup rendered by React, but there ' + 
'are unrelated nodes as well. This is most commonly caused by ' + 
'white-space inserted around server-rendered markup.');

break;}


rootElementSibling = rootElementSibling.nextSibling;}}}




var shouldReuseMarkup=containerHasReactMarkup && !prevComponent;

var component=ReactMount._renderNewRootComponent(
nextElement,
container,
shouldReuseMarkup).
getPublicInstance();
if(callback){
callback.call(component);}

return component;},











constructAndRenderComponent:function(constructor,props,container){
var element=ReactElement.createElement(constructor,props);
return ReactMount.render(element,container);},











constructAndRenderComponentByID:function(constructor,props,id){
var domNode=document.getElementById(id);
invariant(
domNode,
'Tried to get element with id of "%s" but it is not present on the page.',
id);

return ReactMount.constructAndRenderComponent(constructor,props,domNode);},










registerContainer:function(container){
var reactRootID=getReactRootID(container);
if(reactRootID){

reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);}

if(!reactRootID){

reactRootID = ReactInstanceHandles.createReactRootID();}

containersByReactRootID[reactRootID] = container;
return reactRootID;},









unmountComponentAtNode:function(container){




warning(
ReactCurrentOwner.current == null,
'unmountComponentAtNode(): Render methods should be a pure function of ' + 
'props and state; triggering nested component updates from render is ' + 
'not allowed. If necessary, trigger nested updates in ' + 
'componentDidUpdate.');


invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'unmountComponentAtNode(...): Target container is not a DOM element.');


var reactRootID=getReactRootID(container);
var component=instancesByReactRootID[reactRootID];
if(!component){
return false;}

ReactMount.unmountComponentFromNode(component,container);
delete instancesByReactRootID[reactRootID];
delete containersByReactRootID[reactRootID];
if(__DEV__){
delete rootElementsByReactRootID[reactRootID];}

return true;},











unmountComponentFromNode:function(instance,container){
ReactReconciler.unmountComponent(instance);

if(container.nodeType === DOC_NODE_TYPE){
container = container.documentElement;}



while(container.lastChild) {
container.removeChild(container.lastChild);}},










findReactContainerForID:function(id){
var reactRootID=ReactInstanceHandles.getReactRootIDFromNodeID(id);
var container=containersByReactRootID[reactRootID];

if(__DEV__){
var rootElement=rootElementsByReactRootID[reactRootID];
if(rootElement && rootElement.parentNode !== container){
invariant(


internalGetID(rootElement) === reactRootID,
'ReactMount: Root element ID differed from reactRootID.');


var containerChild=container.firstChild;
if(containerChild && 
reactRootID === internalGetID(containerChild)){




rootElementsByReactRootID[reactRootID] = containerChild;}else 
{
warning(
false,
'ReactMount: Root element has been removed from its original ' + 
'container. New container:',rootElement.parentNode);}}}





return container;},








findReactNodeByID:function(id){
var reactRoot=ReactMount.findReactContainerForID(id);
return ReactMount.findComponentRoot(reactRoot,id);},









isRenderedByReact:function(node){
if(node.nodeType !== 1){

return false;}

var id=ReactMount.getID(node);
return id?id.charAt(0) === SEPARATOR:false;},










getFirstReactDOM:function(node){
var current=node;
while(current && current.parentNode !== current) {
if(ReactMount.isRenderedByReact(current)){
return current;}

current = current.parentNode;}

return null;},












findComponentRoot:function(ancestorNode,targetID){
var firstChildren=findComponentRootReusableArray;
var childIndex=0;

var deepestAncestor=findDeepestCachedAncestor(targetID) || ancestorNode;

firstChildren[0] = deepestAncestor.firstChild;
firstChildren.length = 1;

while(childIndex < firstChildren.length) {
var child=firstChildren[childIndex++];
var targetChild;

while(child) {
var childID=ReactMount.getID(child);
if(childID){





if(targetID === childID){
targetChild = child;}else 
if(ReactInstanceHandles.isAncestorIDOf(childID,targetID)){




firstChildren.length = childIndex = 0;
firstChildren.push(child.firstChild);}}else 


{





firstChildren.push(child.firstChild);}


child = child.nextSibling;}


if(targetChild){



firstChildren.length = 0;

return targetChild;}}



firstChildren.length = 0;

invariant(
false,
'findComponentRoot(..., %s): Unable to find element. This probably ' + 
'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 
'usually due to forgetting a <tbody> when using tables, nesting tags ' + 
'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 
'parent. ' + 
'Try inspecting the child nodes of the element with React ID `%s`.',
targetID,
ReactMount.getID(ancestorNode));},



_mountImageIntoNode:function(markup,container,shouldReuseMarkup){
invariant(
container && (
container.nodeType === ELEMENT_NODE_TYPE || 
container.nodeType === DOC_NODE_TYPE),

'mountComponentIntoNode(...): Target container is not valid.');


if(shouldReuseMarkup){
var rootElement=getReactRootElementInContainer(container);
if(ReactMarkupChecksum.canReuseMarkup(markup,rootElement)){
return;}else 
{
var checksum=rootElement.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

var rootMarkup=rootElement.outerHTML;
rootElement.setAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
checksum);


var diffIndex=firstDifferenceIndex(markup,rootMarkup);
var difference=' (client) ' + 
markup.substring(diffIndex - 20,diffIndex + 20) + 
'\n (server) ' + rootMarkup.substring(diffIndex - 20,diffIndex + 20);

invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document using ' + 
'server rendering but the checksum was invalid. This usually ' + 
'means you rendered a different component type or props on ' + 
'the client from the one on the server, or your render() ' + 
'methods are impure. React cannot handle this case due to ' + 
'cross-browser quirks by rendering at the document root. You ' + 
'should look for environment dependent code in your components ' + 
'and ensure the props are the same client and server side:\n%s',
difference);


if(__DEV__){
warning(
false,
'React attempted to reuse markup in a container but the ' + 
'checksum was invalid. This generally means that you are ' + 
'using server rendering and the markup generated on the ' + 
'server was not what the client was expecting. React injected ' + 
'new markup to compensate which works but you have lost many ' + 
'of the benefits of server rendering. Instead, figure out ' + 
'why the markup being generated is different on the client ' + 
'or server:\n%s',
difference);}}}





invariant(
container.nodeType !== DOC_NODE_TYPE,
'You\'re trying to render a component to the document but ' + 
'you didn\'t use server rendering. We can\'t do this ' + 
'without using server rendering due to cross-browser quirks. ' + 
'See React.renderToString() for server rendering.');


setInnerHTML(container,markup);},






getReactRootID:getReactRootID,

getID:getID,

setID:setID,

getNode:getNode,

getNodeFromInstance:getNodeFromInstance,

purgeID:purgeID};


ReactPerf.measureMethods(ReactMount,'ReactMount',{
_renderNewRootComponent:'_renderNewRootComponent',
_mountImageIntoNode:'_mountImageIntoNode'});


module.exports = ReactMount;});
__d('ReactBrowserEventEmitter',["EventConstants","EventPluginHub","EventPluginRegistry","ReactEventEmitterMixin","ViewportMetrics","Object.assign","isEventSupported"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPluginRegistry=require('EventPluginRegistry');
var ReactEventEmitterMixin=require('ReactEventEmitterMixin');
var ViewportMetrics=require('ViewportMetrics');

var assign=require('Object.assign');
var isEventSupported=require('isEventSupported');
























































var alreadyListeningTo={};
var isMonitoringScrollValue=false;
var reactTopListenersCounter=0;




var topEventMapping={
topBlur:'blur',
topChange:'change',
topClick:'click',
topCompositionEnd:'compositionend',
topCompositionStart:'compositionstart',
topCompositionUpdate:'compositionupdate',
topContextMenu:'contextmenu',
topCopy:'copy',
topCut:'cut',
topDoubleClick:'dblclick',
topDrag:'drag',
topDragEnd:'dragend',
topDragEnter:'dragenter',
topDragExit:'dragexit',
topDragLeave:'dragleave',
topDragOver:'dragover',
topDragStart:'dragstart',
topDrop:'drop',
topFocus:'focus',
topInput:'input',
topKeyDown:'keydown',
topKeyPress:'keypress',
topKeyUp:'keyup',
topMouseDown:'mousedown',
topMouseMove:'mousemove',
topMouseOut:'mouseout',
topMouseOver:'mouseover',
topMouseUp:'mouseup',
topPaste:'paste',
topScroll:'scroll',
topSelectionChange:'selectionchange',
topTextInput:'textInput',
topTouchCancel:'touchcancel',
topTouchEnd:'touchend',
topTouchMove:'touchmove',
topTouchStart:'touchstart',
topWheel:'wheel'};





var topListenersIDKey='_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt){


if(!Object.prototype.hasOwnProperty.call(mountAt,topListenersIDKey)){
mountAt[topListenersIDKey] = reactTopListenersCounter++;
alreadyListeningTo[mountAt[topListenersIDKey]] = {};}

return alreadyListeningTo[mountAt[topListenersIDKey]];}












var ReactBrowserEventEmitter=assign({},ReactEventEmitterMixin,{




ReactEventListener:null,

injection:{



injectReactEventListener:function(ReactEventListener){
ReactEventListener.setHandleTopLevel(
ReactBrowserEventEmitter.handleTopLevel);

ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;}},








setEnabled:function(enabled){
if(ReactBrowserEventEmitter.ReactEventListener){
ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);}},






isEnabled:function(){
return !!(
ReactBrowserEventEmitter.ReactEventListener && 
ReactBrowserEventEmitter.ReactEventListener.isEnabled());},
























listenTo:function(registrationName,contentDocumentHandle){
var mountAt=contentDocumentHandle;
var isListening=getListeningForDocument(mountAt);
var dependencies=EventPluginRegistry.
registrationNameDependencies[registrationName];

var topLevelTypes=EventConstants.topLevelTypes;
for(var i=0,l=dependencies.length;i < l;i++) {
var dependency=dependencies[i];
if(!(
isListening.hasOwnProperty(dependency) && 
isListening[dependency]))
{
if(dependency === topLevelTypes.topWheel){
if(isEventSupported('wheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'wheel',
mountAt);}else 

if(isEventSupported('mousewheel')){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'mousewheel',
mountAt);}else 

{


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topWheel,
'DOMMouseScroll',
mountAt);}}else 


if(dependency === topLevelTypes.topScroll){

if(isEventSupported('scroll',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topScroll,
'scroll',
mountAt);}else 

{
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topScroll,
'scroll',
ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);}}else 


if(dependency === topLevelTypes.topFocus || 
dependency === topLevelTypes.topBlur){

if(isEventSupported('focus',true)){
ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topFocus,
'focus',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelTypes.topBlur,
'blur',
mountAt);}else 

if(isEventSupported('focusin')){


ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topFocus,
'focusin',
mountAt);

ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelTypes.topBlur,
'focusout',
mountAt);}




isListening[topLevelTypes.topBlur] = true;
isListening[topLevelTypes.topFocus] = true;}else 
if(topEventMapping.hasOwnProperty(dependency)){
ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
dependency,
topEventMapping[dependency],
mountAt);}



isListening[dependency] = true;}}},




trapBubbledEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
topLevelType,
handlerBaseName,
handle);},



trapCapturedEvent:function(topLevelType,handlerBaseName,handle){
return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
topLevelType,
handlerBaseName,
handle);},











ensureScrollValueMonitoring:function(){
if(!isMonitoringScrollValue){
var refresh=ViewportMetrics.refreshScrollValues;
ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
isMonitoringScrollValue = true;}},



eventNameDispatchConfigs:EventPluginHub.eventNameDispatchConfigs,

registrationNameModules:EventPluginHub.registrationNameModules,

putListener:EventPluginHub.putListener,

getListener:EventPluginHub.getListener,

deleteListener:EventPluginHub.deleteListener,

deleteAllListeners:EventPluginHub.deleteAllListeners});



module.exports = ReactBrowserEventEmitter;});
__d('ViewportMetrics',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ViewportMetrics={

currentScrollLeft:0,

currentScrollTop:0,

refreshScrollValues:function(scrollPosition){
ViewportMetrics.currentScrollLeft = scrollPosition.x;
ViewportMetrics.currentScrollTop = scrollPosition.y;}};




module.exports = ViewportMetrics;});
__d('isEventSupported',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ExecutionEnvironment=require('ExecutionEnvironment');

var useHasFeature;
if(ExecutionEnvironment.canUseDOM){
useHasFeature = 
document.implementation && 
document.implementation.hasFeature && 


document.implementation.hasFeature('','') !== true;}
















function isEventSupported(eventNameSuffix,capture){
if(!ExecutionEnvironment.canUseDOM || 
capture && !('addEventListener' in document)){
return false;}


var eventName='on' + eventNameSuffix;
var isSupported=(eventName in document);

if(!isSupported){
var element=document.createElement('div');
element.setAttribute(eventName,'return;');
isSupported = typeof element[eventName] === 'function';}


if(!isSupported && useHasFeature && eventNameSuffix === 'wheel'){

isSupported = document.implementation.hasFeature('Events.wheel','3.0');}


return isSupported;}


module.exports = isEventSupported;});
__d('ReactMarkupChecksum',["adler32"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var adler32=require('adler32');

var ReactMarkupChecksum={
CHECKSUM_ATTR_NAME:'data-react-checksum',





addChecksumToMarkup:function(markup){
var checksum=adler32(markup);
return markup.replace(
'>',
' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">');},








canReuseMarkup:function(markup,element){
var existingChecksum=element.getAttribute(
ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

existingChecksum = existingChecksum && parseInt(existingChecksum,10);
var markupChecksum=adler32(markup);
return markupChecksum === existingChecksum;}};



module.exports = ReactMarkupChecksum;});
__d('adler32',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var MOD=65521;





function adler32(data){
var a=1;
var b=0;
for(var i=0;i < data.length;i++) {
a = (a + data.charCodeAt(i)) % MOD;
b = (b + a) % MOD;}

return a | b << 16;}


module.exports = adler32;});
__d('containsNode',["isTextNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isTextNode=require('isTextNode');










function containsNode(outerNode,innerNode){
if(!outerNode || !innerNode){
return false;}else 
if(outerNode === innerNode){
return true;}else 
if(isTextNode(outerNode)){
return false;}else 
if(isTextNode(innerNode)){
return containsNode(outerNode,innerNode.parentNode);}else 
if(outerNode.contains){
return outerNode.contains(innerNode);}else 
if(outerNode.compareDocumentPosition){
return !!(outerNode.compareDocumentPosition(innerNode) & 16);}else 
{
return false;}}



module.exports = containsNode;});
__d('isTextNode',["isNode"],function(global, require, requireDynamic, requireLazy, module, exports) {  var 











isNode=require('isNode');





function isTextNode(object){
return isNode(object) && object.nodeType == 3;}


module.exports = isTextNode;});
__d('getReactRootElementInContainer',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var DOC_NODE_TYPE=9;






function getReactRootElementInContainer(container){
if(!container){
return null;}


if(container.nodeType === DOC_NODE_TYPE){
return container.documentElement;}else 
{
return container.firstChild;}}



module.exports = getReactRootElementInContainer;});
__d('setInnerHTML',["ExecutionEnvironment"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var ExecutionEnvironment=require('ExecutionEnvironment');

var WHITESPACE_TEST=/^[ \r\n\t\f]/;
var NONVISIBLE_TEST=/<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;









var setInnerHTML=function(node,html){
node.innerHTML = html;};



if(typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction){
setInnerHTML = function(node,html){
MSApp.execUnsafeLocalFunction(function(){
node.innerHTML = html;});};}




if(ExecutionEnvironment.canUseDOM){






var testElement=document.createElement('div');
testElement.innerHTML = ' ';
if(testElement.innerHTML === ''){
setInnerHTML = function(node,html){





if(node.parentNode){
node.parentNode.replaceChild(node,node);}






if(WHITESPACE_TEST.test(html) || 
html[0] === '<' && NONVISIBLE_TEST.test(html)){


node.innerHTML = '﻿' + html;



var textNode=node.firstChild;
if(textNode.data.length === 1){
node.removeChild(textNode);}else 
{
textNode.deleteData(0,1);}}else 

{
node.innerHTML = html;}};}}





module.exports = setInnerHTML;});
__d('AppStateIOS',["Map","NativeModules","RCTDeviceEventEmitter","logError","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var Map=require('Map');
var NativeModules=require('NativeModules');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTAppState=NativeModules.AppState;

var logError=require('logError');
var invariant=require('invariant');

var _eventHandlers={
change:new Map(),
memoryWarning:new Map()};





















































var AppStateIOS={





addEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to subscribe to unknown event: "%s"',type);

if(type === 'change'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
handler(appStateData.app_state);}));}else 


if(type === 'memoryWarning'){
_eventHandlers[type].set(handler,RCTDeviceEventEmitter.addListener(
'memoryWarning',
handler));}},







removeEventListener:function(
type,
handler)
{
invariant(
['change','memoryWarning'].indexOf(type) !== -1,
'Trying to remove listener for unknown event: "%s"',type);

if(!_eventHandlers[type].has(handler)){
return;}

_eventHandlers[type].get(handler).remove();
_eventHandlers[type].delete(handler);},


currentState:null};



RCTDeviceEventEmitter.addListener(
'appStateDidChange',
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;});



RCTAppState.getCurrentAppState(
function(appStateData){
AppStateIOS.currentState = appStateData.app_state;},

logError);


module.exports = AppStateIOS;});
__d('CameraRoll',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","deepFreezeAndThrowOnMutationInDev","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var ReactPropTypes=require('ReactPropTypes');
var RCTCameraRollManager=require('NativeModules').CameraRollManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var deepFreezeAndThrowOnMutationInDev=
require('deepFreezeAndThrowOnMutationInDev');
var invariant=require('invariant');

var GROUP_TYPES_OPTIONS=[
'Album',
'All',
'Event',
'Faces',
'Library',
'PhotoStream',
'SavedPhotos'];


var ASSET_TYPE_OPTIONS=[
'All',
'Videos',
'Photos'];




deepFreezeAndThrowOnMutationInDev(GROUP_TYPES_OPTIONS);
deepFreezeAndThrowOnMutationInDev(ASSET_TYPE_OPTIONS);




var getPhotosParamChecker=createStrictShapeTypeChecker({




first:ReactPropTypes.number.isRequired,





after:ReactPropTypes.string,




groupTypes:ReactPropTypes.oneOf(GROUP_TYPES_OPTIONS),





groupName:ReactPropTypes.string,




assetType:ReactPropTypes.oneOf(ASSET_TYPE_OPTIONS)});





var getPhotosReturnChecker=createStrictShapeTypeChecker({
edges:ReactPropTypes.arrayOf(createStrictShapeTypeChecker({
node:createStrictShapeTypeChecker({
type:ReactPropTypes.string.isRequired,
group_name:ReactPropTypes.string.isRequired,
image:createStrictShapeTypeChecker({
uri:ReactPropTypes.string.isRequired,
height:ReactPropTypes.number.isRequired,
width:ReactPropTypes.number.isRequired,
isStored:ReactPropTypes.bool}).
isRequired,
timestamp:ReactPropTypes.number.isRequired,
location:createStrictShapeTypeChecker({
latitude:ReactPropTypes.number,
longitude:ReactPropTypes.number,
altitude:ReactPropTypes.number,
heading:ReactPropTypes.number,
speed:ReactPropTypes.number})}).

isRequired})).
isRequired,
page_info:createStrictShapeTypeChecker({
has_next_page:ReactPropTypes.bool.isRequired,
start_cursor:ReactPropTypes.string,
end_cursor:ReactPropTypes.string}).
isRequired});var 


CameraRoll=(function(){function CameraRoll(){_classCallCheck(this,CameraRoll);}_createClass(CameraRoll,null,[{key:'saveImageWithTag',value:











function saveImageWithTag(tag,successCallback,errorCallback){
invariant(
typeof tag === 'string',
'CameraRoll.saveImageWithTag tag must be a valid string.');

RCTCameraRollManager.saveImageWithTag(
tag,
function(imageTag){
successCallback && successCallback(imageTag);},

function(errorMessage){
errorCallback && errorCallback(errorMessage);});}},{key:'getPhotos',value:












function getPhotos(params,callback,errorCallback){
var metaCallback=callback;
if(__DEV__){
getPhotosParamChecker({params:params},'params','CameraRoll.getPhotos');
invariant(
typeof callback === 'function',
'CameraRoll.getPhotos callback must be a valid function.');

invariant(
typeof errorCallback === 'function',
'CameraRoll.getPhotos errorCallback must be a valid function.');}


if(__DEV__){
metaCallback = function(response){
getPhotosReturnChecker(
{response:response},
'response',
'CameraRoll.getPhotos callback');

callback(response);};}


RCTCameraRollManager.getPhotos(params,metaCallback,errorCallback);}}]);return CameraRoll;})();



CameraRoll.GroupTypesOptions = GROUP_TYPES_OPTIONS;
CameraRoll.AssetTypeOptions = ASSET_TYPE_OPTIONS;

module.exports = CameraRoll;});
__d('LayoutAnimation',["ReactPropTypes","NativeModules","createStrictShapeTypeChecker","keyMirror"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var PropTypes=require('ReactPropTypes');
var RCTUIManager=require('NativeModules').UIManager;

var createStrictShapeTypeChecker=require('createStrictShapeTypeChecker');
var keyMirror=require('keyMirror');

var TypesEnum={
spring:true,
linear:true,
easeInEaseOut:true,
easeIn:true,
easeOut:true};

var Types=keyMirror(TypesEnum);

var PropertiesEnum={
opacity:true,
scaleXY:true};

var Properties=keyMirror(PropertiesEnum);

var animChecker=createStrictShapeTypeChecker({
duration:PropTypes.number,
delay:PropTypes.number,
springDamping:PropTypes.number,
initialVelocity:PropTypes.number,
type:PropTypes.oneOf(
Object.keys(Types)),

property:PropTypes.oneOf(
Object.keys(Properties))});












var configChecker=createStrictShapeTypeChecker({
duration:PropTypes.number.isRequired,
create:animChecker,
update:animChecker,
delete:animChecker});









function configureNext(config,onAnimationDidEnd,onError){
configChecker({config:config},'config','LayoutAnimation.configureNext');
RCTUIManager.configureNextLayoutAnimation(config,onAnimationDidEnd,onError);}


function create(duration,type,creationProp){
return {
duration:duration,
create:{
type:type,
property:creationProp},

update:{
type:type}};}




var LayoutAnimation={
configureNext:configureNext,
create:create,
Types:Types,
Properties:Properties,
configChecker:configChecker,
Presets:{
easeInEaseOut:create(
300,Types.easeInEaseOut,Properties.opacity),

linear:create(
500,Types.linear,Properties.opacity),

spring:{
duration:700,
create:{
type:Types.linear,
property:Properties.opacity},

update:{
type:Types.spring,
springDamping:0.4}}}};





module.exports = LayoutAnimation;});
__d('LinkingIOS',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTLinkingManager=require('NativeModules').LinkingManager;
var invariant=require('invariant');

var _notifHandlers={};
var _initialURL=RCTLinkingManager && 
RCTLinkingManager.initialURL;

var DEVICE_NOTIF_EVENT='openURL';var 

































































LinkingIOS=(function(){function LinkingIOS(){_classCallCheck(this,LinkingIOS);}_createClass(LinkingIOS,null,[{key:'addEventListener',value:




function addEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_NOTIF_EVENT,
handler);}},{key:'removeEventListener',value:






function removeEventListener(type,handler){
invariant(
type === 'url',
'LinkingIOS only supports `url` events');

if(!_notifHandlers[handler]){
return;}

_notifHandlers[handler].remove();
_notifHandlers[handler] = null;}},{key:'openURL',value:





function openURL(url){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

RCTLinkingManager.openURL(url);}},{key:'canOpenURL',value:






function canOpenURL(url,callback){
invariant(
typeof url === 'string',
'Invalid url: should be a string');

invariant(
typeof callback === 'function',
'A valid callback function is required');

RCTLinkingManager.canOpenURL(url,callback);}},{key:'popInitialURL',value:






function popInitialURL(){
var initialURL=_initialURL;
_initialURL = null;
return initialURL;}}]);return LinkingIOS;})();



module.exports = LinkingIOS;});
__d('NetInfo',["NativeModules","Platform","RCTDeviceEventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var NativeModules=require('NativeModules');
var Platform=require('Platform');
var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');

if(Platform.OS === 'ios'){
var RCTNetInfo=NativeModules.Reachability;}else 
if(Platform.OS === 'android'){
var RCTNetInfo=NativeModules.NetInfo;}


var DEVICE_REACHABILITY_EVENT='reachabilityDidChange';






















































































































var _subscriptions={};

var NetInfo={
addEventListener:function(
eventName,
handler)
{
_subscriptions[handler] = RCTDeviceEventEmitter.addListener(
DEVICE_REACHABILITY_EVENT,
function(appStateData){
handler(appStateData.network_reachability);});},




removeEventListener:function(
eventName,
handler)
{
if(!_subscriptions[handler]){
return;}

_subscriptions[handler].remove();
_subscriptions[handler] = null;},


fetch:function(){
return new Promise(function(resolve,reject){
RCTNetInfo.getCurrentReachability(
function(resp){
resolve(resp.network_reachability);},

reject);});},




isConnected:{},

isConnectionMetered:{}};


if(Platform.OS === 'ios'){
var _isConnected=function(
reachability)
{
return reachability !== 'none' && 
reachability !== 'unknown';};}else 

if(Platform.OS === 'android'){
var _isConnected=function(
connectionType)
{
return connectionType !== 'NONE' && connectionType !== 'UNKNOWN';};}



var _isConnectedSubscriptions={};

NetInfo.isConnected = {
addEventListener:function(
eventName,
handler)
{
_isConnectedSubscriptions[handler] = function(connection){
handler(_isConnected(connection));};

NetInfo.addEventListener(
eventName,
_isConnectedSubscriptions[handler]);},



removeEventListener:function(
eventName,
handler)
{
NetInfo.removeEventListener(
eventName,
_isConnectedSubscriptions[handler]);},



fetch:function(){
return NetInfo.fetch().then(
function(connection){return _isConnected(connection);});}};




if(Platform.OS === 'android'){
NetInfo.isConnectionMetered = function(callback){
RCTNetInfo.isConnectionMetered(function(_isMetered){
callback(_isMetered);});};}




module.exports = NetInfo;});
__d('PushNotificationIOS',["RCTDeviceEventEmitter","NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if('value' in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}












var RCTDeviceEventEmitter=require('RCTDeviceEventEmitter');
var RCTPushNotificationManager=require('NativeModules').PushNotificationManager;
var invariant=require('invariant');

var _notifHandlers={};
var _initialNotification=RCTPushNotificationManager && 
RCTPushNotificationManager.initialNotification;

var DEVICE_NOTIF_EVENT='remoteNotificationReceived';
var NOTIF_REGISTER_EVENT='remoteNotificationsRegistered';var 








PushNotificationIOS=(function(){












































































































































function PushNotificationIOS(nativeNotif){var _this=this;_classCallCheck(this,PushNotificationIOS);
this._data = {};





Object.keys(nativeNotif).forEach(function(notifKey){
var notifVal=nativeNotif[notifKey];
if(notifKey === 'aps'){
_this._alert = notifVal.alert;
_this._sound = notifVal.sound;
_this._badgeCount = notifVal.badge;}else 
{
_this._data[notifKey] = notifVal;}});}_createClass(PushNotificationIOS,[{key:'getMessage',value:







function getMessage(){

return this._alert;}},{key:'getSound',value:





function getSound(){
return this._sound;}},{key:'getAlert',value:





function getAlert(){
return this._alert;}},{key:'getBadgeCount',value:





function getBadgeCount(){
return this._badgeCount;}},{key:'getData',value:





function getData(){
return this._data;}}],[{key:'setApplicationIconBadgeNumber',value:function setApplicationIconBadgeNumber(number){RCTPushNotificationManager.setApplicationIconBadgeNumber(number);}},{key:'getApplicationIconBadgeNumber',value:function getApplicationIconBadgeNumber(callback){RCTPushNotificationManager.getApplicationIconBadgeNumber(callback);}},{key:'addEventListener',value:function addEventListener(type,handler){invariant(type === 'notification' || type === 'register','PushNotificationIOS only supports `notification` and `register` events');if(type === 'notification'){_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(DEVICE_NOTIF_EVENT,function(notifData){handler(new PushNotificationIOS(notifData));});}else if(type === 'register'){_notifHandlers[handler] = RCTDeviceEventEmitter.addListener(NOTIF_REGISTER_EVENT,function(registrationInfo){handler(registrationInfo.deviceToken);});}}},{key:'requestPermissions',value:function requestPermissions(permissions){var requestedPermissions={};if(permissions){requestedPermissions = {alert:!!permissions.alert,badge:!!permissions.badge,sound:!!permissions.sound};}else {requestedPermissions = {alert:true,badge:true,sound:true};}RCTPushNotificationManager.requestPermissions(requestedPermissions);}},{key:'checkPermissions',value:function checkPermissions(callback){invariant(typeof callback === 'function','Must provide a valid callback');RCTPushNotificationManager.checkPermissions(callback);}},{key:'removeEventListener',value:function removeEventListener(type,handler){invariant(type === 'notification' || type === 'register','PushNotificationIOS only supports `notification` and `register` events');if(!_notifHandlers[handler]){return;}_notifHandlers[handler].remove();_notifHandlers[handler] = null;}},{key:'popInitialNotification',value:function popInitialNotification(){var initialNotification=_initialNotification && new PushNotificationIOS(_initialNotification);_initialNotification = null;return initialNotification;}}]);return PushNotificationIOS;})();



module.exports = PushNotificationIOS;});
__d('StatusBarIOS',["NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTStatusBarManager=require('NativeModules').StatusBarManager;












var StatusBarIOS={

setStyle:function(style,animated){
animated = animated || false;
RCTStatusBarManager.setStyle(style,animated);},


setHidden:function(hidden,animation){
animation = animation || 'none';
RCTStatusBarManager.setHidden(hidden,animation);}};



module.exports = StatusBarIOS;});
__d('VibrationIOS',["NativeModules","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var RCTVibration=require('NativeModules').Vibration;

var invariant=require('invariant');












var VibrationIOS={
vibrate:function(){
invariant(
arguments[0] === undefined,
'Vibration patterns not supported.');

RCTVibration.vibrate();}};



module.exports = VibrationIOS;});
__d('RCTNativeAppEventEmitter',["EventEmitter"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventEmitter=require('EventEmitter');

var RCTNativeAppEventEmitter=new EventEmitter();

module.exports = RCTNativeAppEventEmitter;});
__d('LinkedStateMixin',["ReactLink","ReactStateSetters"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';













var ReactLink=require('ReactLink');
var ReactStateSetters=require('ReactStateSetters');




var LinkedStateMixin={









linkState:function(key){
return new ReactLink(
this.state[key],
ReactStateSetters.createStateKeySetter(this,key));}};




module.exports = LinkedStateMixin;});
__d('ReactLink',["React"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';




































var React=require('React');





function ReactLink(value,requestChange){
this.value = value;
this.requestChange = requestChange;}










function createLinkTypeChecker(linkType){
var shapes={
value:typeof linkType === 'undefined'?
React.PropTypes.any.isRequired:
linkType.isRequired,
requestChange:React.PropTypes.func.isRequired};

return React.PropTypes.shape(shapes);}


ReactLink.PropTypes = {
link:createLinkTypeChecker};


module.exports = ReactLink;});
__d('ReactStateSetters',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var ReactStateSetters={










createStateSetter:function(component,funcReturningState){
return function(a,b,c,d,e,f){
var partialState=funcReturningState.call(component,a,b,c,d,e,f);
if(partialState){
component.setState(partialState);}};},















createStateKeySetter:function(component,key){

var cache=component.__keySetters || (component.__keySetters = {});
return cache[key] || (cache[key] = createStateKeySetter(component,key));}};



function createStateKeySetter(component,key){



var partialState={};
return function stateKeySetter(value){
partialState[key] = value;
component.setState(partialState);};}



ReactStateSetters.Mixin = {
















createStateSetter:function(funcReturningState){
return ReactStateSetters.createStateSetter(this,funcReturningState);},

















createStateKeySetter:function(key){
return ReactStateSetters.createStateKeySetter(this,key);}};



module.exports = ReactStateSetters;});
__d('ReactComponentWithPureRenderMixin',["shallowEqual"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var shallowEqual=require('shallowEqual');

























var ReactComponentWithPureRenderMixin={
shouldComponentUpdate:function(nextProps,nextState){
return !shallowEqual(this.props,nextProps) || 
!shallowEqual(this.state,nextState);}};



module.exports = ReactComponentWithPureRenderMixin;});
__d('shallowEqual',[],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';



















function shallowEqual(objA,objB){
if(objA === objB){
return true;}

var key;

for(key in objA) {
if(objA.hasOwnProperty(key) && (
!objB.hasOwnProperty(key) || objA[key] !== objB[key])){
return false;}}



for(key in objB) {
if(objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)){
return false;}}


return true;}


module.exports = shallowEqual;});
__d('update',["Object.assign","keyOf","invariant"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';














var assign=require('Object.assign');
var keyOf=require('keyOf');
var invariant=require('invariant');
var hasOwnProperty=({}).hasOwnProperty;

function shallowCopy(x){
if(Array.isArray(x)){
return x.concat();}else 
if(x && typeof x === 'object'){
return assign(new x.constructor(),x);}else 
{
return x;}}



var COMMAND_PUSH=keyOf({$push:null});
var COMMAND_UNSHIFT=keyOf({$unshift:null});
var COMMAND_SPLICE=keyOf({$splice:null});
var COMMAND_SET=keyOf({$set:null});
var COMMAND_MERGE=keyOf({$merge:null});
var COMMAND_APPLY=keyOf({$apply:null});

var ALL_COMMANDS_LIST=[
COMMAND_PUSH,
COMMAND_UNSHIFT,
COMMAND_SPLICE,
COMMAND_SET,
COMMAND_MERGE,
COMMAND_APPLY];


var ALL_COMMANDS_SET={};

ALL_COMMANDS_LIST.forEach(function(command){
ALL_COMMANDS_SET[command] = true;});


function invariantArrayCase(value,spec,command){
invariant(
Array.isArray(value),
'update(): expected target of %s to be an array; got %s.',
command,
value);

var specValue=spec[command];
invariant(
Array.isArray(specValue),
'update(): expected spec of %s to be an array; got %s. ' + 
'Did you forget to wrap your parameter in an array?',
command,
specValue);}



function update(value,spec){
invariant(
typeof spec === 'object',
'update(): You provided a key path to update() that did not contain one ' + 
'of %s. Did you forget to include {%s: ...}?',
ALL_COMMANDS_LIST.join(', '),
COMMAND_SET);


if(hasOwnProperty.call(spec,COMMAND_SET)){
invariant(
Object.keys(spec).length === 1,
'Cannot have more than one key in an object with %s',
COMMAND_SET);


return spec[COMMAND_SET];}


var nextValue=shallowCopy(value);

if(hasOwnProperty.call(spec,COMMAND_MERGE)){
var mergeObj=spec[COMMAND_MERGE];
invariant(
mergeObj && typeof mergeObj === 'object',
'update(): %s expects a spec of type \'object\'; got %s',
COMMAND_MERGE,
mergeObj);

invariant(
nextValue && typeof nextValue === 'object',
'update(): %s expects a target of type \'object\'; got %s',
COMMAND_MERGE,
nextValue);

assign(nextValue,spec[COMMAND_MERGE]);}


if(hasOwnProperty.call(spec,COMMAND_PUSH)){
invariantArrayCase(value,spec,COMMAND_PUSH);
spec[COMMAND_PUSH].forEach(function(item){
nextValue.push(item);});}



if(hasOwnProperty.call(spec,COMMAND_UNSHIFT)){
invariantArrayCase(value,spec,COMMAND_UNSHIFT);
spec[COMMAND_UNSHIFT].forEach(function(item){
nextValue.unshift(item);});}



if(hasOwnProperty.call(spec,COMMAND_SPLICE)){
invariant(
Array.isArray(value),
'Expected %s target to be an array; got %s',
COMMAND_SPLICE,
value);

invariant(
Array.isArray(spec[COMMAND_SPLICE]),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

spec[COMMAND_SPLICE].forEach(function(args){
invariant(
Array.isArray(args),
'update(): expected spec of %s to be an array of arrays; got %s. ' + 
'Did you forget to wrap your parameters in an array?',
COMMAND_SPLICE,
spec[COMMAND_SPLICE]);

nextValue.splice.apply(nextValue,args);});}



if(hasOwnProperty.call(spec,COMMAND_APPLY)){
invariant(
typeof spec[COMMAND_APPLY] === 'function',
'update(): expected spec of %s to be a function; got %s.',
COMMAND_APPLY,
spec[COMMAND_APPLY]);

nextValue = spec[COMMAND_APPLY](nextValue);}


for(var k in spec) {
if(!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])){
nextValue[k] = update(value[k],spec[k]);}}



return nextValue;}


module.exports = update;});
__d('ReactTestUtils',["EventConstants","EventPluginHub","EventPropagators","React","ReactElement","ReactEmptyComponent","ReactBrowserEventEmitter","ReactCompositeComponent","ReactInstanceHandles","ReactInstanceMap","ReactMount","ReactUpdates","SyntheticEvent","Object.assign"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';












var EventConstants=require('EventConstants');
var EventPluginHub=require('EventPluginHub');
var EventPropagators=require('EventPropagators');
var React=require('React');
var ReactElement=require('ReactElement');
var ReactEmptyComponent=require('ReactEmptyComponent');
var ReactBrowserEventEmitter=require('ReactBrowserEventEmitter');
var ReactCompositeComponent=require('ReactCompositeComponent');
var ReactInstanceHandles=require('ReactInstanceHandles');
var ReactInstanceMap=require('ReactInstanceMap');
var ReactMount=require('ReactMount');
var ReactUpdates=require('ReactUpdates');
var SyntheticEvent=require('SyntheticEvent');

var assign=require('Object.assign');

var topLevelTypes=EventConstants.topLevelTypes;

function Event(suffix){}










var ReactTestUtils={
renderIntoDocument:function(instance){
var div=document.createElement('div');





return React.render(instance,div);},


isElement:function(element){
return ReactElement.isValidElement(element);},


isElementOfType:function(inst,convenienceConstructor){
return (
ReactElement.isValidElement(inst) && 
inst.type === convenienceConstructor);},



isDOMComponent:function(inst){


return !!(inst && inst.tagName && inst.getDOMNode);},


isDOMComponentElement:function(inst){
return !!(inst && 
ReactElement.isValidElement(inst) && 
!!inst.tagName);},


isCompositeComponent:function(inst){
return typeof inst.render === 'function' && 
typeof inst.setState === 'function';},


isCompositeComponentWithType:function(inst,type){
return !!(ReactTestUtils.isCompositeComponent(inst) && 
inst.constructor === type);},


isCompositeComponentElement:function(inst){
if(!ReactElement.isValidElement(inst)){
return false;}



var prototype=inst.type.prototype;
return (
typeof prototype.render === 'function' && 
typeof prototype.setState === 'function');},



isCompositeComponentElementWithType:function(inst,type){
return !!(ReactTestUtils.isCompositeComponentElement(inst) && 
inst.constructor === type);},


getRenderedChildOfCompositeComponent:function(inst){
if(!ReactTestUtils.isCompositeComponent(inst)){
return null;}

var internalInstance=ReactInstanceMap.get(inst);
return internalInstance._renderedComponent.getPublicInstance();},


findAllInRenderedTree:function(inst,test){
if(!inst){
return [];}

var ret=test(inst)?[inst]:[];
if(ReactTestUtils.isDOMComponent(inst)){
var internalInstance=ReactInstanceMap.get(inst);
var renderedChildren=internalInstance.
_renderedComponent.
_renderedChildren;
var key;
for(key in renderedChildren) {
if(!renderedChildren.hasOwnProperty(key)){
continue;}

if(!renderedChildren[key].getPublicInstance){
continue;}

ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
renderedChildren[key].getPublicInstance(),
test));}}else 



if(ReactTestUtils.isCompositeComponent(inst)){
ret = ret.concat(
ReactTestUtils.findAllInRenderedTree(
ReactTestUtils.getRenderedChildOfCompositeComponent(inst),
test));}



return ret;},







scryRenderedDOMComponentsWithClass:function(root,className){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
var instClassName=inst.props.className;
return ReactTestUtils.isDOMComponent(inst) && (
instClassName && 
(' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1);});},










findRenderedDOMComponentWithClass:function(root,className){
var all=
ReactTestUtils.scryRenderedDOMComponentsWithClass(root,className);
if(all.length !== 1){
throw new Error('Did not find exactly one match ' + 
'(found: ' + all.length + ') for class:' + className);}


return all[0];},








scryRenderedDOMComponentsWithTag:function(root,tagName){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isDOMComponent(inst) && 
inst.tagName === tagName.toUpperCase();});},









findRenderedDOMComponentWithTag:function(root,tagName){
var all=ReactTestUtils.scryRenderedDOMComponentsWithTag(root,tagName);
if(all.length !== 1){
throw new Error('Did not find exactly one match for tag:' + tagName);}

return all[0];},







scryRenderedComponentsWithType:function(root,componentType){
return ReactTestUtils.findAllInRenderedTree(root,function(inst){
return ReactTestUtils.isCompositeComponentWithType(
inst,
componentType);});},










findRenderedComponentWithType:function(root,componentType){
var all=ReactTestUtils.scryRenderedComponentsWithType(
root,
componentType);

if(all.length !== 1){
throw new Error(
'Did not find exactly one match for componentType:' + componentType);}


return all[0];},















mockComponent:function(module,mockTagName){
mockTagName = mockTagName || module.mockTagName || 'div';

module.prototype.render.mockImplementation(function(){
return React.createElement(
mockTagName,
null,
this.props.children);});



return this;},









simulateNativeEventOnNode:function(topLevelType,node,fakeNativeEvent){
fakeNativeEvent.target = node;
ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
topLevelType,
fakeNativeEvent);},










simulateNativeEventOnDOMComponent:function(
topLevelType,
comp,
fakeNativeEvent){
ReactTestUtils.simulateNativeEventOnNode(
topLevelType,
comp.getDOMNode(),
fakeNativeEvent);},



nativeTouchData:function(x,y){
return {
touches:[
{pageX:x,pageY:y}]};},




createRenderer:function(){
return new ReactShallowRenderer();},


Simulate:null,
SimulateNative:{}};





var ReactShallowRenderer=function(){
this._instance = null;};


ReactShallowRenderer.prototype.getRenderOutput = function(){
return (
this._instance && this._instance._renderedComponent && 
this._instance._renderedComponent._renderedOutput || 
null);};



var NoopInternalComponent=function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;};


NoopInternalComponent.prototype = {

mountComponent:function(){},


receiveComponent:function(element){
this._renderedOutput = element;
this._currentElement = element === null || element === false?
ReactEmptyComponent.emptyElement:
element;},


unmountComponent:function(){}};




var ShallowComponentWrapper=function(){};
assign(
ShallowComponentWrapper.prototype,
ReactCompositeComponent.Mixin,{
_instantiateReactComponent:function(element){
return new NoopInternalComponent(element);},

_replaceNodeWithMarkupByID:function(){},
_renderValidatedComponent:
ReactCompositeComponent.Mixin.
_renderValidatedComponentWithoutOwnerOrContext});



ReactShallowRenderer.prototype.render = function(element,context){
var transaction=ReactUpdates.ReactReconcileTransaction.getPooled();
this._render(element,transaction,context);
ReactUpdates.ReactReconcileTransaction.release(transaction);};


ReactShallowRenderer.prototype.unmount = function(){
if(this._instance){
this._instance.unmountComponent();}};



ReactShallowRenderer.prototype._render = function(element,transaction,context){
if(!this._instance){
var rootID=ReactInstanceHandles.createReactRootID();
var instance=new ShallowComponentWrapper(element.type);
instance.construct(element);

instance.mountComponent(rootID,transaction,context);

this._instance = instance;}else 
{
this._instance.receiveComponent(element,transaction,context);}};











function makeSimulator(eventType){
return function(domComponentOrNode,eventData){
var node;
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
node = domComponentOrNode.getDOMNode();}else 
if(domComponentOrNode.tagName){
node = domComponentOrNode;}


var fakeNativeEvent=new Event();
fakeNativeEvent.target = node;


var event=new SyntheticEvent(
ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],
ReactMount.getID(node),
fakeNativeEvent);

assign(event,eventData);
EventPropagators.accumulateTwoPhaseDispatches(event);

ReactUpdates.batchedUpdates(function(){
EventPluginHub.enqueueEvents(event);
EventPluginHub.processEventQueue();});};}




function buildSimulators(){
ReactTestUtils.Simulate = {};

var eventType;
for(eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {




ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);}}




var oldInjectEventPluginOrder=EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function(){
oldInjectEventPluginOrder.apply(this,arguments);
buildSimulators();};

var oldInjectEventPlugins=EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function(){
oldInjectEventPlugins.apply(this,arguments);
buildSimulators();};


buildSimulators();

















function makeNativeSimulator(eventType){
return function(domComponentOrNode,nativeEventData){
var fakeNativeEvent=new Event(eventType);
assign(fakeNativeEvent,nativeEventData);
if(ReactTestUtils.isDOMComponent(domComponentOrNode)){
ReactTestUtils.simulateNativeEventOnDOMComponent(
eventType,
domComponentOrNode,
fakeNativeEvent);}else 

if(!!domComponentOrNode.tagName){

ReactTestUtils.simulateNativeEventOnNode(
eventType,
domComponentOrNode,
fakeNativeEvent);}};}





var eventType;
for(eventType in topLevelTypes) {

var convenienceName=eventType.indexOf('top') === 0?
eventType.charAt(3).toLowerCase() + eventType.substr(4):eventType;




ReactTestUtils.SimulateNative[convenienceName] = 
makeNativeSimulator(eventType);}


module.exports = ReactTestUtils;});
__d('underscore/underscore',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (




function(){





var root=this;


var previousUnderscore=root._;


var ArrayProto=Array.prototype,ObjProto=Object.prototype,FuncProto=Function.prototype;


var 
push=ArrayProto.push,
slice=ArrayProto.slice,
concat=ArrayProto.concat,
toString=ObjProto.toString,
hasOwnProperty=ObjProto.hasOwnProperty;



var 
nativeIsArray=Array.isArray,
nativeKeys=Object.keys,
nativeBind=FuncProto.bind;


var _=function(obj){
if(obj instanceof _)return obj;
if(!(this instanceof _))return new _(obj);
this._wrapped = obj;};





if(typeof exports !== 'undefined'){
if(typeof module !== 'undefined' && module.exports){
exports = module.exports = _;}

exports._ = _;}else 
{
root._ = _;}



_.VERSION = '1.7.0';




var createCallback=function(func,context,argCount){
if(context === void 0)return func;
switch(argCount == null?3:argCount){
case 1:return function(value){
return func.call(context,value);};

case 2:return function(value,other){
return func.call(context,value,other);};

case 3:return function(value,index,collection){
return func.call(context,value,index,collection);};

case 4:return function(accumulator,value,index,collection){
return func.call(context,accumulator,value,index,collection);};}


return function(){
return func.apply(context,arguments);};};






_.iteratee = function(value,context,argCount){
if(value == null)return _.identity;
if(_.isFunction(value))return createCallback(value,context,argCount);
if(_.isObject(value))return _.matches(value);
return _.property(value);};








_.each = _.forEach = function(obj,iteratee,context){
if(obj == null)return obj;
iteratee = createCallback(iteratee,context);
var i,length=obj.length;
if(length === +length){
for(i = 0;i < length;i++) {
iteratee(obj[i],i,obj);}}else 

{
var keys=_.keys(obj);
for(i = 0,length = keys.length;i < length;i++) {
iteratee(obj[keys[i]],keys[i],obj);}}


return obj;};



_.map = _.collect = function(obj,iteratee,context){
if(obj == null)return [];
iteratee = _.iteratee(iteratee,context);
var keys=obj.length !== +obj.length && _.keys(obj),
length=(keys || obj).length,
results=Array(length),
currentKey;
for(var index=0;index < length;index++) {
currentKey = keys?keys[index]:index;
results[index] = iteratee(obj[currentKey],currentKey,obj);}

return results;};


var reduceError='Reduce of empty array with no initial value';



_.reduce = _.foldl = _.inject = function(obj,iteratee,memo,context){
if(obj == null)obj = [];
iteratee = createCallback(iteratee,context,4);
var keys=obj.length !== +obj.length && _.keys(obj),
length=(keys || obj).length,
index=0,currentKey;
if(arguments.length < 3){
if(!length)throw new TypeError(reduceError);
memo = obj[keys?keys[index++]:index++];}

for(;index < length;index++) {
currentKey = keys?keys[index]:index;
memo = iteratee(memo,obj[currentKey],currentKey,obj);}

return memo;};



_.reduceRight = _.foldr = function(obj,iteratee,memo,context){
if(obj == null)obj = [];
iteratee = createCallback(iteratee,context,4);
var keys=obj.length !== +obj.length && _.keys(obj),
index=(keys || obj).length,
currentKey;
if(arguments.length < 3){
if(!index)throw new TypeError(reduceError);
memo = obj[keys?keys[--index]:--index];}

while(index--) {
currentKey = keys?keys[index]:index;
memo = iteratee(memo,obj[currentKey],currentKey,obj);}

return memo;};



_.find = _.detect = function(obj,predicate,context){
var result;
predicate = _.iteratee(predicate,context);
_.some(obj,function(value,index,list){
if(predicate(value,index,list)){
result = value;
return true;}});


return result;};




_.filter = _.select = function(obj,predicate,context){
var results=[];
if(obj == null)return results;
predicate = _.iteratee(predicate,context);
_.each(obj,function(value,index,list){
if(predicate(value,index,list))results.push(value);});

return results;};



_.reject = function(obj,predicate,context){
return _.filter(obj,_.negate(_.iteratee(predicate)),context);};




_.every = _.all = function(obj,predicate,context){
if(obj == null)return true;
predicate = _.iteratee(predicate,context);
var keys=obj.length !== +obj.length && _.keys(obj),
length=(keys || obj).length,
index,currentKey;
for(index = 0;index < length;index++) {
currentKey = keys?keys[index]:index;
if(!predicate(obj[currentKey],currentKey,obj))return false;}

return true;};




_.some = _.any = function(obj,predicate,context){
if(obj == null)return false;
predicate = _.iteratee(predicate,context);
var keys=obj.length !== +obj.length && _.keys(obj),
length=(keys || obj).length,
index,currentKey;
for(index = 0;index < length;index++) {
currentKey = keys?keys[index]:index;
if(predicate(obj[currentKey],currentKey,obj))return true;}

return false;};




_.contains = _.include = function(obj,target){
if(obj == null)return false;
if(obj.length !== +obj.length)obj = _.values(obj);
return _.indexOf(obj,target) >= 0;};



_.invoke = function(obj,method){
var args=slice.call(arguments,2);
var isFunc=_.isFunction(method);
return _.map(obj,function(value){
return (isFunc?method:value[method]).apply(value,args);});};




_.pluck = function(obj,key){
return _.map(obj,_.property(key));};




_.where = function(obj,attrs){
return _.filter(obj,_.matches(attrs));};




_.findWhere = function(obj,attrs){
return _.find(obj,_.matches(attrs));};



_.max = function(obj,iteratee,context){
var result=-Infinity,lastComputed=-Infinity,
value,computed;
if(iteratee == null && obj != null){
obj = obj.length === +obj.length?obj:_.values(obj);
for(var i=0,length=obj.length;i < length;i++) {
value = obj[i];
if(value > result){
result = value;}}}else 


{
iteratee = _.iteratee(iteratee,context);
_.each(obj,function(value,index,list){
computed = iteratee(value,index,list);
if(computed > lastComputed || computed === -Infinity && result === -Infinity){
result = value;
lastComputed = computed;}});}



return result;};



_.min = function(obj,iteratee,context){
var result=Infinity,lastComputed=Infinity,
value,computed;
if(iteratee == null && obj != null){
obj = obj.length === +obj.length?obj:_.values(obj);
for(var i=0,length=obj.length;i < length;i++) {
value = obj[i];
if(value < result){
result = value;}}}else 


{
iteratee = _.iteratee(iteratee,context);
_.each(obj,function(value,index,list){
computed = iteratee(value,index,list);
if(computed < lastComputed || computed === Infinity && result === Infinity){
result = value;
lastComputed = computed;}});}



return result;};




_.shuffle = function(obj){
var set=obj && obj.length === +obj.length?obj:_.values(obj);
var length=set.length;
var shuffled=Array(length);
for(var index=0,rand;index < length;index++) {
rand = _.random(0,index);
if(rand !== index)shuffled[index] = shuffled[rand];
shuffled[rand] = set[index];}

return shuffled;};





_.sample = function(obj,n,guard){
if(n == null || guard){
if(obj.length !== +obj.length)obj = _.values(obj);
return obj[_.random(obj.length - 1)];}

return _.shuffle(obj).slice(0,Math.max(0,n));};



_.sortBy = function(obj,iteratee,context){
iteratee = _.iteratee(iteratee,context);
return _.pluck(_.map(obj,function(value,index,list){
return {
value:value,
index:index,
criteria:iteratee(value,index,list)};}).

sort(function(left,right){
var a=left.criteria;
var b=right.criteria;
if(a !== b){
if(a > b || a === void 0)return 1;
if(a < b || b === void 0)return -1;}

return left.index - right.index;}),
'value');};



var group=function(behavior){
return function(obj,iteratee,context){
var result={};
iteratee = _.iteratee(iteratee,context);
_.each(obj,function(value,index){
var key=iteratee(value,index,obj);
behavior(result,value,key);});

return result;};};





_.groupBy = group(function(result,value,key){
if(_.has(result,key))result[key].push(value);else result[key] = [value];});




_.indexBy = group(function(result,value,key){
result[key] = value;});





_.countBy = group(function(result,value,key){
if(_.has(result,key))result[key]++;else result[key] = 1;});




_.sortedIndex = function(array,obj,iteratee,context){
iteratee = _.iteratee(iteratee,context,1);
var value=iteratee(obj);
var low=0,high=array.length;
while(low < high) {
var mid=low + high >>> 1;
if(iteratee(array[mid]) < value)low = mid + 1;else high = mid;}

return low;};



_.toArray = function(obj){
if(!obj)return [];
if(_.isArray(obj))return slice.call(obj);
if(obj.length === +obj.length)return _.map(obj,_.identity);
return _.values(obj);};



_.size = function(obj){
if(obj == null)return 0;
return obj.length === +obj.length?obj.length:_.keys(obj).length;};




_.partition = function(obj,predicate,context){
predicate = _.iteratee(predicate,context);
var pass=[],fail=[];
_.each(obj,function(value,key,obj){
(predicate(value,key,obj)?pass:fail).push(value);});

return [pass,fail];};








_.first = _.head = _.take = function(array,n,guard){
if(array == null)return void 0;
if(n == null || guard)return array[0];
if(n < 0)return [];
return slice.call(array,0,n);};






_.initial = function(array,n,guard){
return slice.call(array,0,Math.max(0,array.length - (n == null || guard?1:n)));};




_.last = function(array,n,guard){
if(array == null)return void 0;
if(n == null || guard)return array[array.length - 1];
return slice.call(array,Math.max(array.length - n,0));};






_.rest = _.tail = _.drop = function(array,n,guard){
return slice.call(array,n == null || guard?1:n);};



_.compact = function(array){
return _.filter(array,_.identity);};



var flatten=function(input,shallow,strict,output){
if(shallow && _.every(input,_.isArray)){
return concat.apply(output,input);}

for(var i=0,length=input.length;i < length;i++) {
var value=input[i];
if(!_.isArray(value) && !_.isArguments(value)){
if(!strict)output.push(value);}else 
if(shallow){
push.apply(output,value);}else 
{
flatten(value,shallow,strict,output);}}


return output;};



_.flatten = function(array,shallow){
return flatten(array,shallow,false,[]);};



_.without = function(array){
return _.difference(array,slice.call(arguments,1));};





_.uniq = _.unique = function(array,isSorted,iteratee,context){
if(array == null)return [];
if(!_.isBoolean(isSorted)){
context = iteratee;
iteratee = isSorted;
isSorted = false;}

if(iteratee != null)iteratee = _.iteratee(iteratee,context);
var result=[];
var seen=[];
for(var i=0,length=array.length;i < length;i++) {
var value=array[i];
if(isSorted){
if(!i || seen !== value)result.push(value);
seen = value;}else 
if(iteratee){
var computed=iteratee(value,i,array);
if(_.indexOf(seen,computed) < 0){
seen.push(computed);
result.push(value);}}else 

if(_.indexOf(result,value) < 0){
result.push(value);}}


return result;};




_.union = function(){
return _.uniq(flatten(arguments,true,true,[]));};




_.intersection = function(array){
if(array == null)return [];
var result=[];
var argsLength=arguments.length;
for(var i=0,length=array.length;i < length;i++) {
var item=array[i];
if(_.contains(result,item))continue;
for(var j=1;j < argsLength;j++) {
if(!_.contains(arguments[j],item))break;}

if(j === argsLength)result.push(item);}

return result;};




_.difference = function(array){
var rest=flatten(slice.call(arguments,1),true,true,[]);
return _.filter(array,function(value){
return !_.contains(rest,value);});};





_.zip = function(array){
if(array == null)return [];
var length=_.max(arguments,'length').length;
var results=Array(length);
for(var i=0;i < length;i++) {
results[i] = _.pluck(arguments,i);}

return results;};





_.object = function(list,values){
if(list == null)return {};
var result={};
for(var i=0,length=list.length;i < length;i++) {
if(values){
result[list[i]] = values[i];}else 
{
result[list[i][0]] = list[i][1];}}


return result;};






_.indexOf = function(array,item,isSorted){
if(array == null)return -1;
var i=0,length=array.length;
if(isSorted){
if(typeof isSorted == 'number'){
i = isSorted < 0?Math.max(0,length + isSorted):isSorted;}else 
{
i = _.sortedIndex(array,item);
return array[i] === item?i:-1;}}


for(;i < length;i++) if(array[i] === item)return i;
return -1;};


_.lastIndexOf = function(array,item,from){
if(array == null)return -1;
var idx=array.length;
if(typeof from == 'number'){
idx = from < 0?idx + from + 1:Math.min(idx,from + 1);}

while(--idx >= 0) if(array[idx] === item)return idx;
return -1;};





_.range = function(start,stop,step){
if(arguments.length <= 1){
stop = start || 0;
start = 0;}

step = step || 1;

var length=Math.max(Math.ceil((stop - start) / step),0);
var range=Array(length);

for(var idx=0;idx < length;idx++,start += step) {
range[idx] = start;}


return range;};






var Ctor=function(){};




_.bind = function(func,context){
var args,bound;
if(nativeBind && func.bind === nativeBind)return nativeBind.apply(func,slice.call(arguments,1));
if(!_.isFunction(func))throw new TypeError('Bind must be called on a function');
args = slice.call(arguments,2);
bound = function(){
if(!(this instanceof bound))return func.apply(context,args.concat(slice.call(arguments)));
Ctor.prototype = func.prototype;
var self=new Ctor();
Ctor.prototype = null;
var result=func.apply(self,args.concat(slice.call(arguments)));
if(_.isObject(result))return result;
return self;};

return bound;};





_.partial = function(func){
var boundArgs=slice.call(arguments,1);
return function(){
var position=0;
var args=boundArgs.slice();
for(var i=0,length=args.length;i < length;i++) {
if(args[i] === _)args[i] = arguments[position++];}

while(position < arguments.length) args.push(arguments[position++]);
return func.apply(this,args);};};






_.bindAll = function(obj){
var i,length=arguments.length,key;
if(length <= 1)throw new Error('bindAll must be passed function names');
for(i = 1;i < length;i++) {
key = arguments[i];
obj[key] = _.bind(obj[key],obj);}

return obj;};



_.memoize = function(func,hasher){
var memoize=function(key){
var cache=memoize.cache;
var address=hasher?hasher.apply(this,arguments):key;
if(!_.has(cache,address))cache[address] = func.apply(this,arguments);
return cache[address];};

memoize.cache = {};
return memoize;};




_.delay = function(func,wait){
var args=slice.call(arguments,2);
return setTimeout(function(){
return func.apply(null,args);},
wait);};




_.defer = function(func){
return _.delay.apply(_,[func,1].concat(slice.call(arguments,1)));};







_.throttle = function(func,wait,options){
var context,args,result;
var timeout=null;
var previous=0;
if(!options)options = {};
var later=function(){
previous = options.leading === false?0:_.now();
timeout = null;
result = func.apply(context,args);
if(!timeout)context = args = null;};

return function(){
var now=_.now();
if(!previous && options.leading === false)previous = now;
var remaining=wait - (now - previous);
context = this;
args = arguments;
if(remaining <= 0 || remaining > wait){
clearTimeout(timeout);
timeout = null;
previous = now;
result = func.apply(context,args);
if(!timeout)context = args = null;}else 
if(!timeout && options.trailing !== false){
timeout = setTimeout(later,remaining);}

return result;};};







_.debounce = function(func,wait,immediate){
var timeout,args,context,timestamp,result;

var later=function(){
var last=_.now() - timestamp;

if(last < wait && last > 0){
timeout = setTimeout(later,wait - last);}else 
{
timeout = null;
if(!immediate){
result = func.apply(context,args);
if(!timeout)context = args = null;}}};




return function(){
context = this;
args = arguments;
timestamp = _.now();
var callNow=immediate && !timeout;
if(!timeout)timeout = setTimeout(later,wait);
if(callNow){
result = func.apply(context,args);
context = args = null;}


return result;};};






_.wrap = function(func,wrapper){
return _.partial(wrapper,func);};



_.negate = function(predicate){
return function(){
return !predicate.apply(this,arguments);};};





_.compose = function(){
var args=arguments;
var start=args.length - 1;
return function(){
var i=start;
var result=args[start].apply(this,arguments);
while(i--) result = args[i].call(this,result);
return result;};};




_.after = function(times,func){
return function(){
if(--times < 1){
return func.apply(this,arguments);}};};





_.before = function(times,func){
var memo;
return function(){
if(--times > 0){
memo = func.apply(this,arguments);}else 
{
func = null;}

return memo;};};





_.once = _.partial(_.before,2);






_.keys = function(obj){
if(!_.isObject(obj))return [];
if(nativeKeys)return nativeKeys(obj);
var keys=[];
for(var key in obj) if(_.has(obj,key))keys.push(key);
return keys;};



_.values = function(obj){
var keys=_.keys(obj);
var length=keys.length;
var values=Array(length);
for(var i=0;i < length;i++) {
values[i] = obj[keys[i]];}

return values;};



_.pairs = function(obj){
var keys=_.keys(obj);
var length=keys.length;
var pairs=Array(length);
for(var i=0;i < length;i++) {
pairs[i] = [keys[i],obj[keys[i]]];}

return pairs;};



_.invert = function(obj){
var result={};
var keys=_.keys(obj);
for(var i=0,length=keys.length;i < length;i++) {
result[obj[keys[i]]] = keys[i];}

return result;};




_.functions = _.methods = function(obj){
var names=[];
for(var key in obj) {
if(_.isFunction(obj[key]))names.push(key);}

return names.sort();};



_.extend = function(obj){
if(!_.isObject(obj))return obj;
var source,prop;
for(var i=1,length=arguments.length;i < length;i++) {
source = arguments[i];
for(prop in source) {
if(hasOwnProperty.call(source,prop)){
obj[prop] = source[prop];}}}



return obj;};



_.pick = function(obj,iteratee,context){
var result={},key;
if(obj == null)return result;
if(_.isFunction(iteratee)){
iteratee = createCallback(iteratee,context);
for(key in obj) {
var value=obj[key];
if(iteratee(value,key,obj))result[key] = value;}}else 

{
var keys=concat.apply([],slice.call(arguments,1));
obj = new Object(obj);
for(var i=0,length=keys.length;i < length;i++) {
key = keys[i];
if(key in obj)result[key] = obj[key];}}


return result;};



_.omit = function(obj,iteratee,context){
if(_.isFunction(iteratee)){
iteratee = _.negate(iteratee);}else 
{
var keys=_.map(concat.apply([],slice.call(arguments,1)),String);
iteratee = function(value,key){
return !_.contains(keys,key);};}


return _.pick(obj,iteratee,context);};



_.defaults = function(obj){
if(!_.isObject(obj))return obj;
for(var i=1,length=arguments.length;i < length;i++) {
var source=arguments[i];
for(var prop in source) {
if(obj[prop] === void 0)obj[prop] = source[prop];}}


return obj;};



_.clone = function(obj){
if(!_.isObject(obj))return obj;
return _.isArray(obj)?obj.slice():_.extend({},obj);};





_.tap = function(obj,interceptor){
interceptor(obj);
return obj;};



var eq=function(a,b,aStack,bStack){


if(a === b)return a !== 0 || 1 / a === 1 / b;

if(a == null || b == null)return a === b;

if(a instanceof _)a = a._wrapped;
if(b instanceof _)b = b._wrapped;

var className=toString.call(a);
if(className !== toString.call(b))return false;
switch(className){

case '[object RegExp]':

case '[object String]':


return '' + a === '' + b;
case '[object Number]':


if(+a !== +a)return +b !== +b;

return +a === 0?1 / +a === 1 / b:+a === +b;
case '[object Date]':
case '[object Boolean]':



return +a === +b;}

if(typeof a != 'object' || typeof b != 'object')return false;


var length=aStack.length;
while(length--) {


if(aStack[length] === a)return bStack[length] === b;}



var aCtor=a.constructor,bCtor=b.constructor;
if(
aCtor !== bCtor && 

'constructor' in a && 'constructor' in b && 
!(_.isFunction(aCtor) && aCtor instanceof aCtor && 
_.isFunction(bCtor) && bCtor instanceof bCtor))
{
return false;}


aStack.push(a);
bStack.push(b);
var size,result;

if(className === '[object Array]'){

size = a.length;
result = size === b.length;
if(result){

while(size--) {
if(!(result = eq(a[size],b[size],aStack,bStack)))break;}}}else 


{

var keys=_.keys(a),key;
size = keys.length;

result = _.keys(b).length === size;
if(result){
while(size--) {

key = keys[size];
if(!(result = _.has(b,key) && eq(a[key],b[key],aStack,bStack)))break;}}}




aStack.pop();
bStack.pop();
return result;};



_.isEqual = function(a,b){
return eq(a,b,[],[]);};




_.isEmpty = function(obj){
if(obj == null)return true;
if(_.isArray(obj) || _.isString(obj) || _.isArguments(obj))return obj.length === 0;
for(var key in obj) if(_.has(obj,key))return false;
return true;};



_.isElement = function(obj){
return !!(obj && obj.nodeType === 1);};




_.isArray = nativeIsArray || function(obj){
return toString.call(obj) === '[object Array]';};



_.isObject = function(obj){
var type=typeof obj;
return type === 'function' || type === 'object' && !!obj;};



_.each(['Arguments','Function','String','Number','Date','RegExp'],function(name){
_['is' + name] = function(obj){
return toString.call(obj) === '[object ' + name + ']';};});





if(!_.isArguments(arguments)){
_.isArguments = function(obj){
return _.has(obj,'callee');};}




if(typeof /./ !== 'function'){
_.isFunction = function(obj){
return typeof obj == 'function' || false;};}




_.isFinite = function(obj){
return isFinite(obj) && !isNaN(parseFloat(obj));};



_.isNaN = function(obj){
return _.isNumber(obj) && obj !== +obj;};



_.isBoolean = function(obj){
return obj === true || obj === false || toString.call(obj) === '[object Boolean]';};



_.isNull = function(obj){
return obj === null;};



_.isUndefined = function(obj){
return obj === void 0;};




_.has = function(obj,key){
return obj != null && hasOwnProperty.call(obj,key);};







_.noConflict = function(){
root._ = previousUnderscore;
return this;};



_.identity = function(value){
return value;};


_.constant = function(value){
return function(){
return value;};};



_.noop = function(){};

_.property = function(key){
return function(obj){
return obj[key];};};




_.matches = function(attrs){
var pairs=_.pairs(attrs),length=pairs.length;
return function(obj){
if(obj == null)return !length;
obj = new Object(obj);
for(var i=0;i < length;i++) {
var pair=pairs[i],key=pair[0];
if(pair[1] !== obj[key] || !(key in obj))return false;}

return true;};};




_.times = function(n,iteratee,context){
var accum=Array(Math.max(0,n));
iteratee = createCallback(iteratee,context,1);
for(var i=0;i < n;i++) accum[i] = iteratee(i);
return accum;};



_.random = function(min,max){
if(max == null){
max = min;
min = 0;}

return min + Math.floor(Math.random() * (max - min + 1));};



_.now = Date.now || function(){
return new Date().getTime();};



var escapeMap={
'&':'&amp;',
'<':'&lt;',
'>':'&gt;',
'"':'&quot;',
'\'':'&#x27;',
'`':'&#x60;'};

var unescapeMap=_.invert(escapeMap);


var createEscaper=function(map){
var escaper=function(match){
return map[match];};


var source='(?:' + _.keys(map).join('|') + ')';
var testRegexp=RegExp(source);
var replaceRegexp=RegExp(source,'g');
return function(string){
string = string == null?'':'' + string;
return testRegexp.test(string)?string.replace(replaceRegexp,escaper):string;};};


_.escape = createEscaper(escapeMap);
_.unescape = createEscaper(unescapeMap);



_.result = function(object,property){
if(object == null)return void 0;
var value=object[property];
return _.isFunction(value)?object[property]():value;};




var idCounter=0;
_.uniqueId = function(prefix){
var id=++idCounter + '';
return prefix?prefix + id:id;};




_.templateSettings = {
evaluate:/<%([\s\S]+?)%>/g,
interpolate:/<%=([\s\S]+?)%>/g,
escape:/<%-([\s\S]+?)%>/g};





var noMatch=/(.)^/;



var escapes={
'\'':'\'',
'\\':'\\',
'\r':'r',
'\n':'n',
'\u2028':'u2028',
'\u2029':'u2029'};


var escaper=/\\|'|\r|\n|\u2028|\u2029/g;

var escapeChar=function(match){
return '\\' + escapes[match];};






_.template = function(text,settings,oldSettings){
if(!settings && oldSettings)settings = oldSettings;
settings = _.defaults({},settings,_.templateSettings);


var matcher=RegExp([
(settings.escape || noMatch).source,
(settings.interpolate || noMatch).source,
(settings.evaluate || noMatch).source].
join('|') + '|$','g');


var index=0;
var source='__p+=\'';
text.replace(matcher,function(match,escape,interpolate,evaluate,offset){
source += text.slice(index,offset).replace(escaper,escapeChar);
index = offset + match.length;

if(escape){
source += '\'+\n((__t=(' + escape + '))==null?\'\':_.escape(__t))+\n\'';}else 
if(interpolate){
source += '\'+\n((__t=(' + interpolate + '))==null?\'\':__t)+\n\'';}else 
if(evaluate){
source += '\';\n' + evaluate + '\n__p+=\'';}



return match;});

source += '\';\n';


if(!settings.variable)source = 'with(obj||{}){\n' + source + '}\n';

source = 'var __t,__p=\'\',__j=Array.prototype.join,' + 
'print=function(){__p+=__j.call(arguments,\'\');};\n' + 
source + 'return __p;\n';

try{
var render=new Function(settings.variable || 'obj','_',source);}
catch(e) {
e.source = source;
throw e;}


var template=function(data){
return render.call(this,data,_);};



var argument=settings.variable || 'obj';
template.source = 'function(' + argument + '){\n' + source + '}';

return template;};



_.chain = function(obj){
var instance=_(obj);
instance._chain = true;
return instance;};









var result=function(obj){
return this._chain?_(obj).chain():obj;};



_.mixin = function(obj){
_.each(_.functions(obj),function(name){
var func=_[name] = obj[name];
_.prototype[name] = function(){
var args=[this._wrapped];
push.apply(args,arguments);
return result.call(this,func.apply(_,args));};});};





_.mixin(_);


_.each(['pop','push','reverse','shift','sort','splice','unshift'],function(name){
var method=ArrayProto[name];
_.prototype[name] = function(){
var obj=this._wrapped;
method.apply(obj,arguments);
if((name === 'shift' || name === 'splice') && obj.length === 0)delete obj[0];
return result.call(this,obj);};});




_.each(['concat','join','slice'],function(name){
var method=ArrayProto[name];
_.prototype[name] = function(){
return result.call(this,method.apply(this._wrapped,arguments));};});




_.prototype.value = function(){
return this._wrapped;};









if(typeof define === 'function' && define.amd){
define('underscore',[],function(){
return _;});}}).


call(this);});
__d('SoftbinatorChat/RegisterForm',["react-native/Libraries/react-native/react-native","underscore/underscore","SoftbinatorChat/NiceButton","SoftbinatorChat/NiceInput"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');
var _=require('underscore/underscore');

var NiceButton=require('SoftbinatorChat/NiceButton');
var NiceInput=require('SoftbinatorChat/NiceInput');var 


AppRegistry=







React.AppRegistry;var TextInput=React.TextInput;var StyleSheet=React.StyleSheet;var TouchableHighlight=React.TouchableHighlight;var Image=React.Image;var Text=React.Text;var ScrollView=React.ScrollView;var View=React.View;

var RegisterForm=React.createClass({
getInitialState:function(){
return {
formNumber:0,
userName:'',
avatar:'',
avatarsList:[
'http://icons.iconarchive.com/icons/iconka/buddy/128/officer-man-icon.png',
'http://icons.iconarchive.com/icons/iconka/buddy/128/angel-icon.png',
'http://icons.iconarchive.com/icons/iconka/buddy/128/alien-female-icon.png',
'http://icons.iconarchive.com/icons/aha-soft/free-large-boss/512/Admin-icon.png',
'http://icons.iconarchive.com/icons/iconka/buddy/128/airhostess-woman-icon.png',
'http://icons.iconarchive.com/icons/iconka/buddy/128/nurse-girl-icon.png']};},




_onContinue:function(){
if(this.state.formNumber === 1){
this.props.onFormCompleted({
name:this.state.userName,
avatar:this.state.avatar});}else 

{
this.setState({formNumber:this.state.formNumber + 1});}},




_onAvatarPick:function(avatar){
this.setState({avatar:avatar});},


_renderNamePick:function(){var _this=this;
return (
React.createElement(ScrollView,{style:styles.container,contentContainerStyle:{alignItems:'center'}},
React.createElement(Text,{style:styles.textLabel},'Your name'),

React.createElement(NiceInput,{
withStyle:{marginLeft:50,marginRight:50,marginBottom:10},
onChangeText:function(text){return _this.setState({userName:text});},
value:this.state.userName,
placeholder:'Type your name'}),

React.createElement(NiceButton,{
disabled:this.state.userName.length === 0?true:false,
withStyle:{marginLeft:50,marginRight:50},
name:'Continue',onPress:this._onContinue})));},




_renderAvatarPick:function(){var _this2=this;
return (
React.createElement(ScrollView,{style:styles.container,contentContainerStyle:{alignItems:'center'}},
React.createElement(Text,{style:styles.textLabel},'Pick your avatar'),

_.map(this.state.avatarsList,function(avatar){
return (
React.createElement(TouchableHighlight,{style:avatar === _this2.state.avatar?styles.selected:{},
underlayColor:'#99d9f4',
onPress:function(){return _this2._onAvatarPick(avatar);}},
React.createElement(Image,{
style:styles.image,
source:{uri:avatar}})));}),




React.createElement(NiceButton,{
disabled:this.state.avatar.length === 0?true:false,
withStyle:{marginLeft:50,marginRight:50},
name:'Continue',onPress:this._onContinue})));},




render:function(){
if(this.state.formNumber === 0){
return this._renderNamePick();}else 
{
return this._renderAvatarPick();}}});




var styles=StyleSheet.create({
container:{
flex:1},

textLabel:{
color:'#48BBEC',
fontSize:17,
marginTop:60,
marginBottom:7,
fontWeight:'500'},

image:{
width:50,
height:50},

selected:{
borderWidth:2,
borderColor:'#99d9f4'}});



module.exports = RegisterForm;});
__d('SoftbinatorChat/NiceButton',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');var 


AppRegistry=



React.AppRegistry;var TouchableHighlight=React.TouchableHighlight;var StyleSheet=React.StyleSheet;var Text=React.Text;

var NiceButton=React.createClass({
_onPress:function(){
if(!this.props.disabled){
this.props.onPress();}},


render:function(){
return (
React.createElement(TouchableHighlight,{
style:[styles.button,this.props.withStyle,this.props.disabled?styles.disabled:{}],
onPress:this._onPress,
underlayColor:'#99d9f4'},
React.createElement(Text,{style:styles.buttonText},this.props.name)));}});





var styles=StyleSheet.create({
buttonText:{
fontSize:18,
color:'white',
alignSelf:'center'},

button:{
height:36,
backgroundColor:'#48BBEC',
borderColor:'#48BBEC',
borderWidth:1,
borderRadius:8,

alignSelf:'stretch',
justifyContent:'center'},

disabled:{
backgroundColor:'#93C0C9',
borderColor:'#93C0C9'}});



module.exports = NiceButton;});
__d('SoftbinatorChat/NiceInput',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';var _extends=Object.assign || function(target){for(var i=1;i < arguments.length;i++) {var source=arguments[i];for(var key in source) {if(Object.prototype.hasOwnProperty.call(source,key)){target[key] = source[key];}}}return target;};

var React=require('react-native/Libraries/react-native/react-native');var 


AppRegistry=


React.AppRegistry;var TextInput=React.TextInput;var StyleSheet=React.StyleSheet;

var NiceInput=React.createClass({
render:function(){
return (
React.createElement(TextInput,_extends({},
this.props,{
style:[styles.textInput,this.props.withStyle],
autoCapitalize:'sentences',
placeholderTextColor:'#D1D1D1',
autoFocus:true})));}});




var styles=StyleSheet.create({
textInput:{
color:'#000000',
fontSize:17,
height:36,
padding:7,
borderRadius:4,
borderColor:'#cccccc',
borderWidth:1}});




module.exports = NiceInput;});
__d('SoftbinatorChat/ChatScreen',["react-native/Libraries/react-native/react-native","underscore/underscore","react-timer-mixin/TimerMixin","SoftbinatorChat/MsgItem","SoftbinatorChat/NiceButton","SoftbinatorChat/NiceInput","SoftbinatorChat/Profile","firebase/lib/firebase-web","NativeModules"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');
var _=require('underscore/underscore');

var TimerMixin=require('react-timer-mixin/TimerMixin');

var MsgItem=require('SoftbinatorChat/MsgItem');
var NiceButton=require('SoftbinatorChat/NiceButton');
var NiceInput=require('SoftbinatorChat/NiceInput');
var Profile=require('SoftbinatorChat/Profile');

var Firebase=require('firebase/lib/firebase-web');var 


AppRegistry=






React.AppRegistry;var ListView=React.ListView;var StyleSheet=React.StyleSheet;var Text=React.Text;var TextInput=React.TextInput;var AlertIOS=React.AlertIOS;var View=React.View;

var ChatScreen=React.createClass({
mixins:[TimerMixin],

getInitialState:function(){
var ds=new ListView.DataSource({
rowHasChanged:function(r1,r2){return r1.objectId !== r2.objectId;}});

return {
messages:[],
dataSource:ds.cloneWithRows([]),
userInput:''};},



componentDidMount:function(){var _this=this;
this.firebaseRef = new Firebase('https://softbinator-chat.firebaseio.com/messages');

this.firebaseRef.limitToLast(20).once('value',function(snaps){
var initialArray=_.map(snaps.val(),function(data,key){
var newMessage=data;
newMessage.objectId = key;
return newMessage;});


_this.setState({
messages:initialArray,
dataSource:_this.state.dataSource.cloneWithRows(initialArray)},
function(){
_this.setTimeout(function(){return jumpToEnd(_this,React);},200);

var ignore=true;
_this.firebaseRef.limitToLast(1).on('child_added',function(snapshot){

if(ignore){ignore = false;return;}

var newMessage=snapshot.val();
newMessage.objectId = snapshot.key();


var newArray=React.addons.update(_this.state.messages,{$push:[newMessage]});

_this.setState({
messages:newArray,
dataSource:_this.state.dataSource.cloneWithRows(newArray)});

_this.setTimeout(function(){return jumpToEnd(_this,React);},200);});});});},





_showKeyboard:function(show){var _this2=this;
this.setState({keyboardUp:show});
this.setTimeout(function(){return jumpToEnd(_this2,React);},200);},


_onSendMsg:function(){
var message={
text:this.state.userInput,
user:this.props.user};

this.firebaseRef.push(message);

this.setState({userInput:''});},


_onMsgClick:function(message){
this.props.navigator.push({
title:'Profile',
component:Profile,
passProps:{
user:message.user}});},











_renderItem:function(item){
return React.createElement(MsgItem,{message:item,onMsgClick:this._onMsgClick,key:item.objectId,
isSent:this.props.user.objectId === item.user.objectId});},


_renderList:function(){
return (
React.createElement(ListView,{
ref:'listview',
dataSource:this.state.dataSource,
renderRow:this._renderItem}));},



_renderInput:function(){var _this3=this;
return (
React.createElement(View,{style:styles.sendMsgContainer},
React.createElement(NiceInput,{
withStyle:{flex:0.85,marginRight:5},
onChangeText:function(text){return _this3.setState({userInput:text});},
value:this.state.userInput,
placeholder:'Send a message',
onFocus:function(){return _this3._showKeyboard(true);},
onEndEditing:function(){return _this3._showKeyboard(false);}}),

React.createElement(NiceButton,{withStyle:{flex:0.15},name:'Send',onPress:this._onSendMsg})));},




render:function(){
var keyboardSpace=this.state.keyboardUp?263:5;
return (
React.createElement(View,{style:styles.fullContainer},
this._renderList(),
this._renderInput(),
React.createElement(View,{style:{height:keyboardSpace}})));}});






function jumpToEnd(component,React){
var RCTUIManager=require('NativeModules').UIManager;
component.requestAnimationFrame(
function(){
RCTUIManager.measure(
component.refs.listview.getScrollResponder().getInnerViewNode(),
function(x,y,width,inner_height){
RCTUIManager.measure(
React.findNodeHandle(component.refs.listview.getScrollResponder()),
function(x,y,width,outer_height){
if(inner_height > outer_height){
var scrollTop=inner_height - outer_height - 1;
component.refs.listview.getScrollResponder().scrollWithoutAnimationTo(scrollTop,0);
if(component.inner_height != inner_height){
component.inner_height = inner_height;
component.requestAnimationFrame(function(){jumpToEnd(component,React);});}}});});});}










var styles=StyleSheet.create({
fullContainer:{
flex:1},

sendMsgContainer:{
flexDirection:'row',
alignItems:'center',
marginRight:5,
marginLeft:5}});



module.exports = ChatScreen;});
__d('SoftbinatorChat/MsgItem',["react-native/Libraries/react-native/react-native"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');var 


AppRegistry=





React.AppRegistry;var TouchableHighlight=React.TouchableHighlight;var Image=React.Image;var StyleSheet=React.StyleSheet;var Text=React.Text;var View=React.View;

var MsgItem=React.createClass({
_renderMsgBody:function(){var _this=this;
return (
React.createElement(View,null,
React.createElement(Text,{style:this.props.isSent?styles.sentNameText:styles.receivedNameText},
this.props.message.user.name),


React.createElement(TouchableHighlight,{style:this.props.isSent?styles.msgSentBody:styles.msgReceivedBody,
underlayColor:'#E6E6E6',
onPress:function(){return _this.props.onMsgClick(_this.props.message);}},

React.createElement(Text,{style:this.props.isSent?styles.msgSentText:styles.msgReceivedText},
this.props.message.text))));},







_renderIcon:function(facebookId){
if(!this.props.isSent){
return (
React.createElement(Image,{
style:[styles.msgImage,styles.msgReceivedImage],
source:{uri:this.props.message.user.avatar}}));}},




render:function(){
return (
React.createElement(View,{style:this.props.isSent?styles.msgSentContainer:styles.msgReceivedContainer},
this._renderMsgBody(),
this._renderIcon()));}});





var styles=StyleSheet.create({
msgSentContainer:{
flex:1,
marginTop:5,
marginBottom:5,
marginLeft:50,
flexDirection:'column',
alignItems:'flex-end'},

msgReceivedContainer:{
flex:1,
marginTop:5,
marginBottom:5,
marginRight:50,
flexDirection:'column',
alignItems:'flex-start'},

msgSentBody:{
marginRight:20,
paddingTop:8,
paddingBottom:8,
paddingLeft:12,
paddingRight:12,
borderRadius:15,
backgroundColor:'#257DF7'},

msgReceivedBody:{
marginLeft:35,
paddingTop:8,
paddingBottom:8,
paddingLeft:12,
paddingRight:12,
borderRadius:15,
backgroundColor:'#D0DBD1'},

msgSentText:{
fontSize:14,
color:'#FFFFFF'},

msgReceivedText:{
fontSize:14,
color:'#000000'},

receivedNameText:{
left:44,
fontSize:8,
color:'#BDBDBD'},

sentNameText:{
left:8,
fontSize:8,
color:'#BDBDBD'},

msgImage:{
width:24,
height:24,
borderRadius:12},

msgErrorImage:{
position:'absolute',
top:2,
right:2,
width:16,
height:16,
borderRadius:6},

msgReceivedImage:{
position:'absolute',
top:12,
left:3}});



module.exports = MsgItem;});
__d('SoftbinatorChat/Profile',["react-native/Libraries/react-native/react-native","SoftbinatorChat/MsgItem","SoftbinatorChat/NiceButton","SoftbinatorChat/NiceInput","firebase/lib/firebase-web"],function(global, require, requireDynamic, requireLazy, module, exports) {  'use strict';

var React=require('react-native/Libraries/react-native/react-native');

var MsgItem=require('SoftbinatorChat/MsgItem');
var NiceButton=require('SoftbinatorChat/NiceButton');
var NiceInput=require('SoftbinatorChat/NiceInput');

var Firebase=require('firebase/lib/firebase-web');var 


AppRegistry=





React.AppRegistry;var StyleSheet=React.StyleSheet;var Text=React.Text;var Image=React.Image;var View=React.View;var ScrollView=React.ScrollView;

var Profile=React.createClass({
render:function(){
return (
React.createElement(ScrollView,{style:styles.container,contentContainerStyle:{alignItems:'center'}},
React.createElement(Image,{style:styles.msgImage,source:{uri:this.props.user.avatar}}),
React.createElement(Text,{style:styles.textLabel},this.props.user.name)));}});





var styles=StyleSheet.create({
container:{
flex:1},

msgImage:{
width:200,
height:200,
borderRadius:100},

textLabel:{
color:'#48BBEC',
fontSize:17,
marginTop:60,
marginBottom:7,
fontWeight:'500'}});



module.exports = Profile;});
__d('firebase/lib/firebase-web',[],function(global, require, requireDynamic, requireLazy, module, exports) {  (

function(){var h,aa=this;function n(a){return void 0 !== a;}function ba(){}function ca(a){a.ub = function(){return a.tf?a.tf:a.tf = new a();};}
function da(a){var b=typeof a;if("object" == b)if(a){if(a instanceof Array)return "array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]" == c)return "object";if("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice"))return "array";if("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call"))return "function";}else return "null";else 
if("function" == b && "undefined" == typeof a.call)return "object";return b;}function ea(a){return "array" == da(a);}function fa(a){var b=da(a);return "array" == b || "object" == b && "number" == typeof a.length;}function p(a){return "string" == typeof a;}function ga(a){return "number" == typeof a;}function ha(a){return "function" == da(a);}function ia(a){var b=typeof a;return "object" == b && null != a || "function" == b;}function ja(a,b,c){return a.call.apply(a.bind,arguments);}
function ka(a,b,c){if(!a)throw Error();if(2 < arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c);};}return function(){return a.apply(b,arguments);};}function q(a,b,c){q = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code")?ja:ka;return q.apply(null,arguments);}var la=Date.now || function(){return +new Date();};
function ma(a,b){function c(){}c.prototype = b.prototype;a.Zg = b.prototype;a.prototype = new c();a.prototype.constructor = a;a.Vg = function(a,c,f){for(var g=Array(arguments.length - 2),k=2;k < arguments.length;k++) g[k - 2] = arguments[k];return b.prototype[c].apply(a,g);};};function r(a,b){for(var c in a) b.call(void 0,a[c],c,a);}function na(a,b){var c={},d;for(d in a) c[d] = b.call(void 0,a[d],d,a);return c;}function oa(a,b){for(var c in a) if(!b.call(void 0,a[c],c,a))return !1;return !0;}function pa(a){var b=0,c;for(c in a) b++;return b;}function qa(a){for(var b in a) return b;}function ra(a){var b=[],c=0,d;for(d in a) b[c++] = a[d];return b;}function sa(a){var b=[],c=0,d;for(d in a) b[c++] = d;return b;}function ta(a,b){for(var c in a) if(a[c] == b)return !0;return !1;}
function ua(a,b,c){for(var d in a) if(b.call(c,a[d],d,a))return d;}function va(a,b){var c=ua(a,b,void 0);return c && a[c];}function wa(a){for(var b in a) return !1;return !0;}function xa(a){var b={},c;for(c in a) b[c] = a[c];return b;}var ya="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function za(a,b){for(var c,d,e=1;e < arguments.length;e++) {d = arguments[e];for(c in d) a[c] = d[c];for(var f=0;f < ya.length;f++) c = ya[f],Object.prototype.hasOwnProperty.call(d,c) && (a[c] = d[c]);}};function Aa(a){a = String(a);if(/^\s*$/.test(a)?0:/^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g,"@").replace(/"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g,"")))try{return eval("(" + a + ")");}catch(b) {}throw Error("Invalid JSON string: " + a);}function Ba(){this.Pd = void 0;}
function Ca(a,b,c){switch(typeof b){case "string":Da(b,c);break;case "number":c.push(isFinite(b) && !isNaN(b)?b:"null");break;case "boolean":c.push(b);break;case "undefined":c.push("null");break;case "object":if(null == b){c.push("null");break;}if(ea(b)){var d=b.length;c.push("[");for(var e="",f=0;f < d;f++) c.push(e),e = b[f],Ca(a,a.Pd?a.Pd.call(b,String(f),e):e,c),e = ",";c.push("]");break;}c.push("{");d = "";for(f in b) Object.prototype.hasOwnProperty.call(b,f) && (e = b[f],"function" != typeof e && (c.push(d),Da(f,c),
c.push(":"),Ca(a,a.Pd?a.Pd.call(b,f,e):e,c),d = ","));c.push("}");break;case "function":break;default:throw Error("Unknown type: " + typeof b);}}var Ea={"\"":"\\\"","\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\u000b":"\\u000b"},Fa=/\uffff/.test("￿")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g;
function Da(a,b){b.push("\"",a.replace(Fa,function(a){if(a in Ea)return Ea[a];var b=a.charCodeAt(0),e="\\u";16 > b?e += "000":256 > b?e += "00":4096 > b && (e += "0");return Ea[a] = e + b.toString(16);}),"\"");};function Ga(){return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ la()).toString(36);};var Ha;a: {var Ia=aa.navigator;if(Ia){var Ja=Ia.userAgent;if(Ja){Ha = Ja;break a;}}Ha = "";};function Ka(){this.Wa = -1;};function La(){this.Wa = -1;this.Wa = 64;this.R = [];this.le = [];this.Tf = [];this.Id = [];this.Id[0] = 128;for(var a=1;a < this.Wa;++a) this.Id[a] = 0;this.be = this.$b = 0;this.reset();}ma(La,Ka);La.prototype.reset = function(){this.R[0] = 1732584193;this.R[1] = 4023233417;this.R[2] = 2562383102;this.R[3] = 271733878;this.R[4] = 3285377520;this.be = this.$b = 0;};
function Ma(a,b,c){c || (c = 0);var d=a.Tf;if(p(b))for(var e=0;16 > e;e++) d[e] = b.charCodeAt(c) << 24 | b.charCodeAt(c + 1) << 16 | b.charCodeAt(c + 2) << 8 | b.charCodeAt(c + 3),c += 4;else for(e = 0;16 > e;e++) d[e] = b[c] << 24 | b[c + 1] << 16 | b[c + 2] << 8 | b[c + 3],c += 4;for(e = 16;80 > e;e++) {var f=d[e - 3] ^ d[e - 8] ^ d[e - 14] ^ d[e - 16];d[e] = (f << 1 | f >>> 31) & 4294967295;}b = a.R[0];c = a.R[1];for(var g=a.R[2],k=a.R[3],l=a.R[4],m,e=0;80 > e;e++) 40 > e?20 > e?(f = k ^ c & (g ^ k),m = 1518500249):(f = c ^ g ^ k,m = 1859775393):60 > e?(f = c & g | k & (c | g),m = 2400959708):(f = c ^ g ^ k,m = 3395469782),f = (b << 
5 | b >>> 27) + f + l + m + d[e] & 4294967295,l = k,k = g,g = (c << 30 | c >>> 2) & 4294967295,c = b,b = f;a.R[0] = a.R[0] + b & 4294967295;a.R[1] = a.R[1] + c & 4294967295;a.R[2] = a.R[2] + g & 4294967295;a.R[3] = a.R[3] + k & 4294967295;a.R[4] = a.R[4] + l & 4294967295;}
La.prototype.update = function(a,b){if(null != a){n(b) || (b = a.length);for(var c=b - this.Wa,d=0,e=this.le,f=this.$b;d < b;) {if(0 == f)for(;d <= c;) Ma(this,a,d),d += this.Wa;if(p(a))for(;d < b;) {if((e[f] = a.charCodeAt(d),++f,++d,f == this.Wa)){Ma(this,e);f = 0;break;}}else for(;d < b;) if((e[f] = a[d],++f,++d,f == this.Wa)){Ma(this,e);f = 0;break;}}this.$b = f;this.be += b;}};var t=Array.prototype,Na=t.indexOf?function(a,b,c){return t.indexOf.call(a,b,c);}:function(a,b,c){c = null == c?0:0 > c?Math.max(0,a.length + c):c;if(p(a))return p(b) && 1 == b.length?a.indexOf(b,c):-1;for(;c < a.length;c++) if(c in a && a[c] === b)return c;return -1;},Oa=t.forEach?function(a,b,c){t.forEach.call(a,b,c);}:function(a,b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f < d;f++) f in e && b.call(c,e[f],f,a);},Pa=t.filter?function(a,b,c){return t.filter.call(a,b,c);}:function(a,b,c){for(var d=a.length,e=[],f=0,g=p(a)?
a.split(""):a,k=0;k < d;k++) if(k in g){var l=g[k];b.call(c,l,k,a) && (e[f++] = l);}return e;},Qa=t.map?function(a,b,c){return t.map.call(a,b,c);}:function(a,b,c){for(var d=a.length,e=Array(d),f=p(a)?a.split(""):a,g=0;g < d;g++) g in f && (e[g] = b.call(c,f[g],g,a));return e;},Ra=t.reduce?function(a,b,c,d){for(var e=[],f=1,g=arguments.length;f < g;f++) e.push(arguments[f]);d && (e[0] = q(b,d));return t.reduce.apply(a,e);}:function(a,b,c,d){var e=c;Oa(a,function(c,g){e = b.call(d,e,c,g,a);});return e;},Sa=t.every?function(a,b,
c){return t.every.call(a,b,c);}:function(a,b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f < d;f++) if(f in e && !b.call(c,e[f],f,a))return !1;return !0;};function Ta(a,b){var c=Ua(a,b,void 0);return 0 > c?null:p(a)?a.charAt(c):a[c];}function Ua(a,b,c){for(var d=a.length,e=p(a)?a.split(""):a,f=0;f < d;f++) if(f in e && b.call(c,e[f],f,a))return f;return -1;}function Va(a,b){var c=Na(a,b);0 <= c && t.splice.call(a,c,1);}function Wa(a,b,c){return 2 >= arguments.length?t.slice.call(a,b):t.slice.call(a,b,c);}
function Xa(a,b){a.sort(b || Ya);}function Ya(a,b){return a > b?1:a < b?-1:0;};var Za=-1 != Ha.indexOf("Opera") || -1 != Ha.indexOf("OPR"),$a=-1 != Ha.indexOf("Trident") || -1 != Ha.indexOf("MSIE"),ab=-1 != Ha.indexOf("Gecko") && -1 == Ha.toLowerCase().indexOf("webkit") && !(-1 != Ha.indexOf("Trident") || -1 != Ha.indexOf("MSIE")),bb=-1 != Ha.toLowerCase().indexOf("webkit");
(function(){var a="",b;if(Za && aa.opera)return (a = aa.opera.version,ha(a)?a():a);ab?b = /rv\:([^\);]+)(\)|;)/:$a?b = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/:bb && (b = /WebKit\/(\S+)/);b && (a = (a = b.exec(Ha))?a[1]:"");return $a && (b = (b = aa.document)?b.documentMode:void 0,b > parseFloat(a))?String(b):a;})();var cb=null,db=null,eb=null;function fb(a,b){if(!fa(a))throw Error("encodeByteArray takes an array as a parameter");gb();for(var c=b?db:cb,d=[],e=0;e < a.length;e += 3) {var f=a[e],g=e + 1 < a.length,k=g?a[e + 1]:0,l=e + 2 < a.length,m=l?a[e + 2]:0,v=f >> 2,f=(f & 3) << 4 | k >> 4,k=(k & 15) << 2 | m >> 6,m=m & 63;l || (m = 64,g || (k = 64));d.push(c[v],c[f],c[k],c[m]);}return d.join("");}
function gb(){if(!cb){cb = {};db = {};eb = {};for(var a=0;65 > a;a++) cb[a] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a),db[a] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(a),eb[db[a]] = a,62 <= a && (eb["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(a)] = a);}};function u(a,b){return Object.prototype.hasOwnProperty.call(a,b);}function w(a,b){if(Object.prototype.hasOwnProperty.call(a,b))return a[b];}function hb(a,b){for(var c in a) Object.prototype.hasOwnProperty.call(a,c) && b(c,a[c]);}function ib(a){var b={};hb(a,function(a,d){b[a] = d;});return b;};function jb(a){var b=[];hb(a,function(a,d){ea(d)?Oa(d,function(d){b.push(encodeURIComponent(a) + "=" + encodeURIComponent(d));}):b.push(encodeURIComponent(a) + "=" + encodeURIComponent(d));});return b.length?"&" + b.join("&"):"";}function kb(a){var b={};a = a.replace(/^\?/,"").split("&");Oa(a,function(a){a && (a = a.split("="),b[a[0]] = a[1]);});return b;};function x(a,b,c,d){var e;d < b?e = "at least " + b:d > c && (e = 0 === c?"none":"no more than " + c);if(e)throw Error(a + " failed: Was called with " + d + (1 === d?" argument.":" arguments.") + " Expects " + e + ".");}function z(a,b,c){var d="";switch(b){case 1:d = c?"first":"First";break;case 2:d = c?"second":"Second";break;case 3:d = c?"third":"Third";break;case 4:d = c?"fourth":"Fourth";break;default:throw Error("errorPrefix called with argumentNumber > 4.  Need to update it?");}return a = a + " failed: " + (d + " argument ");}
function A(a,b,c,d){if((!d || n(c)) && !ha(c))throw Error(z(a,b,d) + "must be a valid function.");}function lb(a,b,c){if(n(c) && (!ia(c) || null === c))throw Error(z(a,b,!0) + "must be a valid context object.");};function mb(a){return "undefined" !== typeof JSON && n(JSON.parse)?JSON.parse(a):Aa(a);}function B(a){if("undefined" !== typeof JSON && n(JSON.stringify))a = JSON.stringify(a);else {var b=[];Ca(new Ba(),a,b);a = b.join("");}return a;};function nb(){this.Sd = C;}nb.prototype.j = function(a){return this.Sd.oa(a);};nb.prototype.toString = function(){return this.Sd.toString();};function ob(){}ob.prototype.pf = function(){return null;};ob.prototype.xe = function(){return null;};var pb=new ob();function qb(a,b,c){this.Qf = a;this.Ka = b;this.Hd = c;}qb.prototype.pf = function(a){var b=this.Ka.D;if(rb(b,a))return b.j().M(a);b = null != this.Hd?new sb(this.Hd,!0,!1):this.Ka.u();return this.Qf.Xa(a,b);};qb.prototype.xe = function(a,b,c){var d=null != this.Hd?this.Hd:tb(this.Ka);a = this.Qf.me(d,b,1,c,a);return 0 === a.length?null:a[0];};function ub(){this.tb = [];}function vb(a,b){for(var c=null,d=0;d < b.length;d++) {var e=b[d],f=e.Yb();null === c || f.Z(c.Yb()) || (a.tb.push(c),c = null);null === c && (c = new wb(f));c.add(e);}c && a.tb.push(c);}function xb(a,b,c){vb(a,c);yb(a,function(a){return a.Z(b);});}function zb(a,b,c){vb(a,c);yb(a,function(a){return a.contains(b) || b.contains(a);});}
function yb(a,b){for(var c=!0,d=0;d < a.tb.length;d++) {var e=a.tb[d];if(e)if((e = e.Yb(),b(e))){for(var e=a.tb[d],f=0;f < e.sd.length;f++) {var g=e.sd[f];if(null !== g){e.sd[f] = null;var k=g.Ub();Ab && Bb("event: " + g.toString());Cb(k);}}a.tb[d] = null;}else c = !1;}c && (a.tb = []);}function wb(a){this.qa = a;this.sd = [];}wb.prototype.add = function(a){this.sd.push(a);};wb.prototype.Yb = function(){return this.qa;};function D(a,b,c,d){this.type = a;this.Ja = b;this.Ya = c;this.Je = d;this.Nd = void 0;}function Db(a){return new D(Eb,a);}var Eb="value";function Fb(a,b,c,d){this.te = b;this.Wd = c;this.Nd = d;this.rd = a;}Fb.prototype.Yb = function(){var a=this.Wd.lc();return "value" === this.rd?a.path:a.parent().path;};Fb.prototype.ye = function(){return this.rd;};Fb.prototype.Ub = function(){return this.te.Ub(this);};Fb.prototype.toString = function(){return this.Yb().toString() + ":" + this.rd + ":" + B(this.Wd.lf());};function Gb(a,b,c){this.te = a;this.error = b;this.path = c;}Gb.prototype.Yb = function(){return this.path;};Gb.prototype.ye = function(){return "cancel";};
Gb.prototype.Ub = function(){return this.te.Ub(this);};Gb.prototype.toString = function(){return this.path.toString() + ":cancel";};function sb(a,b,c){this.B = a;this.$ = b;this.Tb = c;}function Hb(a){return a.$;}function rb(a,b){return a.$ && !a.Tb || a.B.Ha(b);}sb.prototype.j = function(){return this.B;};function Ib(a){this.dg = a;this.Ad = null;}Ib.prototype.get = function(){var a=this.dg.get(),b=xa(a);if(this.Ad)for(var c in this.Ad) b[c] -= this.Ad[c];this.Ad = a;return b;};function Jb(a,b){this.Mf = {};this.Yd = new Ib(a);this.ca = b;var c=1E4 + 2E4 * Math.random();setTimeout(q(this.Hf,this),Math.floor(c));}Jb.prototype.Hf = function(){var a=this.Yd.get(),b={},c=!1,d;for(d in a) 0 < a[d] && u(this.Mf,d) && (b[d] = a[d],c = !0);c && this.ca.Te(b);setTimeout(q(this.Hf,this),Math.floor(6E5 * Math.random()));};function Kb(){this.Dc = {};}function Lb(a,b,c){n(c) || (c = 1);u(a.Dc,b) || (a.Dc[b] = 0);a.Dc[b] += c;}Kb.prototype.get = function(){return xa(this.Dc);};var Mb={},Nb={};function Ob(a){a = a.toString();Mb[a] || (Mb[a] = new Kb());return Mb[a];}function Pb(a,b){var c=a.toString();Nb[c] || (Nb[c] = b());return Nb[c];};function E(a,b){this.name = a;this.S = b;}function Qb(a,b){return new E(a,b);};function Rb(a,b){return Sb(a.name,b.name);}function Tb(a,b){return Sb(a,b);};function Ub(a,b,c){this.type = Vb;this.source = a;this.path = b;this.Ia = c;}Ub.prototype.Wc = function(a){return this.path.e()?new Ub(this.source,F,this.Ia.M(a)):new Ub(this.source,G(this.path),this.Ia);};Ub.prototype.toString = function(){return "Operation(" + this.path + ": " + this.source.toString() + " overwrite: " + this.Ia.toString() + ")";};function Wb(a,b){this.type = Xb;this.source = Yb;this.path = a;this.Ve = b;}Wb.prototype.Wc = function(){return this.path.e()?this:new Wb(G(this.path),this.Ve);};Wb.prototype.toString = function(){return "Operation(" + this.path + ": " + this.source.toString() + " ack write revert=" + this.Ve + ")";};function Zb(a,b){this.type = $b;this.source = a;this.path = b;}Zb.prototype.Wc = function(){return this.path.e()?new Zb(this.source,F):new Zb(this.source,G(this.path));};Zb.prototype.toString = function(){return "Operation(" + this.path + ": " + this.source.toString() + " listen_complete)";};function ac(a,b){this.La = a;this.xa = b?b:bc;}h = ac.prototype;h.Na = function(a,b){return new ac(this.La,this.xa.Na(a,b,this.La).X(null,null,!1,null,null));};h.remove = function(a){return new ac(this.La,this.xa.remove(a,this.La).X(null,null,!1,null,null));};h.get = function(a){for(var b,c=this.xa;!c.e();) {b = this.La(a,c.key);if(0 === b)return c.value;0 > b?c = c.left:0 < b && (c = c.right);}return null;};
function cc(a,b){for(var c,d=a.xa,e=null;!d.e();) {c = a.La(b,d.key);if(0 === c){if(d.left.e())return e?e.key:null;for(d = d.left;!d.right.e();) d = d.right;return d.key;}0 > c?d = d.left:0 < c && (e = d,d = d.right);}throw Error("Attempted to find predecessor key for a nonexistent key.  What gives?");}h.e = function(){return this.xa.e();};h.count = function(){return this.xa.count();};h.Rc = function(){return this.xa.Rc();};h.ec = function(){return this.xa.ec();};h.ha = function(a){return this.xa.ha(a);};
h.Wb = function(a){return new dc(this.xa,null,this.La,!1,a);};h.Xb = function(a,b){return new dc(this.xa,a,this.La,!1,b);};h.Zb = function(a,b){return new dc(this.xa,a,this.La,!0,b);};h.rf = function(a){return new dc(this.xa,null,this.La,!0,a);};function dc(a,b,c,d,e){this.Rd = e || null;this.Ee = d;this.Pa = [];for(e = 1;!a.e();) if((e = b?c(a.key,b):1,d && (e *= -1),0 > e))a = this.Ee?a.left:a.right;else if(0 === e){this.Pa.push(a);break;}else this.Pa.push(a),a = this.Ee?a.right:a.left;}
function H(a){if(0 === a.Pa.length)return null;var b=a.Pa.pop(),c;c = a.Rd?a.Rd(b.key,b.value):{key:b.key,value:b.value};if(a.Ee)for(b = b.left;!b.e();) a.Pa.push(b),b = b.right;else for(b = b.right;!b.e();) a.Pa.push(b),b = b.left;return c;}function ec(a){if(0 === a.Pa.length)return null;var b;b = a.Pa;b = b[b.length - 1];return a.Rd?a.Rd(b.key,b.value):{key:b.key,value:b.value};}function fc(a,b,c,d,e){this.key = a;this.value = b;this.color = null != c?c:!0;this.left = null != d?d:bc;this.right = null != e?e:bc;}h = fc.prototype;
h.X = function(a,b,c,d,e){return new fc(null != a?a:this.key,null != b?b:this.value,null != c?c:this.color,null != d?d:this.left,null != e?e:this.right);};h.count = function(){return this.left.count() + 1 + this.right.count();};h.e = function(){return !1;};h.ha = function(a){return this.left.ha(a) || a(this.key,this.value) || this.right.ha(a);};function gc(a){return a.left.e()?a:gc(a.left);}h.Rc = function(){return gc(this).key;};h.ec = function(){return this.right.e()?this.key:this.right.ec();};
h.Na = function(a,b,c){var d,e;e = this;d = c(a,e.key);e = 0 > d?e.X(null,null,null,e.left.Na(a,b,c),null):0 === d?e.X(null,b,null,null,null):e.X(null,null,null,null,e.right.Na(a,b,c));return hc(e);};function ic(a){if(a.left.e())return bc;a.left.fa() || a.left.left.fa() || (a = jc(a));a = a.X(null,null,null,ic(a.left),null);return hc(a);}
h.remove = function(a,b){var c,d;c = this;if(0 > b(a,c.key))c.left.e() || c.left.fa() || c.left.left.fa() || (c = jc(c)),c = c.X(null,null,null,c.left.remove(a,b),null);else {c.left.fa() && (c = kc(c));c.right.e() || c.right.fa() || c.right.left.fa() || (c = lc(c),c.left.left.fa() && (c = kc(c),c = lc(c)));if(0 === b(a,c.key)){if(c.right.e())return bc;d = gc(c.right);c = c.X(d.key,d.value,null,null,ic(c.right));}c = c.X(null,null,null,null,c.right.remove(a,b));}return hc(c);};h.fa = function(){return this.color;};
function hc(a){a.right.fa() && !a.left.fa() && (a = mc(a));a.left.fa() && a.left.left.fa() && (a = kc(a));a.left.fa() && a.right.fa() && (a = lc(a));return a;}function jc(a){a = lc(a);a.right.left.fa() && (a = a.X(null,null,null,null,kc(a.right)),a = mc(a),a = lc(a));return a;}function mc(a){return a.right.X(null,null,a.color,a.X(null,null,!0,null,a.right.left),null);}function kc(a){return a.left.X(null,null,a.color,null,a.X(null,null,!0,a.left.right,null));}
function lc(a){return a.X(null,null,!a.color,a.left.X(null,null,!a.left.color,null,null),a.right.X(null,null,!a.right.color,null,null));}function nc(){}h = nc.prototype;h.X = function(){return this;};h.Na = function(a,b){return new fc(a,b,null);};h.remove = function(){return this;};h.count = function(){return 0;};h.e = function(){return !0;};h.ha = function(){return !1;};h.Rc = function(){return null;};h.ec = function(){return null;};h.fa = function(){return !1;};var bc=new nc();function oc(a,b){return a && "object" === typeof a?(J(".sv" in a,"Unexpected leaf node or priority contents"),b[a[".sv"]]):a;}function pc(a,b){var c=new qc();rc(a,new K(""),function(a,e){c.mc(a,sc(e,b));});return c;}function sc(a,b){var c=a.A().K(),c=oc(c,b),d;if(a.N()){var e=oc(a.Ba(),b);return e !== a.Ba() || c !== a.A().K()?new tc(e,L(c)):a;}d = a;c !== a.A().K() && (d = d.da(new tc(c)));a.U(M,function(a,c){var e=sc(c,b);e !== c && (d = d.Q(a,e));});return d;};function K(a,b){if(1 == arguments.length){this.n = a.split("/");for(var c=0,d=0;d < this.n.length;d++) 0 < this.n[d].length && (this.n[c] = this.n[d],c++);this.n.length = c;this.Y = 0;}else this.n = a,this.Y = b;}function N(a,b){var c=O(a);if(null === c)return b;if(c === O(b))return N(G(a),G(b));throw Error("INTERNAL ERROR: innerPath (" + b + ") is not within outerPath (" + a + ")");}function O(a){return a.Y >= a.n.length?null:a.n[a.Y];}function uc(a){return a.n.length - a.Y;}
function G(a){var b=a.Y;b < a.n.length && b++;return new K(a.n,b);}function vc(a){return a.Y < a.n.length?a.n[a.n.length - 1]:null;}h = K.prototype;h.toString = function(){for(var a="",b=this.Y;b < this.n.length;b++) "" !== this.n[b] && (a += "/" + this.n[b]);return a || "/";};h.slice = function(a){return this.n.slice(this.Y + (a || 0));};h.parent = function(){if(this.Y >= this.n.length)return null;for(var a=[],b=this.Y;b < this.n.length - 1;b++) a.push(this.n[b]);return new K(a,0);};
h.w = function(a){for(var b=[],c=this.Y;c < this.n.length;c++) b.push(this.n[c]);if(a instanceof K)for(c = a.Y;c < a.n.length;c++) b.push(a.n[c]);else for(a = a.split("/"),c = 0;c < a.length;c++) 0 < a[c].length && b.push(a[c]);return new K(b,0);};h.e = function(){return this.Y >= this.n.length;};h.Z = function(a){if(uc(this) !== uc(a))return !1;for(var b=this.Y,c=a.Y;b <= this.n.length;b++,c++) if(this.n[b] !== a.n[c])return !1;return !0;};
h.contains = function(a){var b=this.Y,c=a.Y;if(uc(this) > uc(a))return !1;for(;b < this.n.length;) {if(this.n[b] !== a.n[c])return !1;++b;++c;}return !0;};var F=new K("");function wc(a,b){this.Qa = a.slice();this.Ea = Math.max(1,this.Qa.length);this.kf = b;for(var c=0;c < this.Qa.length;c++) this.Ea += xc(this.Qa[c]);yc(this);}wc.prototype.push = function(a){0 < this.Qa.length && (this.Ea += 1);this.Qa.push(a);this.Ea += xc(a);yc(this);};wc.prototype.pop = function(){var a=this.Qa.pop();this.Ea -= xc(a);0 < this.Qa.length && --this.Ea;};
function yc(a){if(768 < a.Ea)throw Error(a.kf + "has a key path longer than 768 bytes (" + a.Ea + ").");if(32 < a.Qa.length)throw Error(a.kf + "path specified exceeds the maximum depth that can be written (32) or object contains a cycle " + zc(a));}function zc(a){return 0 == a.Qa.length?"":"in property '" + a.Qa.join(".") + "'";};function Ac(){this.wc = {};}Ac.prototype.set = function(a,b){null == b?delete this.wc[a]:this.wc[a] = b;};Ac.prototype.get = function(a){return u(this.wc,a)?this.wc[a]:null;};Ac.prototype.remove = function(a){delete this.wc[a];};Ac.prototype.uf = !0;function Bc(a){this.Ec = a;this.Md = "firebase:";}h = Bc.prototype;h.set = function(a,b){null == b?this.Ec.removeItem(this.Md + a):this.Ec.setItem(this.Md + a,B(b));};h.get = function(a){a = this.Ec.getItem(this.Md + a);return null == a?null:mb(a);};h.remove = function(a){this.Ec.removeItem(this.Md + a);};h.uf = !1;h.toString = function(){return this.Ec.toString();};function Cc(a){try{if("undefined" !== typeof window && "undefined" !== typeof window[a]){var b=window[a];b.setItem("firebase:sentinel","cache");b.removeItem("firebase:sentinel");return new Bc(b);}}catch(c) {}return new Ac();}var Dc=Cc("localStorage"),P=Cc("sessionStorage");function Ec(a,b,c,d,e){this.host = a.toLowerCase();this.domain = this.host.substr(this.host.indexOf(".") + 1);this.lb = b;this.Cb = c;this.Tg = d;this.Ld = e || "";this.Oa = Dc.get("host:" + a) || this.host;}function Fc(a,b){b !== a.Oa && (a.Oa = b,"s-" === a.Oa.substr(0,2) && Dc.set("host:" + a.host,a.Oa));}Ec.prototype.toString = function(){var a=(this.lb?"https://":"http://") + this.host;this.Ld && (a += "<" + this.Ld + ">");return a;};var Gc=(function(){var a=1;return function(){return a++;};})();function J(a,b){if(!a)throw Hc(b);}function Hc(a){return Error("Firebase (2.2.7) INTERNAL ASSERT FAILED: " + a);}
function Ic(a){try{var b;if("undefined" !== typeof atob)b = atob(a);else {gb();for(var c=eb,d=[],e=0;e < a.length;) {var f=c[a.charAt(e++)],g=e < a.length?c[a.charAt(e)]:0;++e;var k=e < a.length?c[a.charAt(e)]:64;++e;var l=e < a.length?c[a.charAt(e)]:64;++e;if(null == f || null == g || null == k || null == l)throw Error();d.push(f << 2 | g >> 4);64 != k && (d.push(g << 4 & 240 | k >> 2),64 != l && d.push(k << 6 & 192 | l));}if(8192 > d.length)b = String.fromCharCode.apply(null,d);else {a = "";for(c = 0;c < d.length;c += 8192) a += String.fromCharCode.apply(null,Wa(d,c,
c + 8192));b = a;}}return b;}catch(m) {Bb("base64Decode failed: ",m);}return null;}function Jc(a){var b=Kc(a);a = new La();a.update(b);var b=[],c=8 * a.be;56 > a.$b?a.update(a.Id,56 - a.$b):a.update(a.Id,a.Wa - (a.$b - 56));for(var d=a.Wa - 1;56 <= d;d--) a.le[d] = c & 255,c /= 256;Ma(a,a.le);for(d = c = 0;5 > d;d++) for(var e=24;0 <= e;e -= 8) b[c] = a.R[d] >> e & 255,++c;return fb(b);}
function Lc(a){for(var b="",c=0;c < arguments.length;c++) b = fa(arguments[c])?b + Lc.apply(null,arguments[c]):"object" === typeof arguments[c]?b + B(arguments[c]):b + arguments[c],b += " ";return b;}var Ab=null,Mc=!0;function Bb(a){!0 === Mc && (Mc = !1,null === Ab && !0 === P.get("logging_enabled") && Nc(!0));if(Ab){var b=Lc.apply(null,arguments);Ab(b);}}function Oc(a){return function(){Bb(a,arguments);};}
function Pc(a){if("undefined" !== typeof console){var b="FIREBASE INTERNAL ERROR: " + Lc.apply(null,arguments);"undefined" !== typeof console.error?console.error(b):console.log(b);}}function Qc(a){var b=Lc.apply(null,arguments);throw Error("FIREBASE FATAL ERROR: " + b);}function Q(a){if("undefined" !== typeof console){var b="FIREBASE WARNING: " + Lc.apply(null,arguments);"undefined" !== typeof console.warn?console.warn(b):console.log(b);}}
function Rc(a){var b="",c="",d="",e="",f=!0,g="https",k=443;if(p(a)){var l=a.indexOf("//");0 <= l && (g = a.substring(0,l - 1),a = a.substring(l + 2));l = a.indexOf("/");-1 === l && (l = a.length);b = a.substring(0,l);e = "";a = a.substring(l).split("/");for(l = 0;l < a.length;l++) if(0 < a[l].length){var m=a[l];try{m = decodeURIComponent(m.replace(/\+/g," "));}catch(v) {}e += "/" + m;}a = b.split(".");3 === a.length?(c = a[1],d = a[0].toLowerCase()):2 === a.length && (c = a[0]);l = b.indexOf(":");0 <= l && (f = "https" === g || "wss" === g,k = b.substring(l + 1),isFinite(k) && (
k = String(k)),k = p(k)?/^\s*-?0x/i.test(k)?parseInt(k,16):parseInt(k,10):NaN);}return {host:b,port:k,domain:c,Qg:d,lb:f,scheme:g,Zc:e};}function Sc(a){return ga(a) && (a != a || a == Number.POSITIVE_INFINITY || a == Number.NEGATIVE_INFINITY);}
function Tc(a){if("complete" === document.readyState)a();else {var b=!1,c=function(){document.body?b || (b = !0,a()):setTimeout(c,Math.floor(10));};document.addEventListener?(document.addEventListener("DOMContentLoaded",c,!1),window.addEventListener("load",c,!1)):document.attachEvent && (document.attachEvent("onreadystatechange",function(){"complete" === document.readyState && c();}),window.attachEvent("onload",c));}}
function Sb(a,b){if(a === b)return 0;if("[MIN_NAME]" === a || "[MAX_NAME]" === b)return -1;if("[MIN_NAME]" === b || "[MAX_NAME]" === a)return 1;var c=Uc(a),d=Uc(b);return null !== c?null !== d?0 == c - d?a.length - b.length:c - d:-1:null !== d?1:a < b?-1:1;}function Vc(a,b){if(b && a in b)return b[a];throw Error("Missing required key (" + a + ") in object: " + B(b));}
function Wc(a){if("object" !== typeof a || null === a)return B(a);var b=[],c;for(c in a) b.push(c);b.sort();c = "{";for(var d=0;d < b.length;d++) 0 !== d && (c += ","),c += B(b[d]),c += ":",c += Wc(a[b[d]]);return c + "}";}function Xc(a,b){if(a.length <= b)return [a];for(var c=[],d=0;d < a.length;d += b) d + b > a?c.push(a.substring(d,a.length)):c.push(a.substring(d,d + b));return c;}function Yc(a,b){if(ea(a))for(var c=0;c < a.length;++c) b(c,a[c]);else r(a,b);}
function Zc(a){J(!Sc(a),"Invalid JSON number");var b,c,d,e;0 === a?(d = c = 0,b = -Infinity === 1 / a?1:0):(b = 0 > a,a = Math.abs(a),a >= Math.pow(2,-1022)?(d = Math.min(Math.floor(Math.log(a) / Math.LN2),1023),c = d + 1023,d = Math.round(a * Math.pow(2,52 - d) - Math.pow(2,52))):(c = 0,d = Math.round(a / Math.pow(2,-1074))));e = [];for(a = 52;a;--a) e.push(d % 2?1:0),d = Math.floor(d / 2);for(a = 11;a;--a) e.push(c % 2?1:0),c = Math.floor(c / 2);e.push(b?1:0);e.reverse();b = e.join("");c = "";for(a = 0;64 > a;a += 8) d = parseInt(b.substr(a,8),2).toString(16),1 === d.length && (
d = "0" + d),c += d;return c.toLowerCase();}var $c=/^-?\d{1,10}$/;function Uc(a){return $c.test(a) && (a = Number(a),-2147483648 <= a && 2147483647 >= a)?a:null;}function Cb(a){try{a();}catch(b) {setTimeout(function(){Q("Exception was thrown by user callback.",b.stack || "");throw b;},Math.floor(0));}}function R(a,b){if(ha(a)){var c=Array.prototype.slice.call(arguments,1).slice();Cb(function(){a.apply(null,c);});}};function Kc(a){for(var b=[],c=0,d=0;d < a.length;d++) {var e=a.charCodeAt(d);55296 <= e && 56319 >= e && (e -= 55296,d++,J(d < a.length,"Surrogate pair missing trail surrogate."),e = 65536 + (e << 10) + (a.charCodeAt(d) - 56320));128 > e?b[c++] = e:(2048 > e?b[c++] = e >> 6 | 192:(65536 > e?b[c++] = e >> 12 | 224:(b[c++] = e >> 18 | 240,b[c++] = e >> 12 & 63 | 128),b[c++] = e >> 6 & 63 | 128),b[c++] = e & 63 | 128);}return b;}function xc(a){for(var b=0,c=0;c < a.length;c++) {var d=a.charCodeAt(c);128 > d?b++:2048 > d?b += 2:55296 <= d && 56319 >= d?(b += 4,c++):b += 3;}return b;};function ad(a){var b={},c={},d={},e="";try{var f=a.split("."),b=mb(Ic(f[0]) || ""),c=mb(Ic(f[1]) || ""),e=f[2],d=c.d || {};delete c.d;}catch(g) {}return {Wg:b,Ac:c,data:d,Ng:e};}function bd(a){a = ad(a).Ac;return "object" === typeof a && a.hasOwnProperty("iat")?w(a,"iat"):null;}function cd(a){a = ad(a);var b=a.Ac;return !!a.Ng && !!b && "object" === typeof b && b.hasOwnProperty("iat");};function dd(a){this.V = a;this.g = a.o.g;}function ed(a,b,c,d){var e=[],f=[];Oa(b,function(b){"child_changed" === b.type && a.g.xd(b.Je,b.Ja) && f.push(new D("child_moved",b.Ja,b.Ya));});fd(a,e,"child_removed",b,d,c);fd(a,e,"child_added",b,d,c);fd(a,e,"child_moved",f,d,c);fd(a,e,"child_changed",b,d,c);fd(a,e,Eb,b,d,c);return e;}function fd(a,b,c,d,e,f){d = Pa(d,function(a){return a.type === c;});Xa(d,q(a.eg,a));Oa(d,function(c){var d=gd(a,c,f);Oa(e,function(e){e.Jf(c.type) && b.push(e.createEvent(d,a.V));});});}
function gd(a,b,c){"value" !== b.type && "child_removed" !== b.type && (b.Nd = c.qf(b.Ya,b.Ja,a.g));return b;}dd.prototype.eg = function(a,b){if(null == a.Ya || null == b.Ya)throw Hc("Should only compare child_ events.");return this.g.compare(new E(a.Ya,a.Ja),new E(b.Ya,b.Ja));};function hd(){this.eb = {};}
function id(a,b){var c=b.type,d=b.Ya;J("child_added" == c || "child_changed" == c || "child_removed" == c,"Only child changes supported for tracking");J(".priority" !== d,"Only non-priority child changes can be tracked.");var e=w(a.eb,d);if(e){var f=e.type;if("child_added" == c && "child_removed" == f)a.eb[d] = new D("child_changed",b.Ja,d,e.Ja);else if("child_removed" == c && "child_added" == f)delete a.eb[d];else if("child_removed" == c && "child_changed" == f)a.eb[d] = new D("child_removed",e.Je,d);else if("child_changed" == c && 
"child_added" == f)a.eb[d] = new D("child_added",b.Ja,d);else if("child_changed" == c && "child_changed" == f)a.eb[d] = new D("child_changed",b.Ja,d,e.Je);else throw Hc("Illegal combination of changes: " + b + " occurred after " + e);}else a.eb[d] = b;};function jd(a,b,c){this.Pb = a;this.qb = b;this.sb = c || null;}h = jd.prototype;h.Jf = function(a){return "value" === a;};h.createEvent = function(a,b){var c=b.o.g;return new Fb("value",this,new S(a.Ja,b.lc(),c));};h.Ub = function(a){var b=this.sb;if("cancel" === a.ye()){J(this.qb,"Raising a cancel event on a listener with no cancel callback");var c=this.qb;return function(){c.call(b,a.error);};}var d=this.Pb;return function(){d.call(b,a.Wd);};};h.ff = function(a,b){return this.qb?new Gb(this,a,b):null;};
h.matches = function(a){return a instanceof jd?a.Pb && this.Pb?a.Pb === this.Pb && a.sb === this.sb:!0:!1;};h.sf = function(){return null !== this.Pb;};function kd(a,b,c){this.ga = a;this.qb = b;this.sb = c;}h = kd.prototype;h.Jf = function(a){a = "children_added" === a?"child_added":a;return ("children_removed" === a?"child_removed":a) in this.ga;};h.ff = function(a,b){return this.qb?new Gb(this,a,b):null;};
h.createEvent = function(a,b){J(null != a.Ya,"Child events should have a childName.");var c=b.lc().w(a.Ya);return new Fb(a.type,this,new S(a.Ja,c,b.o.g),a.Nd);};h.Ub = function(a){var b=this.sb;if("cancel" === a.ye()){J(this.qb,"Raising a cancel event on a listener with no cancel callback");var c=this.qb;return function(){c.call(b,a.error);};}var d=this.ga[a.rd];return function(){d.call(b,a.Wd,a.Nd);};};
h.matches = function(a){if(a instanceof kd){if(!this.ga || !a.ga)return !0;if(this.sb === a.sb){var b=pa(a.ga);if(b === pa(this.ga)){if(1 === b){var b=qa(a.ga),c=qa(this.ga);return c === b && (!a.ga[b] || !this.ga[c] || a.ga[b] === this.ga[c]);}return oa(this.ga,function(b,c){return a.ga[c] === b;});}}}return !1;};h.sf = function(){return null !== this.ga;};function ld(a){this.g = a;}h = ld.prototype;h.G = function(a,b,c,d,e){J(a.Ic(this.g),"A node must be indexed if only a child is updated");d = a.M(b);if(d.Z(c))return a;null != e && (c.e()?a.Ha(b)?id(e,new D("child_removed",d,b)):J(a.N(),"A child remove without an old child only makes sense on a leaf node"):d.e()?id(e,new D("child_added",c,b)):id(e,new D("child_changed",c,b,d)));return a.N() && c.e()?a:a.Q(b,c).mb(this.g);};
h.ta = function(a,b,c){null != c && (a.N() || a.U(M,function(a,e){b.Ha(a) || id(c,new D("child_removed",e,a));}),b.N() || b.U(M,function(b,e){if(a.Ha(b)){var f=a.M(b);f.Z(e) || id(c,new D("child_changed",e,b,f));}else id(c,new D("child_added",e,b));}));return b.mb(this.g);};h.da = function(a,b){return a.e()?C:a.da(b);};h.Ga = function(){return !1;};h.Vb = function(){return this;};function md(a){this.Ae = new ld(a.g);this.g = a.g;var b;a.la?(b = nd(a),b = a.g.Oc(od(a),b)):b = a.g.Sc();this.dd = b;a.na?(b = pd(a),a = a.g.Oc(qd(a),b)):a = a.g.Pc();this.Fc = a;}h = md.prototype;h.matches = function(a){return 0 >= this.g.compare(this.dd,a) && 0 >= this.g.compare(a,this.Fc);};h.G = function(a,b,c,d,e){this.matches(new E(b,c)) || (c = C);return this.Ae.G(a,b,c,d,e);};h.ta = function(a,b,c){b.N() && (b = C);var d=b.mb(this.g),d=d.da(C),e=this;b.U(M,function(a,b){e.matches(new E(a,b)) || (d = d.Q(a,C));});return this.Ae.ta(a,d,c);};
h.da = function(a){return a;};h.Ga = function(){return !0;};h.Vb = function(){return this.Ae;};function rd(a){this.ra = new md(a);this.g = a.g;J(a.ia,"Only valid if limit has been set");this.ja = a.ja;this.Jb = !sd(a);}h = rd.prototype;h.G = function(a,b,c,d,e){this.ra.matches(new E(b,c)) || (c = C);return a.M(b).Z(c)?a:a.Db() < this.ja?this.ra.Vb().G(a,b,c,d,e):td(this,a,b,c,d,e);};
h.ta = function(a,b,c){var d;if(b.N() || b.e())d = C.mb(this.g);else if(2 * this.ja < b.Db() && b.Ic(this.g)){d = C.mb(this.g);b = this.Jb?b.Zb(this.ra.Fc,this.g):b.Xb(this.ra.dd,this.g);for(var e=0;0 < b.Pa.length && e < this.ja;) {var f=H(b),g;if(g = this.Jb?0 >= this.g.compare(this.ra.dd,f):0 >= this.g.compare(f,this.ra.Fc))d = d.Q(f.name,f.S),e++;else break;}}else {d = b.mb(this.g);d = d.da(C);var k,l,m;if(this.Jb){b = d.rf(this.g);k = this.ra.Fc;l = this.ra.dd;var v=ud(this.g);m = function(a,b){return v(b,a);};}else b = d.Wb(this.g),k = this.ra.dd,
l = this.ra.Fc,m = ud(this.g);for(var e=0,y=!1;0 < b.Pa.length;) f = H(b),!y && 0 >= m(k,f) && (y = !0),(g = y && e < this.ja && 0 >= m(f,l))?e++:d = d.Q(f.name,C);}return this.ra.Vb().ta(a,d,c);};h.da = function(a){return a;};h.Ga = function(){return !0;};h.Vb = function(){return this.ra.Vb();};
function td(a,b,c,d,e,f){var g;if(a.Jb){var k=ud(a.g);g = function(a,b){return k(b,a);};}else g = ud(a.g);J(b.Db() == a.ja,"");var l=new E(c,d),m=a.Jb?wd(b,a.g):xd(b,a.g),v=a.ra.matches(l);if(b.Ha(c)){var y=b.M(c),m=e.xe(a.g,m,a.Jb);null != m && m.name == c && (m = e.xe(a.g,m,a.Jb));e = null == m?1:g(m,l);if(v && !d.e() && 0 <= e)return (null != f && id(f,new D("child_changed",d,c,y)),b.Q(c,d));null != f && id(f,new D("child_removed",y,c));b = b.Q(c,C);return null != m && a.ra.matches(m)?(null != f && id(f,new D("child_added",m.S,m.name)),b.Q(m.name,
m.S)):b;}return d.e()?b:v && 0 <= g(m,l)?(null != f && (id(f,new D("child_removed",m.S,m.name)),id(f,new D("child_added",d,c))),b.Q(c,d).Q(m.name,C)):b;};function yd(a,b){this.he = a;this.cg = b;}function zd(a){this.I = a;}
zd.prototype.bb = function(a,b,c,d){var e=new hd(),f;if(b.type === Vb)b.source.ve?c = Ad(this,a,b.path,b.Ia,c,d,e):(J(b.source.of,"Unknown source."),f = b.source.af,c = Bd(this,a,b.path,b.Ia,c,d,f,e));else if(b.type === Cd)b.source.ve?c = Dd(this,a,b.path,b.children,c,d,e):(J(b.source.of,"Unknown source."),f = b.source.af,c = Ed(this,a,b.path,b.children,c,d,f,e));else if(b.type === Xb)if(b.Ve)if((f = b.path,null != c.sc(f)))c = a;else {b = new qb(c,a,d);d = a.D.j();if(f.e() || ".priority" === O(f))Hb(a.u())?b = c.ua(tb(a)):(b = a.u().j(),
J(b instanceof T,"serverChildren would be complete if leaf node"),b = c.xc(b)),b = this.I.ta(d,b,e);else {f = O(f);var g=c.Xa(f,a.u());null == g && rb(a.u(),f) && (g = d.M(f));b = null != g?this.I.G(d,f,g,b,e):a.D.j().Ha(f)?this.I.G(d,f,C,b,e):d;b.e() && Hb(a.u()) && (d = c.ua(tb(a)),d.N() && (b = this.I.ta(b,d,e)));}d = Hb(a.u()) || null != c.sc(F);c = Fd(a,b,d,this.I.Ga());}else c = Gd(this,a,b.path,c,d,e);else if(b.type === $b)d = b.path,b = a.u(),f = b.j(),g = b.$ || d.e(),c = Hd(this,new Id(a.D,new sb(f,g,b.Tb)),d,c,pb,e);else throw Hc("Unknown operation type: " + 
b.type);e = ra(e.eb);d = c;b = d.D;b.$ && (f = b.j().N() || b.j().e(),g = Jd(a),(0 < e.length || !a.D.$ || f && !b.j().Z(g) || !b.j().A().Z(g.A())) && e.push(Db(Jd(d))));return new yd(c,e);};
function Hd(a,b,c,d,e,f){var g=b.D;if(null != d.sc(c))return b;var k;if(c.e())J(Hb(b.u()),"If change path is empty, we must have complete server data"),b.u().Tb?(e = tb(b),d = d.xc(e instanceof T?e:C)):d = d.ua(tb(b)),f = a.I.ta(b.D.j(),d,f);else {var l=O(c);if(".priority" == l)J(1 == uc(c),"Can't have a priority with additional path components"),f = g.j(),k = b.u().j(),d = d.hd(c,f,k),f = null != d?a.I.da(f,d):g.j();else {var m=G(c);rb(g,l)?(k = b.u().j(),d = d.hd(c,g.j(),k),d = null != d?g.j().M(l).G(m,d):g.j().M(l)):d = d.Xa(l,b.u());
f = null != d?a.I.G(g.j(),l,d,e,f):g.j();}}return Fd(b,f,g.$ || c.e(),a.I.Ga());}function Bd(a,b,c,d,e,f,g,k){var l=b.u();g = g?a.I:a.I.Vb();if(c.e())d = g.ta(l.j(),d,null);else if(g.Ga() && !l.Tb)d = l.j().G(c,d),d = g.ta(l.j(),d,null);else {var m=O(c);if((c.e()?!l.$ || l.Tb:!rb(l,O(c))) && 1 < uc(c))return b;d = l.j().M(m).G(G(c),d);d = ".priority" == m?g.da(l.j(),d):g.G(l.j(),m,d,pb,null);}l = l.$ || c.e();b = new Id(b.D,new sb(d,l,g.Ga()));return Hd(a,b,c,e,new qb(e,b,f),k);}
function Ad(a,b,c,d,e,f,g){var k=b.D;e = new qb(e,b,f);if(c.e())g = a.I.ta(b.D.j(),d,g),a = Fd(b,g,!0,a.I.Ga());else if((f = O(c),".priority" === f))g = a.I.da(b.D.j(),d),a = Fd(b,g,k.$,k.Tb);else {var l=G(c);c = k.j().M(f);if(!l.e()){var m=e.pf(f);d = null != m?".priority" === vc(l) && m.oa(l.parent()).e()?m:m.G(l,d):C;}c.Z(d)?a = b:(g = a.I.G(k.j(),f,d,e,g),a = Fd(b,g,k.$,a.I.Ga()));}return a;}
function Dd(a,b,c,d,e,f,g){var k=b;Kd(d,function(d,m){var v=c.w(d);rb(b.D,O(v)) && (k = Ad(a,k,v,m,e,f,g));});Kd(d,function(d,m){var v=c.w(d);rb(b.D,O(v)) || (k = Ad(a,k,v,m,e,f,g));});return k;}function Ld(a,b){Kd(b,function(b,d){a = a.G(b,d);});return a;}
function Ed(a,b,c,d,e,f,g,k){if(b.u().j().e() && !Hb(b.u()))return b;var l=b;c = c.e()?d:Md(Nd,c,d);var m=b.u().j();c.children.ha(function(c,d){if(m.Ha(c)){var I=b.u().j().M(c),I=Ld(I,d);l = Bd(a,l,new K(c),I,e,f,g,k);}});c.children.ha(function(c,d){var I=!Hb(b.u()) && null == d.value;m.Ha(c) || I || (I = b.u().j().M(c),I = Ld(I,d),l = Bd(a,l,new K(c),I,e,f,g,k));});return l;}
function Gd(a,b,c,d,e,f){if(null != d.sc(c))return b;var g=new qb(d,b,e),k=e = b.D.j();if(Hb(b.u())){if(c.e())e = d.ua(tb(b)),k = a.I.ta(b.D.j(),e,f);else if(".priority" === O(c)){var l=d.Xa(O(c),b.u());null == l || e.e() || e.A().Z(l) || (k = a.I.da(e,l));}else l = O(c),e = d.Xa(l,b.u()),null != e && (k = a.I.G(b.D.j(),l,e,g,f));e = !0;}else if(b.D.$ || c.e())k = e,e = b.D.j(),e.N() || e.U(M,function(c){var e=d.Xa(c,b.u());null != e && (k = a.I.G(k,c,e,g,f));}),e = b.D.$;else {l = O(c);if(1 == uc(c) || rb(b.D,l))c = d.Xa(l,b.u()),null != c && (k = a.I.G(e,l,c,
g,f));e = !1;}return Fd(b,k,e,a.I.Ga());};function Od(){}var Pd={};function ud(a){return q(a.compare,a);}Od.prototype.xd = function(a,b){return 0 !== this.compare(new E("[MIN_NAME]",a),new E("[MIN_NAME]",b));};Od.prototype.Sc = function(){return Qd;};function Rd(a){this.bc = a;}ma(Rd,Od);h = Rd.prototype;h.Hc = function(a){return !a.M(this.bc).e();};h.compare = function(a,b){var c=a.S.M(this.bc),d=b.S.M(this.bc),c=c.Cc(d);return 0 === c?Sb(a.name,b.name):c;};h.Oc = function(a,b){var c=L(a),c=C.Q(this.bc,c);return new E(b,c);};
h.Pc = function(){var a=C.Q(this.bc,Sd);return new E("[MAX_NAME]",a);};h.toString = function(){return this.bc;};function Td(){}ma(Td,Od);h = Td.prototype;h.compare = function(a,b){var c=a.S.A(),d=b.S.A(),c=c.Cc(d);return 0 === c?Sb(a.name,b.name):c;};h.Hc = function(a){return !a.A().e();};h.xd = function(a,b){return !a.A().Z(b.A());};h.Sc = function(){return Qd;};h.Pc = function(){return new E("[MAX_NAME]",new tc("[PRIORITY-POST]",Sd));};h.Oc = function(a,b){var c=L(a);return new E(b,new tc("[PRIORITY-POST]",c));};
h.toString = function(){return ".priority";};var M=new Td();function Ud(){}ma(Ud,Od);h = Ud.prototype;h.compare = function(a,b){return Sb(a.name,b.name);};h.Hc = function(){throw Hc("KeyIndex.isDefinedOn not expected to be called.");};h.xd = function(){return !1;};h.Sc = function(){return Qd;};h.Pc = function(){return new E("[MAX_NAME]",C);};h.Oc = function(a){J(p(a),"KeyIndex indexValue must always be a string.");return new E(a,C);};h.toString = function(){return ".key";};var Vd=new Ud();function Wd(){}ma(Wd,Od);h = Wd.prototype;
h.compare = function(a,b){var c=a.S.Cc(b.S);return 0 === c?Sb(a.name,b.name):c;};h.Hc = function(){return !0;};h.xd = function(a,b){return !a.Z(b);};h.Sc = function(){return Qd;};h.Pc = function(){return Xd;};h.Oc = function(a,b){var c=L(a);return new E(b,c);};h.toString = function(){return ".value";};var Yd=new Wd();function Zd(){this.Rb = this.na = this.Lb = this.la = this.ia = !1;this.ja = 0;this.Nb = "";this.dc = null;this.xb = "";this.ac = null;this.vb = "";this.g = M;}var $d=new Zd();function sd(a){return "" === a.Nb?a.la:"l" === a.Nb;}function od(a){J(a.la,"Only valid if start has been set");return a.dc;}function nd(a){J(a.la,"Only valid if start has been set");return a.Lb?a.xb:"[MIN_NAME]";}function qd(a){J(a.na,"Only valid if end has been set");return a.ac;}
function pd(a){J(a.na,"Only valid if end has been set");return a.Rb?a.vb:"[MAX_NAME]";}function ae(a){var b=new Zd();b.ia = a.ia;b.ja = a.ja;b.la = a.la;b.dc = a.dc;b.Lb = a.Lb;b.xb = a.xb;b.na = a.na;b.ac = a.ac;b.Rb = a.Rb;b.vb = a.vb;b.g = a.g;return b;}h = Zd.prototype;h.Ge = function(a){var b=ae(this);b.ia = !0;b.ja = a;b.Nb = "";return b;};h.He = function(a){var b=ae(this);b.ia = !0;b.ja = a;b.Nb = "l";return b;};h.Ie = function(a){var b=ae(this);b.ia = !0;b.ja = a;b.Nb = "r";return b;};
h.Xd = function(a,b){var c=ae(this);c.la = !0;n(a) || (a = null);c.dc = a;null != b?(c.Lb = !0,c.xb = b):(c.Lb = !1,c.xb = "");return c;};h.qd = function(a,b){var c=ae(this);c.na = !0;n(a) || (a = null);c.ac = a;n(b)?(c.Rb = !0,c.vb = b):(c.Yg = !1,c.vb = "");return c;};function be(a,b){var c=ae(a);c.g = b;return c;}function ce(a){var b={};a.la && (b.sp = a.dc,a.Lb && (b.sn = a.xb));a.na && (b.ep = a.ac,a.Rb && (b.en = a.vb));if(a.ia){b.l = a.ja;var c=a.Nb;"" === c && (c = sd(a)?"l":"r");b.vf = c;}a.g !== M && (b.i = a.g.toString());return b;}
function de(a){return !(a.la || a.na || a.ia);}function ee(a){var b={};if(de(a) && a.g == M)return b;var c;a.g === M?c = "$priority":a.g === Yd?c = "$value":a.g === Vd?c = "$key":(J(a.g instanceof Rd,"Unrecognized index type!"),c = a.g.toString());b.orderBy = B(c);a.la && (b.startAt = B(a.dc),a.Lb && (b.startAt += "," + B(a.xb)));a.na && (b.endAt = B(a.ac),a.Rb && (b.endAt += "," + B(a.vb)));a.ia && (sd(a)?b.limitToFirst = a.ja:b.limitToLast = a.ja);return b;}h.toString = function(){return B(ce(this));};function fe(a,b){this.yd = a;this.cc = b;}fe.prototype.get = function(a){var b=w(this.yd,a);if(!b)throw Error("No index defined for " + a);return b === Pd?null:b;};function ge(a,b,c){var d=na(a.yd,function(d,f){var g=w(a.cc,f);J(g,"Missing index implementation for " + f);if(d === Pd){if(g.Hc(b.S)){for(var k=[],l=c.Wb(Qb),m=H(l);m;) m.name != b.name && k.push(m),m = H(l);k.push(b);return he(k,ud(g));}return Pd;}g = c.get(b.name);k = d;g && (k = k.remove(new E(b.name,g)));return k.Na(b,b.S);});return new fe(d,a.cc);}
function ie(a,b,c){var d=na(a.yd,function(a){if(a === Pd)return a;var d=c.get(b.name);return d?a.remove(new E(b.name,d)):a;});return new fe(d,a.cc);}var je=new fe({".priority":Pd},{".priority":M});function tc(a,b){this.C = a;J(n(this.C) && null !== this.C,"LeafNode shouldn't be created with null/undefined value.");this.ba = b || C;ke(this.ba);this.Bb = null;}h = tc.prototype;h.N = function(){return !0;};h.A = function(){return this.ba;};h.da = function(a){return new tc(this.C,a);};h.M = function(a){return ".priority" === a?this.ba:C;};h.oa = function(a){return a.e()?this:".priority" === O(a)?this.ba:C;};h.Ha = function(){return !1;};h.qf = function(){return null;};
h.Q = function(a,b){return ".priority" === a?this.da(b):b.e() && ".priority" !== a?this:C.Q(a,b).da(this.ba);};h.G = function(a,b){var c=O(a);if(null === c)return b;if(b.e() && ".priority" !== c)return this;J(".priority" !== c || 1 === uc(a),".priority must be the last token in a path");return this.Q(c,C.G(G(a),b));};h.e = function(){return !1;};h.Db = function(){return 0;};h.K = function(a){return a && !this.A().e()?{".value":this.Ba(),".priority":this.A().K()}:this.Ba();};
h.hash = function(){if(null === this.Bb){var a="";this.ba.e() || (a += "priority:" + le(this.ba.K()) + ":");var b=typeof this.C,a=a + (b + ":"),a="number" === b?a + Zc(this.C):a + this.C;this.Bb = Jc(a);}return this.Bb;};h.Ba = function(){return this.C;};h.Cc = function(a){if(a === C)return 1;if(a instanceof T)return -1;J(a.N(),"Unknown node type");var b=typeof a.C,c=typeof this.C,d=Na(me,b),e=Na(me,c);J(0 <= d,"Unknown leaf type: " + b);J(0 <= e,"Unknown leaf type: " + c);return d === e?"object" === c?0:this.C < a.C?-1:this.C === a.C?0:1:e - d;};
var me=["object","boolean","number","string"];tc.prototype.mb = function(){return this;};tc.prototype.Ic = function(){return !0;};tc.prototype.Z = function(a){return a === this?!0:a.N()?this.C === a.C && this.ba.Z(a.ba):!1;};tc.prototype.toString = function(){return B(this.K(!0));};function T(a,b,c){this.m = a;(this.ba = b) && ke(this.ba);a.e() && J(!this.ba || this.ba.e(),"An empty node cannot have a priority");this.wb = c;this.Bb = null;}h = T.prototype;h.N = function(){return !1;};h.A = function(){return this.ba || C;};h.da = function(a){return this.m.e()?this:new T(this.m,a,this.wb);};h.M = function(a){if(".priority" === a)return this.A();a = this.m.get(a);return null === a?C:a;};h.oa = function(a){var b=O(a);return null === b?this:this.M(b).oa(G(a));};h.Ha = function(a){return null !== this.m.get(a);};
h.Q = function(a,b){J(b,"We should always be passing snapshot nodes");if(".priority" === a)return this.da(b);var c=new E(a,b),d,e;b.e()?(d = this.m.remove(a),c = ie(this.wb,c,this.m)):(d = this.m.Na(a,b),c = ge(this.wb,c,this.m));e = d.e()?C:this.ba;return new T(d,e,c);};h.G = function(a,b){var c=O(a);if(null === c)return b;J(".priority" !== O(a) || 1 === uc(a),".priority must be the last token in a path");var d=this.M(c).G(G(a),b);return this.Q(c,d);};h.e = function(){return this.m.e();};h.Db = function(){return this.m.count();};
var ne=/^(0|[1-9]\d*)$/;h = T.prototype;h.K = function(a){if(this.e())return null;var b={},c=0,d=0,e=!0;this.U(M,function(f,g){b[f] = g.K(a);c++;e && ne.test(f)?d = Math.max(d,Number(f)):e = !1;});if(!a && e && d < 2 * c){var f=[],g;for(g in b) f[g] = b[g];return f;}a && !this.A().e() && (b[".priority"] = this.A().K());return b;};h.hash = function(){if(null === this.Bb){var a="";this.A().e() || (a += "priority:" + le(this.A().K()) + ":");this.U(M,function(b,c){var d=c.hash();"" !== d && (a += ":" + b + ":" + d);});this.Bb = "" === a?"":Jc(a);}return this.Bb;};
h.qf = function(a,b,c){return (c = oe(this,c))?(a = cc(c,new E(a,b)))?a.name:null:cc(this.m,a);};function wd(a,b){var c;c = (c = oe(a,b))?(c = c.Rc()) && c.name:a.m.Rc();return c?new E(c,a.m.get(c)):null;}function xd(a,b){var c;c = (c = oe(a,b))?(c = c.ec()) && c.name:a.m.ec();return c?new E(c,a.m.get(c)):null;}h.U = function(a,b){var c=oe(this,a);return c?c.ha(function(a){return b(a.name,a.S);}):this.m.ha(b);};h.Wb = function(a){return this.Xb(a.Sc(),a);};
h.Xb = function(a,b){var c=oe(this,b);if(c)return c.Xb(a,function(a){return a;});for(var c=this.m.Xb(a.name,Qb),d=ec(c);null != d && 0 > b.compare(d,a);) H(c),d = ec(c);return c;};h.rf = function(a){return this.Zb(a.Pc(),a);};h.Zb = function(a,b){var c=oe(this,b);if(c)return c.Zb(a,function(a){return a;});for(var c=this.m.Zb(a.name,Qb),d=ec(c);null != d && 0 < b.compare(d,a);) H(c),d = ec(c);return c;};h.Cc = function(a){return this.e()?a.e()?0:-1:a.N() || a.e()?1:a === Sd?-1:0;};
h.mb = function(a){if(a === Vd || ta(this.wb.cc,a.toString()))return this;var b=this.wb,c=this.m;J(a !== Vd,"KeyIndex always exists and isn't meant to be added to the IndexMap.");for(var d=[],e=!1,c=c.Wb(Qb),f=H(c);f;) e = e || a.Hc(f.S),d.push(f),f = H(c);d = e?he(d,ud(a)):Pd;e = a.toString();c = xa(b.cc);c[e] = a;a = xa(b.yd);a[e] = d;return new T(this.m,this.ba,new fe(a,c));};h.Ic = function(a){return a === Vd || ta(this.wb.cc,a.toString());};
h.Z = function(a){if(a === this)return !0;if(a.N())return !1;if(this.A().Z(a.A()) && this.m.count() === a.m.count()){var b=this.Wb(M);a = a.Wb(M);for(var c=H(b),d=H(a);c && d;) {if(c.name !== d.name || !c.S.Z(d.S))return !1;c = H(b);d = H(a);}return null === c && null === d;}return !1;};function oe(a,b){return b === Vd?null:a.wb.get(b.toString());}h.toString = function(){return B(this.K(!0));};function L(a,b){if(null === a)return C;var c=null;"object" === typeof a && ".priority" in a?c = a[".priority"]:"undefined" !== typeof b && (c = b);J(null === c || "string" === typeof c || "number" === typeof c || "object" === typeof c && ".sv" in c,"Invalid priority type found: " + typeof c);"object" === typeof a && ".value" in a && null !== a[".value"] && (a = a[".value"]);if("object" !== typeof a || ".sv" in a)return new tc(a,L(c));if(a instanceof Array){var d=C,e=a;r(e,function(a,b){if(u(e,b) && "." !== b.substring(0,1)){var c=L(a);if(c.N() || !c.e())d = 
d.Q(b,c);}});return d.da(L(c));}var f=[],g=!1,k=a;hb(k,function(a){if("string" !== typeof a || "." !== a.substring(0,1)){var b=L(k[a]);b.e() || (g = g || !b.A().e(),f.push(new E(a,b)));}});if(0 == f.length)return C;var l=he(f,Rb,function(a){return a.name;},Tb);if(g){var m=he(f,ud(M));return new T(l,L(c),new fe({".priority":m},{".priority":M}));}return new T(l,L(c),je);}var pe=Math.log(2);
function qe(a){this.count = parseInt(Math.log(a + 1) / pe,10);this.hf = this.count - 1;this.bg = a + 1 & parseInt(Array(this.count + 1).join("1"),2);}function re(a){var b=!(a.bg & 1 << a.hf);a.hf--;return b;}
function he(a,b,c,d){function e(b,d){var f=d - b;if(0 == f)return null;if(1 == f){var m=a[b],v=c?c(m):m;return new fc(v,m.S,!1,null,null);}var m=parseInt(f / 2,10) + b,f=e(b,m),y=e(m + 1,d),m=a[m],v=c?c(m):m;return new fc(v,m.S,!1,f,y);}a.sort(b);var f=(function(b){function d(b,g){var k=v - b,y=v;v -= b;var y=e(k + 1,y),k=a[k],I=c?c(k):k,y=new fc(I,k.S,g,null,y);f?f.left = y:m = y;f = y;}for(var f=null,m=null,v=a.length,y=0;y < b.count;++y) {var I=re(b),vd=Math.pow(2,b.count - (y + 1));I?d(vd,!1):(d(vd,!1),d(vd,!0));}return m;})(new qe(a.length));
return null !== f?new ac(d || b,f):new ac(d || b);}function le(a){return "number" === typeof a?"number:" + Zc(a):"string:" + a;}function ke(a){if(a.N()){var b=a.K();J("string" === typeof b || "number" === typeof b || "object" === typeof b && u(b,".sv"),"Priority must be a string or number.");}else J(a === Sd || a.e(),"priority of unexpected type.");J(a === Sd || a.A().e(),"Priority nodes can't have a priority of their own.");}var C=new T(new ac(Tb),null,je);function se(){T.call(this,new ac(Tb),C,je);}ma(se,T);h = se.prototype;
h.Cc = function(a){return a === this?0:1;};h.Z = function(a){return a === this;};h.A = function(){return this;};h.M = function(){return C;};h.e = function(){return !1;};var Sd=new se(),Qd=new E("[MIN_NAME]",C),Xd=new E("[MAX_NAME]",Sd);function Id(a,b){this.D = a;this.Ud = b;}function Fd(a,b,c,d){return new Id(new sb(b,c,d),a.Ud);}function Jd(a){return a.D.$?a.D.j():null;}Id.prototype.u = function(){return this.Ud;};function tb(a){return a.Ud.$?a.Ud.j():null;};function te(a,b){this.V = a;var c=a.o,d=new ld(c.g),c=de(c)?new ld(c.g):c.ia?new rd(c):new md(c);this.Gf = new zd(c);var e=b.u(),f=b.D,g=d.ta(C,e.j(),null),k=c.ta(C,f.j(),null);this.Ka = new Id(new sb(k,f.$,c.Ga()),new sb(g,e.$,d.Ga()));this.Za = [];this.ig = new dd(a);}function ue(a){return a.V;}h = te.prototype;h.u = function(){return this.Ka.u().j();};h.hb = function(a){var b=tb(this.Ka);return b && (de(this.V.o) || !a.e() && !b.M(O(a)).e())?b.oa(a):null;};h.e = function(){return 0 === this.Za.length;};h.Ob = function(a){this.Za.push(a);};
h.kb = function(a,b){var c=[];if(b){J(null == a,"A cancel should cancel all event registrations.");var d=this.V.path;Oa(this.Za,function(a){(a = a.ff(b,d)) && c.push(a);});}if(a){for(var e=[],f=0;f < this.Za.length;++f) {var g=this.Za[f];if(!g.matches(a))e.push(g);else if(a.sf()){e = e.concat(this.Za.slice(f + 1));break;}}this.Za = e;}else this.Za = [];return c;};
h.bb = function(a,b,c){a.type === Cd && null !== a.source.Ib && (J(tb(this.Ka),"We should always have a full cache before handling merges"),J(Jd(this.Ka),"Missing event cache, even though we have a server cache"));var d=this.Ka;a = this.Gf.bb(d,a,b,c);b = this.Gf;c = a.he;J(c.D.j().Ic(b.I.g),"Event snap not indexed");J(c.u().j().Ic(b.I.g),"Server snap not indexed");J(Hb(a.he.u()) || !Hb(d.u()),"Once a server snap is complete, it should never go back");this.Ka = a.he;return ve(this,a.cg,a.he.D.j(),null);};
function we(a,b){var c=a.Ka.D,d=[];c.j().N() || c.j().U(M,function(a,b){d.push(new D("child_added",b,a));});c.$ && d.push(Db(c.j()));return ve(a,d,c.j(),b);}function ve(a,b,c,d){return ed(a.ig,b,c,d?[d]:a.Za);};function xe(a,b,c){this.type = Cd;this.source = a;this.path = b;this.children = c;}xe.prototype.Wc = function(a){if(this.path.e())return (a = this.children.subtree(new K(a)),a.e()?null:a.value?new Ub(this.source,F,a.value):new xe(this.source,F,a));J(O(this.path) === a,"Can't get a merge for a child not on the path of the operation");return new xe(this.source,G(this.path),this.children);};xe.prototype.toString = function(){return "Operation(" + this.path + ": " + this.source.toString() + " merge: " + this.children.toString() + ")";};var Vb=0,Cd=1,Xb=2,$b=3;function ye(a,b,c,d){this.ve = a;this.of = b;this.Ib = c;this.af = d;J(!d || b,"Tagged queries must be from server.");}var Yb=new ye(!0,!1,null,!1),ze=new ye(!1,!0,null,!1);ye.prototype.toString = function(){return this.ve?"user":this.af?"server(queryID=" + this.Ib + ")":"server";};function Ae(a,b){this.f = Oc("p:rest:");this.H = a;this.Gb = b;this.Fa = null;this.aa = {};}function Be(a,b){if(n(b))return "tag$" + b;var c=a.o;J(de(c) && c.g == M,"should have a tag if it's not a default query.");return a.path.toString();}h = Ae.prototype;
h.xf = function(a,b,c,d){var e=a.path.toString();this.f("Listen called for " + e + " " + a.wa());var f=Be(a,c),g={};this.aa[f] = g;a = ee(a.o);var k=this;Ce(this,e + ".json",a,function(a,b){var v=b;404 === a && (a = v = null);null === a && k.Gb(e,v,!1,c);w(k.aa,f) === g && d(a?401 == a?"permission_denied":"rest_error:" + a:"ok",null);});};h.Of = function(a,b){var c=Be(a,b);delete this.aa[c];};h.P = function(a,b){this.Fa = a;var c=ad(a),d=c.data,c=c.Ac && c.Ac.exp;b && b("ok",{auth:d,expires:c});};h.ee = function(a){this.Fa = null;a("ok",null);};
h.Le = function(){};h.Bf = function(){};h.Gd = function(){};h.put = function(){};h.yf = function(){};h.Te = function(){};
function Ce(a,b,c,d){c = c || {};c.format = "export";a.Fa && (c.auth = a.Fa);var e=(a.H.lb?"https://":"http://") + a.H.host + b + "?" + jb(c);a.f("Sending REST request for " + e);var f=new XMLHttpRequest();f.onreadystatechange = function(){if(d && 4 === f.readyState){a.f("REST Response for " + e + " received. status:",f.status,"response:",f.responseText);var b=null;if(200 <= f.status && 300 > f.status){try{b = mb(f.responseText);}catch(c) {Q("Failed to parse JSON response for " + e + ": " + f.responseText);}d(null,b);}else 401 !== f.status && 404 !== 
f.status && Q("Got unsuccessful REST response for " + e + " Status: " + f.status),d(f.status);d = null;}};f.open("GET",e,!0);f.send();};function De(a,b){this.value = a;this.children = b || Ee;}var Ee=new ac(function(a,b){return a === b?0:a < b?-1:1;});function Fe(a){var b=Nd;r(a,function(a,d){b = b.set(new K(d),a);});return b;}h = De.prototype;h.e = function(){return null === this.value && this.children.e();};function Ge(a,b,c){if(null != a.value && c(a.value))return {path:F,value:a.value};if(b.e())return null;var d=O(b);a = a.children.get(d);return null !== a?(b = Ge(a,G(b),c),null != b?{path:new K(d).w(b.path),value:b.value}:null):null;}
function He(a,b){return Ge(a,b,function(){return !0;});}h.subtree = function(a){if(a.e())return this;var b=this.children.get(O(a));return null !== b?b.subtree(G(a)):Nd;};h.set = function(a,b){if(a.e())return new De(b,this.children);var c=O(a),d=(this.children.get(c) || Nd).set(G(a),b),c=this.children.Na(c,d);return new De(this.value,c);};
h.remove = function(a){if(a.e())return this.children.e()?Nd:new De(null,this.children);var b=O(a),c=this.children.get(b);return c?(a = c.remove(G(a)),b = a.e()?this.children.remove(b):this.children.Na(b,a),null === this.value && b.e()?Nd:new De(this.value,b)):this;};h.get = function(a){if(a.e())return this.value;var b=this.children.get(O(a));return b?b.get(G(a)):null;};
function Md(a,b,c){if(b.e())return c;var d=O(b);b = Md(a.children.get(d) || Nd,G(b),c);d = b.e()?a.children.remove(d):a.children.Na(d,b);return new De(a.value,d);}function Ie(a,b){return Je(a,F,b);}function Je(a,b,c){var d={};a.children.ha(function(a,f){d[a] = Je(f,b.w(a),c);});return c(b,a.value,d);}function Ke(a,b,c){return Le(a,b,F,c);}function Le(a,b,c,d){var e=a.value?d(c,a.value):!1;if(e)return e;if(b.e())return null;e = O(b);return (a = a.children.get(e))?Le(a,G(b),c.w(e),d):null;}
function Me(a,b,c){var d=F;if(!b.e()){var e=!0;a.value && (e = c(d,a.value));!0 === e && (e = O(b),(a = a.children.get(e)) && Ne(a,G(b),d.w(e),c));}}function Ne(a,b,c,d){if(b.e())return a;a.value && d(c,a.value);var e=O(b);return (a = a.children.get(e))?Ne(a,G(b),c.w(e),d):Nd;}function Kd(a,b){Oe(a,F,b);}function Oe(a,b,c){a.children.ha(function(a,e){Oe(e,b.w(a),c);});a.value && c(b,a.value);}function Pe(a,b){a.children.ha(function(a,d){d.value && b(a,d.value);});}var Nd=new De(null);
De.prototype.toString = function(){var a={};Kd(this,function(b,c){a[b.toString()] = c.toString();});return B(a);};function Qe(a){this.W = a;}var Re=new Qe(new De(null));function Se(a,b,c){if(b.e())return new Qe(new De(c));var d=He(a.W,b);if(null != d){var e=d.path,d=d.value;b = N(e,b);d = d.G(b,c);return new Qe(a.W.set(e,d));}a = Md(a.W,b,new De(c));return new Qe(a);}function Te(a,b,c){var d=a;hb(c,function(a,c){d = Se(d,b.w(a),c);});return d;}Qe.prototype.Od = function(a){if(a.e())return Re;a = Md(this.W,a,Nd);return new Qe(a);};function Ue(a,b){var c=He(a.W,b);return null != c?a.W.get(c.path).oa(N(c.path,b)):null;}
function Ve(a){var b=[],c=a.W.value;null != c?c.N() || c.U(M,function(a,c){b.push(new E(a,c));}):a.W.children.ha(function(a,c){null != c.value && b.push(new E(a,c.value));});return b;}function We(a,b){if(b.e())return a;var c=Ue(a,b);return null != c?new Qe(new De(c)):new Qe(a.W.subtree(b));}Qe.prototype.e = function(){return this.W.e();};Qe.prototype.apply = function(a){return Xe(F,this.W,a);};
function Xe(a,b,c){if(null != b.value)return c.G(a,b.value);var d=null;b.children.ha(function(b,f){".priority" === b?(J(null !== f.value,"Priority writes must always be leaf nodes"),d = f.value):c = Xe(a.w(b),f,c);});c.oa(a).e() || null === d || (c = c.G(a.w(".priority"),d));return c;};function Ye(){this.T = Re;this.za = [];this.Lc = -1;}h = Ye.prototype;
h.Od = function(a){var b=Ua(this.za,function(b){return b.ie === a;});J(0 <= b,"removeWrite called with nonexistent writeId.");var c=this.za[b];this.za.splice(b,1);for(var d=c.visible,e=!1,f=this.za.length - 1;d && 0 <= f;) {var g=this.za[f];g.visible && (f >= b && Ze(g,c.path)?d = !1:c.path.contains(g.path) && (e = !0));f--;}if(d){if(e)this.T = $e(this.za,af,F),this.Lc = 0 < this.za.length?this.za[this.za.length - 1].ie:-1;else if(c.Ia)this.T = this.T.Od(c.path);else {var k=this;r(c.children,function(a,b){k.T = k.T.Od(c.path.w(b));});}return c.path;}return null;};
h.ua = function(a,b,c,d){if(c || d){var e=We(this.T,a);return !d && e.e()?b:d || null != b || null != Ue(e,F)?(e = $e(this.za,function(b){return (b.visible || d) && (!c || !(0 <= Na(c,b.ie))) && (b.path.contains(a) || a.contains(b.path));},a),b = b || C,e.apply(b)):null;}e = Ue(this.T,a);if(null != e)return e;e = We(this.T,a);return e.e()?b:null != b || null != Ue(e,F)?(b = b || C,e.apply(b)):null;};
h.xc = function(a,b){var c=C,d=Ue(this.T,a);if(d)d.N() || d.U(M,function(a,b){c = c.Q(a,b);});else if(b){var e=We(this.T,a);b.U(M,function(a,b){var d=We(e,new K(a)).apply(b);c = c.Q(a,d);});Oa(Ve(e),function(a){c = c.Q(a.name,a.S);});}else e = We(this.T,a),Oa(Ve(e),function(a){c = c.Q(a.name,a.S);});return c;};h.hd = function(a,b,c,d){J(c || d,"Either existingEventSnap or existingServerSnap must exist");a = a.w(b);if(null != Ue(this.T,a))return null;a = We(this.T,a);return a.e()?d.oa(b):a.apply(d.oa(b));};
h.Xa = function(a,b,c){a = a.w(b);var d=Ue(this.T,a);return null != d?d:rb(c,b)?We(this.T,a).apply(c.j().M(b)):null;};h.sc = function(a){return Ue(this.T,a);};h.me = function(a,b,c,d,e,f){var g;a = We(this.T,a);g = Ue(a,F);if(null == g)if(null != b)g = a.apply(b);else return [];g = g.mb(f);if(g.e() || g.N())return [];b = [];a = ud(f);e = e?g.Zb(c,f):g.Xb(c,f);for(f = H(e);f && b.length < d;) 0 !== a(f,c) && b.push(f),f = H(e);return b;};
function Ze(a,b){return a.Ia?a.path.contains(b):!!ua(a.children,function(c,d){return a.path.w(d).contains(b);});}function af(a){return a.visible;}
function $e(a,b,c){for(var d=Re,e=0;e < a.length;++e) {var f=a[e];if(b(f)){var g=f.path;if(f.Ia)c.contains(g)?(g = N(c,g),d = Se(d,g,f.Ia)):g.contains(c) && (g = N(g,c),d = Se(d,F,f.Ia.oa(g)));else if(f.children)if(c.contains(g))g = N(c,g),d = Te(d,g,f.children);else {if(g.contains(c))if((g = N(g,c),g.e()))d = Te(d,F,f.children);else if(f = w(f.children,O(g)))f = f.oa(G(g)),d = Se(d,F,f);}else throw Hc("WriteRecord should have .snap or .children");}}return d;}function bf(a,b){this.Mb = a;this.W = b;}h = bf.prototype;
h.ua = function(a,b,c){return this.W.ua(this.Mb,a,b,c);};h.xc = function(a){return this.W.xc(this.Mb,a);};h.hd = function(a,b,c){return this.W.hd(this.Mb,a,b,c);};h.sc = function(a){return this.W.sc(this.Mb.w(a));};h.me = function(a,b,c,d,e){return this.W.me(this.Mb,a,b,c,d,e);};h.Xa = function(a,b){return this.W.Xa(this.Mb,a,b);};h.w = function(a){return new bf(this.Mb.w(a),this.W);};function cf(){this.ya = {};}h = cf.prototype;h.e = function(){return wa(this.ya);};h.bb = function(a,b,c){var d=a.source.Ib;if(null !== d)return (d = w(this.ya,d),J(null != d,"SyncTree gave us an op for an invalid query."),d.bb(a,b,c));var e=[];r(this.ya,function(d){e = e.concat(d.bb(a,b,c));});return e;};h.Ob = function(a,b,c,d,e){var f=a.wa(),g=w(this.ya,f);if(!g){var g=c.ua(e?d:null),k=!1;g?k = !0:(g = d instanceof T?c.xc(d):C,k = !1);g = new te(a,new Id(new sb(g,k,!1),new sb(d,e,!1)));this.ya[f] = g;}g.Ob(b);return we(g,b);};
h.kb = function(a,b,c){var d=a.wa(),e=[],f=[],g=null != df(this);if("default" === d){var k=this;r(this.ya,function(a,d){f = f.concat(a.kb(b,c));a.e() && (delete k.ya[d],de(a.V.o) || e.push(a.V));});}else {var l=w(this.ya,d);l && (f = f.concat(l.kb(b,c)),l.e() && (delete this.ya[d],de(l.V.o) || e.push(l.V)));}g && null == df(this) && e.push(new U(a.k,a.path));return {Hg:e,jg:f};};function ef(a){return Pa(ra(a.ya),function(a){return !de(a.V.o);});}h.hb = function(a){var b=null;r(this.ya,function(c){b = b || c.hb(a);});return b;};
function ff(a,b){if(de(b.o))return df(a);var c=b.wa();return w(a.ya,c);}function df(a){return va(a.ya,function(a){return de(a.V.o);}) || null;};function gf(a){this.sa = Nd;this.Hb = new Ye();this.$e = {};this.kc = {};this.Mc = a;}function hf(a,b,c,d,e){var f=a.Hb,g=e;J(d > f.Lc,"Stacking an older write on top of newer ones");n(g) || (g = !0);f.za.push({path:b,Ia:c,ie:d,visible:g});g && (f.T = Se(f.T,b,c));f.Lc = d;return e?jf(a,new Ub(Yb,b,c)):[];}function kf(a,b,c,d){var e=a.Hb;J(d > e.Lc,"Stacking an older merge on top of newer ones");e.za.push({path:b,children:c,ie:d,visible:!0});e.T = Te(e.T,b,c);e.Lc = d;c = Fe(c);return jf(a,new xe(Yb,b,c));}
function lf(a,b,c){c = c || !1;b = a.Hb.Od(b);return null == b?[]:jf(a,new Wb(b,c));}function mf(a,b,c){c = Fe(c);return jf(a,new xe(ze,b,c));}function nf(a,b,c,d){d = of(a,d);if(null != d){var e=pf(d);d = e.path;e = e.Ib;b = N(d,b);c = new Ub(new ye(!1,!0,e,!0),b,c);return qf(a,d,c);}return [];}function rf(a,b,c,d){if(d = of(a,d)){var e=pf(d);d = e.path;e = e.Ib;b = N(d,b);c = Fe(c);c = new xe(new ye(!1,!0,e,!0),b,c);return qf(a,d,c);}return [];}
gf.prototype.Ob = function(a,b){var c=a.path,d=null,e=!1;Me(this.sa,c,function(a,b){var f=N(a,c);d = b.hb(f);e = e || null != df(b);return !d;});var f=this.sa.get(c);f?(e = e || null != df(f),d = d || f.hb(F)):(f = new cf(),this.sa = this.sa.set(c,f));var g;null != d?g = !0:(g = !1,d = C,Pe(this.sa.subtree(c),function(a,b){var c=b.hb(F);c && (d = d.Q(a,c));}));var k=null != ff(f,a);if(!k && !de(a.o)){var l=sf(a);J(!(l in this.kc),"View does not exist, but we have a tag");var m=tf++;this.kc[l] = m;this.$e["_" + m] = l;}g = f.Ob(a,b,new bf(c,this.Hb),
d,g);k || e || (f = ff(f,a),g = g.concat(uf(this,a,f)));return g;};
gf.prototype.kb = function(a,b,c){var d=a.path,e=this.sa.get(d),f=[];if(e && ("default" === a.wa() || null != ff(e,a))){f = e.kb(a,b,c);e.e() && (this.sa = this.sa.remove(d));e = f.Hg;f = f.jg;b = -1 !== Ua(e,function(a){return de(a.o);});var g=Ke(this.sa,d,function(a,b){return null != df(b);});if(b && !g && (d = this.sa.subtree(d),!d.e()))for(var d=vf(d),k=0;k < d.length;++k) {var l=d[k],m=l.V,l=wf(this,l);this.Mc.Xe(m,xf(this,m),l.ud,l.J);}if(!g && 0 < e.length && !c)if(b)this.Mc.Zd(a,null);else {var v=this;Oa(e,function(a){a.wa();var b=v.kc[sf(a)];
v.Mc.Zd(a,b);});}yf(this,e);}return f;};gf.prototype.ua = function(a,b){var c=this.Hb,d=Ke(this.sa,a,function(b,c){var d=N(b,a);if(d = c.hb(d))return d;});return c.ua(a,d,b,!0);};function vf(a){return Ie(a,function(a,c,d){if(c && null != df(c))return [df(c)];var e=[];c && (e = ef(c));r(d,function(a){e = e.concat(a);});return e;});}function yf(a,b){for(var c=0;c < b.length;++c) {var d=b[c];if(!de(d.o)){var d=sf(d),e=a.kc[d];delete a.kc[d];delete a.$e["_" + e];}}}
function uf(a,b,c){var d=b.path,e=xf(a,b);c = wf(a,c);b = a.Mc.Xe(b,e,c.ud,c.J);d = a.sa.subtree(d);if(e)J(null == df(d.value),"If we're adding a query, it shouldn't be shadowed");else for(e = Ie(d,function(a,b,c){if(!a.e() && b && null != df(b))return [ue(df(b))];var d=[];b && (d = d.concat(Qa(ef(b),function(a){return a.V;})));r(c,function(a){d = d.concat(a);});return d;}),d = 0;d < e.length;++d) c = e[d],a.Mc.Zd(c,xf(a,c));return b;}
function wf(a,b){var c=b.V,d=xf(a,c);return {ud:function(){return (b.u() || C).hash();},J:function(b){if("ok" === b){if(d){var f=c.path;if(b = of(a,d)){var g=pf(b);b = g.path;g = g.Ib;f = N(b,f);f = new Zb(new ye(!1,!0,g,!0),f);b = qf(a,b,f);}else b = [];}else b = jf(a,new Zb(ze,c.path));return b;}f = "Unknown Error";"too_big" === b?f = "The data requested exceeds the maximum size that can be accessed with a single request.":"permission_denied" == b?f = "Client doesn't have permission to access the desired data.":"unavailable" == b && (
f = "The service is unavailable");f = Error(b + ": " + f);f.code = b.toUpperCase();return a.kb(c,null,f);}};}function sf(a){return a.path.toString() + "$" + a.wa();}function pf(a){var b=a.indexOf("$");J(-1 !== b && b < a.length - 1,"Bad queryKey.");return {Ib:a.substr(b + 1),path:new K(a.substr(0,b))};}function of(a,b){var c=a.$e,d="_" + b;return d in c?c[d]:void 0;}function xf(a,b){var c=sf(b);return w(a.kc,c);}var tf=1;
function qf(a,b,c){var d=a.sa.get(b);J(d,"Missing sync point for query tag that we're tracking");return d.bb(c,new bf(b,a.Hb),null);}function jf(a,b){return zf(a,b,a.sa,null,new bf(F,a.Hb));}function zf(a,b,c,d,e){if(b.path.e())return Af(a,b,c,d,e);var f=c.get(F);null == d && null != f && (d = f.hb(F));var g=[],k=O(b.path),l=b.Wc(k);if((c = c.children.get(k)) && l)var m=d?d.M(k):null,k=e.w(k),g=g.concat(zf(a,l,c,m,k));f && (g = g.concat(f.bb(b,e,d)));return g;}
function Af(a,b,c,d,e){var f=c.get(F);null == d && null != f && (d = f.hb(F));var g=[];c.children.ha(function(c,f){var m=d?d.M(c):null,v=e.w(c),y=b.Wc(c);y && (g = g.concat(Af(a,y,f,m,v)));});f && (g = g.concat(f.bb(b,e,d)));return g;};function Bf(){this.children = {};this.kd = 0;this.value = null;}function Cf(a,b,c){this.Dd = a?a:"";this.Yc = b?b:null;this.B = c?c:new Bf();}function Df(a,b){for(var c=b instanceof K?b:new K(b),d=a,e;null !== (e = O(c));) d = new Cf(e,d,w(d.B.children,e) || new Bf()),c = G(c);return d;}h = Cf.prototype;h.Ba = function(){return this.B.value;};function Ef(a,b){J("undefined" !== typeof b,"Cannot set value to undefined");a.B.value = b;Ff(a);}h.clear = function(){this.B.value = null;this.B.children = {};this.B.kd = 0;Ff(this);};
h.td = function(){return 0 < this.B.kd;};h.e = function(){return null === this.Ba() && !this.td();};h.U = function(a){var b=this;r(this.B.children,function(c,d){a(new Cf(d,b,c));});};function Gf(a,b,c,d){c && !d && b(a);a.U(function(a){Gf(a,b,!0,d);});c && d && b(a);}function Hf(a,b){for(var c=a.parent();null !== c && !b(c);) c = c.parent();}h.path = function(){return new K(null === this.Yc?this.Dd:this.Yc.path() + "/" + this.Dd);};h.name = function(){return this.Dd;};h.parent = function(){return this.Yc;};
function Ff(a){if(null !== a.Yc){var b=a.Yc,c=a.Dd,d=a.e(),e=u(b.B.children,c);d && e?(delete b.B.children[c],b.B.kd--,Ff(b)):d || e || (b.B.children[c] = a.B,b.B.kd++,Ff(b));}};function If(a){J(ea(a) && 0 < a.length,"Requires a non-empty array");this.Uf = a;this.Nc = {};}If.prototype.de = function(a,b){for(var c=this.Nc[a] || [],d=0;d < c.length;d++) c[d].yc.apply(c[d].Ma,Array.prototype.slice.call(arguments,1));};If.prototype.Eb = function(a,b,c){Jf(this,a);this.Nc[a] = this.Nc[a] || [];this.Nc[a].push({yc:b,Ma:c});(a = this.ze(a)) && b.apply(c,a);};If.prototype.gc = function(a,b,c){Jf(this,a);a = this.Nc[a] || [];for(var d=0;d < a.length;d++) if(a[d].yc === b && (!c || c === a[d].Ma)){a.splice(d,1);break;}};
function Jf(a,b){J(Ta(a.Uf,function(a){return a === b;}),"Unknown event: " + b);};var Kf=(function(){var a=0,b=[];return function(c){var d=c === a;a = c;for(var e=Array(8),f=7;0 <= f;f--) e[f] = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(c % 64),c = Math.floor(c / 64);J(0 === c,"Cannot push at time == 0");c = e.join("");if(d){for(f = 11;0 <= f && 63 === b[f];f--) b[f] = 0;b[f]++;}else for(f = 0;12 > f;f++) b[f] = Math.floor(64 * Math.random());for(f = 0;12 > f;f++) c += "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(b[f]);J(20 === c.length,"nextPushId: Length should be 20.");
return c;};})();function Lf(){If.call(this,["online"]);this.ic = !0;if("undefined" !== typeof window && "undefined" !== typeof window.addEventListener){var a=this;window.addEventListener("online",function(){a.ic || (a.ic = !0,a.de("online",!0));},!1);window.addEventListener("offline",function(){a.ic && (a.ic = !1,a.de("online",!1));},!1);}}ma(Lf,If);Lf.prototype.ze = function(a){J("online" === a,"Unknown event type: " + a);return [this.ic];};ca(Lf);function Mf(){If.call(this,["visible"]);var a,b;"undefined" !== typeof document && "undefined" !== typeof document.addEventListener && ("undefined" !== typeof document.hidden?(b = "visibilitychange",a = "hidden"):"undefined" !== typeof document.mozHidden?(b = "mozvisibilitychange",a = "mozHidden"):"undefined" !== typeof document.msHidden?(b = "msvisibilitychange",a = "msHidden"):"undefined" !== typeof document.webkitHidden && (b = "webkitvisibilitychange",a = "webkitHidden"));this.uc = !0;if(b){var c=this;document.addEventListener(b,
function(){var b=!document[a];b !== c.uc && (c.uc = b,c.de("visible",b));},!1);}}ma(Mf,If);Mf.prototype.ze = function(a){J("visible" === a,"Unknown event type: " + a);return [this.uc];};ca(Mf);var Nf=/[\[\].#$\/\u0000-\u001F\u007F]/,Of=/[\[\].#$\u0000-\u001F\u007F]/,Pf=/^[a-zA-Z][a-zA-Z._\-+]+$/;function Qf(a){return p(a) && 0 !== a.length && !Nf.test(a);}function Rf(a){return null === a || p(a) || ga(a) && !Sc(a) || ia(a) && u(a,".sv");}function Sf(a,b,c,d){d && !n(b) || Tf(z(a,1,d),b,c);}
function Tf(a,b,c){c instanceof K && (c = new wc(c,a));if(!n(b))throw Error(a + "contains undefined " + zc(c));if(ha(b))throw Error(a + "contains a function " + zc(c) + " with contents: " + b.toString());if(Sc(b))throw Error(a + "contains " + b.toString() + " " + zc(c));if(p(b) && b.length > 10485760 / 3 && 10485760 < xc(b))throw Error(a + "contains a string greater than 10485760 utf8 bytes " + zc(c) + " ('" + b.substring(0,50) + "...')");if(ia(b)){var d=!1,e=!1;hb(b,function(b,g){if(".value" === b)d = !0;else if(".priority" !== b && ".sv" !== b && (e = 
!0,!Qf(b)))throw Error(a + " contains an invalid key (" + b + ") " + zc(c) + ".  Keys must be non-empty strings and can't contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"");c.push(b);Tf(a,g,c);c.pop();});if(d && e)throw Error(a + " contains \".value\" child " + zc(c) + " in addition to actual children.");}}
function Uf(a,b,c){if(!ia(b) || ea(b))throw Error(z(a,1,!1) + " must be an Object containing the children to replace.");if(u(b,".value"))throw Error(z(a,1,!1) + " must not contain \".value\".  To overwrite with a leaf value, just use .set() instead.");Sf(a,b,c,!1);}
function Vf(a,b,c){if(Sc(c))throw Error(z(a,b,!1) + "is " + c.toString() + ", but must be a valid Firebase priority (a string, finite number, server value, or null).");if(!Rf(c))throw Error(z(a,b,!1) + "must be a valid Firebase priority (a string, finite number, server value, or null).");}
function Wf(a,b,c){if(!c || n(b))switch(b){case "value":case "child_added":case "child_removed":case "child_changed":case "child_moved":break;default:throw Error(z(a,1,c) + "must be a valid event type: \"value\", \"child_added\", \"child_removed\", \"child_changed\", or \"child_moved\".");}}function Xf(a,b,c,d){if((!d || n(c)) && !Qf(c))throw Error(z(a,b,d) + "was an invalid key: \"" + c + "\".  Firebase keys must be non-empty strings and can't contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").");}
function Yf(a,b){if(!p(b) || 0 === b.length || Of.test(b))throw Error(z(a,1,!1) + "was an invalid path: \"" + b + "\". Paths must be non-empty strings and can't contain \".\", \"#\", \"$\", \"[\", or \"]\"");}function Zf(a,b){if(".info" === O(b))throw Error(a + " failed: Can't modify data under /.info/");}function $f(a,b){if(!p(b))throw Error(z(a,1,!1) + "must be a valid credential (a string).");}function ag(a,b,c){if(!p(c))throw Error(z(a,b,!1) + "must be a valid string.");}
function bg(a,b){ag(a,1,b);if(!Pf.test(b))throw Error(z(a,1,!1) + "'" + b + "' is not a valid authentication provider.");}function cg(a,b,c,d){if(!d || n(c))if(!ia(c) || null === c)throw Error(z(a,b,d) + "must be a valid object.");}function dg(a,b,c){if(!ia(b) || !u(b,c))throw Error(z(a,1,!1) + "must contain the key \"" + c + "\"");if(!p(w(b,c)))throw Error(z(a,1,!1) + "must contain the key \"" + c + "\" with type \"string\"");};function eg(){this.set = {};}h = eg.prototype;h.add = function(a,b){this.set[a] = null !== b?b:!0;};h.contains = function(a){return u(this.set,a);};h.get = function(a){return this.contains(a)?this.set[a]:void 0;};h.remove = function(a){delete this.set[a];};h.clear = function(){this.set = {};};h.e = function(){return wa(this.set);};h.count = function(){return pa(this.set);};function fg(a,b){r(a.set,function(a,d){b(d,a);});}h.keys = function(){var a=[];r(this.set,function(b,c){a.push(c);});return a;};function qc(){this.m = this.C = null;}qc.prototype.find = function(a){if(null != this.C)return this.C.oa(a);if(a.e() || null == this.m)return null;var b=O(a);a = G(a);return this.m.contains(b)?this.m.get(b).find(a):null;};qc.prototype.mc = function(a,b){if(a.e())this.C = b,this.m = null;else if(null !== this.C)this.C = this.C.G(a,b);else {null == this.m && (this.m = new eg());var c=O(a);this.m.contains(c) || this.m.add(c,new qc());c = this.m.get(c);a = G(a);c.mc(a,b);}};
function gg(a,b){if(b.e())return (a.C = null,a.m = null,!0);if(null !== a.C){if(a.C.N())return !1;var c=a.C;a.C = null;c.U(M,function(b,c){a.mc(new K(b),c);});return gg(a,b);}return null !== a.m?(c = O(b),b = G(b),a.m.contains(c) && gg(a.m.get(c),b) && a.m.remove(c),a.m.e()?(a.m = null,!0):!1):!0;}function rc(a,b,c){null !== a.C?c(b,a.C):a.U(function(a,e){var f=new K(b.toString() + "/" + a);rc(e,f,c);});}qc.prototype.U = function(a){null !== this.m && fg(this.m,function(b,c){a(b,c);});};var hg="auth.firebase.com";function ig(a,b,c){this.ld = a || {};this.ce = b || {};this.ab = c || {};this.ld.remember || (this.ld.remember = "default");}var jg=["remember","redirectTo"];function kg(a){var b={},c={};hb(a || {},function(a,e){0 <= Na(jg,a)?b[a] = e:c[a] = e;});return new ig(b,{},c);};function lg(a,b){this.Pe = ["session",a.Ld,a.Cb].join(":");this.$d = b;}lg.prototype.set = function(a,b){if(!b)if(this.$d.length)b = this.$d[0];else throw Error("fb.login.SessionManager : No storage options available!");b.set(this.Pe,a);};lg.prototype.get = function(){var a=Qa(this.$d,q(this.ng,this)),a=Pa(a,function(a){return null !== a;});Xa(a,function(a,c){return bd(c.token) - bd(a.token);});return 0 < a.length?a.shift():null;};lg.prototype.ng = function(a){try{var b=a.get(this.Pe);if(b && b.token)return b;}catch(c) {}return null;};
lg.prototype.clear = function(){var a=this;Oa(this.$d,function(b){b.remove(a.Pe);});};function mg(){return "undefined" !== typeof navigator && "string" === typeof navigator.userAgent?navigator.userAgent:"";}function ng(){return "undefined" !== typeof window && !!(window.cordova || window.phonegap || window.PhoneGap) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(mg());}function og(){return "undefined" !== typeof location && /^file:\//.test(location.href);}
function pg(a){var b=mg();if("" === b)return !1;if("Microsoft Internet Explorer" === navigator.appName){if((b = b.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/)) && 1 < b.length)return parseFloat(b[1]) >= a;}else if(-1 < b.indexOf("Trident") && (b = b.match(/rv:([0-9]{2,2}[\.0-9]{0,})/)) && 1 < b.length)return parseFloat(b[1]) >= a;return !1;};function qg(){var a=window.opener.frames,b;for(b = a.length - 1;0 <= b;b--) try{if(a[b].location.protocol === window.location.protocol && a[b].location.host === window.location.host && "__winchan_relay_frame" === a[b].name)return a[b];}catch(c) {}return null;}function rg(a,b,c){a.attachEvent?a.attachEvent("on" + b,c):a.addEventListener && a.addEventListener(b,c,!1);}function sg(a,b,c){a.detachEvent?a.detachEvent("on" + b,c):a.removeEventListener && a.removeEventListener(b,c,!1);}
function tg(a){/^https?:\/\//.test(a) || (a = window.location.href);var b=/^(https?:\/\/[\-_a-zA-Z\.0-9:]+)/.exec(a);return b?b[1]:a;}function ug(a){var b="";try{a = a.replace("#","");var c=kb(a);c && u(c,"__firebase_request_key") && (b = w(c,"__firebase_request_key"));}catch(d) {}return b;}function vg(){var a=Rc(hg);return a.scheme + "://" + a.host + "/v2";}function wg(a){return vg() + "/" + a + "/auth/channel";};function xg(a){var b=this;this.zc = a;this.ae = "*";pg(8)?this.Qc = this.wd = qg():(this.Qc = window.opener,this.wd = window);if(!b.Qc)throw "Unable to find relay frame";rg(this.wd,"message",q(this.hc,this));rg(this.wd,"message",q(this.Af,this));try{yg(this,{a:"ready"});}catch(c) {rg(this.Qc,"load",function(){yg(b,{a:"ready"});});}rg(window,"unload",q(this.yg,this));}function yg(a,b){b = B(b);pg(8)?a.Qc.doPost(b,a.ae):a.Qc.postMessage(b,a.ae);}
xg.prototype.hc = function(a){var b=this,c;try{c = mb(a.data);}catch(d) {}c && "request" === c.a && (sg(window,"message",this.hc),this.ae = a.origin,this.zc && setTimeout(function(){b.zc(b.ae,c.d,function(a,c){b.ag = !c;b.zc = void 0;yg(b,{a:"response",d:a,forceKeepWindowOpen:c});});},0));};xg.prototype.yg = function(){try{sg(this.wd,"message",this.Af);}catch(a) {}this.zc && (yg(this,{a:"error",d:"unknown closed window"}),this.zc = void 0);try{window.close();}catch(b) {}};xg.prototype.Af = function(a){if(this.ag && "die" === a.data)try{window.close();}catch(b) {}};function zg(a){this.oc = Ga() + Ga() + Ga();this.Df = a;}zg.prototype.open = function(a,b){P.set("redirect_request_id",this.oc);P.set("redirect_request_id",this.oc);b.requestId = this.oc;b.redirectTo = b.redirectTo || window.location.href;a += (/\?/.test(a)?"":"?") + jb(b);window.location = a;};zg.isAvailable = function(){return !og() && !ng();};zg.prototype.Bc = function(){return "redirect";};var Ag={NETWORK_ERROR:"Unable to contact the Firebase server.",SERVER_ERROR:"An unknown server error occurred.",TRANSPORT_UNAVAILABLE:"There are no login transports available for the requested method.",REQUEST_INTERRUPTED:"The browser redirected the page before the login request could complete.",USER_CANCELLED:"The user cancelled authentication."};function Bg(a){var b=Error(w(Ag,a),a);b.code = a;return b;};function Cg(a){var b;(b = !a.window_features) || (b = mg(),b = -1 !== b.indexOf("Fennec/") || -1 !== b.indexOf("Firefox/") && -1 !== b.indexOf("Android"));b && (a.window_features = void 0);a.window_name || (a.window_name = "_blank");this.options = a;}
Cg.prototype.open = function(a,b,c){function d(a){g && (document.body.removeChild(g),g = void 0);v && (v = clearInterval(v));sg(window,"message",e);sg(window,"unload",d);if(m && !a)try{m.close();}catch(b) {k.postMessage("die",l);}m = k = void 0;}function e(a){if(a.origin === l)try{var b=mb(a.data);"ready" === b.a?k.postMessage(y,l):"error" === b.a?(d(!1),c && (c(b.d),c = null)):"response" === b.a && (d(b.forceKeepWindowOpen),c && (c(null,b.d),c = null));}catch(e) {}}var f=pg(8),g,k;if(!this.options.relay_url)return c(Error("invalid arguments: origin of url and relay_url must match"));
var l=tg(a);if(l !== tg(this.options.relay_url))c && setTimeout(function(){c(Error("invalid arguments: origin of url and relay_url must match"));},0);else {f && (g = document.createElement("iframe"),g.setAttribute("src",this.options.relay_url),g.style.display = "none",g.setAttribute("name","__winchan_relay_frame"),document.body.appendChild(g),k = g.contentWindow);a += (/\?/.test(a)?"":"?") + jb(b);var m=window.open(a,this.options.window_name,this.options.window_features);k || (k = m);var v=setInterval(function(){m && m.closed && (
d(!1),c && (c(Bg("USER_CANCELLED")),c = null));},500),y=B({a:"request",d:b});rg(window,"unload",d);rg(window,"message",e);}};
Cg.isAvailable = function(){var a;if(a = "postMessage" in window && !og())(a = ng() || "undefined" !== typeof navigator && (!!mg().match(/Windows Phone/) || !!window.Windows && /^ms-appx:/.test(location.href))) || (a = mg(),a = "undefined" !== typeof navigator && "undefined" !== typeof window && !!(a.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i) || a.match(/CriOS/) || a.match(/Twitter for iPhone/) || a.match(/FBAN\/FBIOS/) || window.navigator.standalone)),a = !a;return a && !mg().match(/PhantomJS/);};Cg.prototype.Bc = function(){return "popup";};function Dg(a){a.method || (a.method = "GET");a.headers || (a.headers = {});a.headers.content_type || (a.headers.content_type = "application/json");a.headers.content_type = a.headers.content_type.toLowerCase();this.options = a;}
Dg.prototype.open = function(a,b,c){function d(){c && (c(Bg("REQUEST_INTERRUPTED")),c = null);}var e=new XMLHttpRequest(),f=this.options.method.toUpperCase(),g;rg(window,"beforeunload",d);e.onreadystatechange = function(){if(c && 4 === e.readyState){var a;if(200 <= e.status && 300 > e.status){try{a = mb(e.responseText);}catch(b) {}c(null,a);}else 500 <= e.status && 600 > e.status?c(Bg("SERVER_ERROR")):c(Bg("NETWORK_ERROR"));c = null;sg(window,"beforeunload",d);}};if("GET" === f)a += (/\?/.test(a)?"":"?") + jb(b),g = null;else {var k=this.options.headers.content_type;
"application/json" === k && (g = B(b));"application/x-www-form-urlencoded" === k && (g = jb(b));}e.open(f,a,!0);a = {"X-Requested-With":"XMLHttpRequest",Accept:"application/json;text/plain"};za(a,this.options.headers);for(var l in a) e.setRequestHeader(l,a[l]);e.send(g);};Dg.isAvailable = function(){var a;if(a = !!window.XMLHttpRequest)a = mg(),a = !(a.match(/MSIE/) || a.match(/Trident/)) || pg(10);return a;};Dg.prototype.Bc = function(){return "json";};function Eg(a){this.oc = Ga() + Ga() + Ga();this.Df = a;}
Eg.prototype.open = function(a,b,c){function d(){c && (c(Bg("USER_CANCELLED")),c = null);}var e=this,f=Rc(hg),g;b.requestId = this.oc;b.redirectTo = f.scheme + "://" + f.host + "/blank/page.html";a += /\?/.test(a)?"":"?";a += jb(b);(g = window.open(a,"_blank","location=no")) && ha(g.addEventListener)?(g.addEventListener("loadstart",function(a){var b;if(b = a && a.url)a: {try{var m=document.createElement("a");m.href = a.url;b = m.host === f.host && "/blank/page.html" === m.pathname;break a;}catch(v) {}b = !1;}b && (a = ug(a.url),g.removeEventListener("exit",
d),g.close(),a = new ig(null,null,{requestId:e.oc,requestKey:a}),e.Df.requestWithCredential("/auth/session",a,c),c = null);}),g.addEventListener("exit",d)):c(Bg("TRANSPORT_UNAVAILABLE"));};Eg.isAvailable = function(){return ng();};Eg.prototype.Bc = function(){return "redirect";};function Fg(a){a.callback_parameter || (a.callback_parameter = "callback");this.options = a;window.__firebase_auth_jsonp = window.__firebase_auth_jsonp || {};}
Fg.prototype.open = function(a,b,c){function d(){c && (c(Bg("REQUEST_INTERRUPTED")),c = null);}function e(){setTimeout(function(){window.__firebase_auth_jsonp[f] = void 0;wa(window.__firebase_auth_jsonp) && (window.__firebase_auth_jsonp = void 0);try{var a=document.getElementById(f);a && a.parentNode.removeChild(a);}catch(b) {}},1);sg(window,"beforeunload",d);}var f="fn" + new Date().getTime() + Math.floor(99999 * Math.random());b[this.options.callback_parameter] = "__firebase_auth_jsonp." + f;a += (/\?/.test(a)?"":"?") + jb(b);
rg(window,"beforeunload",d);window.__firebase_auth_jsonp[f] = function(a){c && (c(null,a),c = null);e();};Gg(f,a,c);};
function Gg(a,b,c){setTimeout(function(){try{var d=document.createElement("script");d.type = "text/javascript";d.id = a;d.async = !0;d.src = b;d.onerror = function(){var b=document.getElementById(a);null !== b && b.parentNode.removeChild(b);c && c(Bg("NETWORK_ERROR"));};var e=document.getElementsByTagName("head");(e && 0 != e.length?e[0]:document.documentElement).appendChild(d);}catch(f) {c && c(Bg("NETWORK_ERROR"));}},0);}Fg.isAvailable = function(){return "undefined" !== typeof document && null != document.createElement;};
Fg.prototype.Bc = function(){return "json";};function Hg(a,b,c,d){If.call(this,["auth_status"]);this.H = a;this.df = b;this.Sg = c;this.Ke = d;this.rc = new lg(a,[Dc,P]);this.nb = null;this.Re = !1;Ig(this);}ma(Hg,If);h = Hg.prototype;h.we = function(){return this.nb || null;};function Ig(a){P.get("redirect_request_id") && Jg(a);var b=a.rc.get();b && b.token?(Kg(a,b),a.df(b.token,function(c,d){Lg(a,c,d,!1,b.token,b);},function(b,d){Mg(a,"resumeSession()",b,d);})):Kg(a,null);}
function Ng(a,b,c,d,e,f){"firebaseio-demo.com" === a.H.domain && Q("Firebase authentication is not supported on demo Firebases (*.firebaseio-demo.com). To secure your Firebase, create a production Firebase at https://www.firebase.com.");a.df(b,function(f,k){Lg(a,f,k,!0,b,c,d || {},e);},function(b,c){Mg(a,"auth()",b,c,f);});}function Og(a,b){a.rc.clear();Kg(a,null);a.Sg(function(a,d){if("ok" === a)R(b,null);else {var e=(a || "error").toUpperCase(),f=e;d && (f += ": " + d);f = Error(f);f.code = e;R(b,f);}});}
function Lg(a,b,c,d,e,f,g,k){"ok" === b?(d && (b = c.auth,f.auth = b,f.expires = c.expires,f.token = cd(e)?e:"",c = null,b && u(b,"uid")?c = w(b,"uid"):u(f,"uid") && (c = w(f,"uid")),f.uid = c,c = "custom",b && u(b,"provider")?c = w(b,"provider"):u(f,"provider") && (c = w(f,"provider")),f.provider = c,a.rc.clear(),cd(e) && (g = g || {},c = Dc,"sessionOnly" === g.remember && (c = P),"none" !== g.remember && a.rc.set(f,c)),Kg(a,f)),R(k,null,f)):(a.rc.clear(),Kg(a,null),f = a = (b || "error").toUpperCase(),c && (f += ": " + c),f = Error(f),f.code = a,R(k,f));}
function Mg(a,b,c,d,e){Q(b + " was canceled: " + d);a.rc.clear();Kg(a,null);a = Error(d);a.code = c.toUpperCase();R(e,a);}function Pg(a,b,c,d,e){Qg(a);c = new ig(d || {},{},c || {});Rg(a,[Dg,Fg],"/auth/" + b,c,e);}
function Sg(a,b,c,d){Qg(a);var e=[Cg,Eg];c = kg(c);"anonymous" === b || "password" === b?setTimeout(function(){R(d,Bg("TRANSPORT_UNAVAILABLE"));},0):(c.ce.window_features = "menubar=yes,modal=yes,alwaysRaised=yeslocation=yes,resizable=yes,scrollbars=yes,status=yes,height=625,width=625,top=" + ("object" === typeof screen?.5 * (screen.height - 625):0) + ",left=" + ("object" === typeof screen?.5 * (screen.width - 625):0),c.ce.relay_url = wg(a.H.Cb),c.ce.requestWithCredential = q(a.pc,a),Rg(a,e,"/auth/" + b,c,d));}
function Jg(a){var b=P.get("redirect_request_id");if(b){var c=P.get("redirect_client_options");P.remove("redirect_request_id");P.remove("redirect_client_options");var d=[Dg,Fg],b={requestId:b,requestKey:ug(document.location.hash)},c=new ig(c,{},b);a.Re = !0;try{document.location.hash = document.location.hash.replace(/&__firebase_request_key=([a-zA-z0-9]*)/,"");}catch(e) {}Rg(a,d,"/auth/session",c,(function(){this.Re = !1;}).bind(a));}}
h.re = function(a,b){Qg(this);var c=kg(a);c.ab._method = "POST";this.pc("/users",c,function(a,c){a?R(b,a):R(b,a,c);});};h.Se = function(a,b){var c=this;Qg(this);var d="/users/" + encodeURIComponent(a.email),e=kg(a);e.ab._method = "DELETE";this.pc(d,e,function(a,d){!a && d && d.uid && c.nb && c.nb.uid && c.nb.uid === d.uid && Og(c);R(b,a);});};h.oe = function(a,b){Qg(this);var c="/users/" + encodeURIComponent(a.email) + "/password",d=kg(a);d.ab._method = "PUT";d.ab.password = a.newPassword;this.pc(c,d,function(a){R(b,a);});};
h.ne = function(a,b){Qg(this);var c="/users/" + encodeURIComponent(a.oldEmail) + "/email",d=kg(a);d.ab._method = "PUT";d.ab.email = a.newEmail;d.ab.password = a.password;this.pc(c,d,function(a){R(b,a);});};h.Ue = function(a,b){Qg(this);var c="/users/" + encodeURIComponent(a.email) + "/password",d=kg(a);d.ab._method = "POST";this.pc(c,d,function(a){R(b,a);});};h.pc = function(a,b,c){Tg(this,[Dg,Fg],a,b,c);};
function Rg(a,b,c,d,e){Tg(a,b,c,d,function(b,c){!b && c && c.token && c.uid?Ng(a,c.token,c,d.ld,function(a,b){a?R(e,a):R(e,null,b);}):R(e,b || Bg("UNKNOWN_ERROR"));});}
function Tg(a,b,c,d,e){b = Pa(b,function(a){return "function" === typeof a.isAvailable && a.isAvailable();});0 === b.length?setTimeout(function(){R(e,Bg("TRANSPORT_UNAVAILABLE"));},0):(b = new (b.shift())(d.ce),d = ib(d.ab),d.v = "js-2.2.7",d.transport = b.Bc(),d.suppress_status_codes = !0,a = vg() + "/" + a.H.Cb + c,b.open(a,d,function(a,b){if(a)R(e,a);else if(b && b.error){var c=Error(b.error.message);c.code = b.error.code;c.details = b.error.details;R(e,c);}else R(e,null,b);}));}
function Kg(a,b){var c=null !== a.nb || null !== b;a.nb = b;c && a.de("auth_status",b);a.Ke(null !== b);}h.ze = function(a){J("auth_status" === a,"initial event must be of type \"auth_status\"");return this.Re?null:[this.nb];};function Qg(a){var b=a.H;if("firebaseio.com" !== b.domain && "firebaseio-demo.com" !== b.domain && "auth.firebase.com" === hg)throw Error("This custom Firebase server ('" + a.H.domain + "') does not support delegated login.");};function Ug(a){this.hc = a;this.Kd = [];this.Qb = 0;this.pe = -1;this.Fb = null;}function Vg(a,b,c){a.pe = b;a.Fb = c;a.pe < a.Qb && (a.Fb(),a.Fb = null);}function Wg(a,b,c){for(a.Kd[b] = c;a.Kd[a.Qb];) {var d=a.Kd[a.Qb];delete a.Kd[a.Qb];for(var e=0;e < d.length;++e) if(d[e]){var f=a;Cb(function(){f.hc(d[e]);});}if(a.Qb === a.pe){a.Fb && (clearTimeout(a.Fb),a.Fb(),a.Fb = null);break;}a.Qb++;}};function Xg(a,b,c){this.qe = a;this.f = Oc(a);this.ob = this.pb = 0;this.Va = Ob(b);this.Vd = c;this.Gc = !1;this.gd = function(a){b.host !== b.Oa && (a.ns = b.Cb);var c=[],f;for(f in a) a.hasOwnProperty(f) && c.push(f + "=" + a[f]);return (b.lb?"https://":"http://") + b.Oa + "/.lp?" + c.join("&");};}var Yg,Zg;
Xg.prototype.open = function(a,b){this.gf = 0;this.ka = b;this.zf = new Ug(a);this.zb = !1;var c=this;this.rb = setTimeout(function(){c.f("Timed out trying to connect.");c.ib();c.rb = null;},Math.floor(3E4));Tc(function(){if(!c.zb){c.Ta = new $g(function(a,b,d,k,l){ah(c,arguments);if(c.Ta)if((c.rb && (clearTimeout(c.rb),c.rb = null),c.Gc = !0,"start" == a))c.id = b,c.Ff = d;else if("close" === a)b?(c.Ta.Td = !1,Vg(c.zf,b,function(){c.ib();})):c.ib();else throw Error("Unrecognized command received: " + a);},function(a,b){ah(c,arguments);
Wg(c.zf,a,b);},function(){c.ib();},c.gd);var a={start:"t"};a.ser = Math.floor(1E8 * Math.random());c.Ta.fe && (a.cb = c.Ta.fe);a.v = "5";c.Vd && (a.s = c.Vd);"undefined" !== typeof location && location.href && -1 !== location.href.indexOf("firebaseio.com") && (a.r = "f");a = c.gd(a);c.f("Connecting via long-poll to " + a);bh(c.Ta,a,function(){});}});};
Xg.prototype.start = function(){var a=this.Ta,b=this.Ff;a.rg = this.id;a.sg = b;for(a.ke = !0;ch(a););a = this.id;b = this.Ff;this.fc = document.createElement("iframe");var c={dframe:"t"};c.id = a;c.pw = b;this.fc.src = this.gd(c);this.fc.style.display = "none";document.body.appendChild(this.fc);};
Xg.isAvailable = function(){return Yg || !Zg && "undefined" !== typeof document && null != document.createElement && !("object" === typeof window && window.chrome && window.chrome.extension && !/^chrome/.test(window.location.href)) && !("object" === typeof Windows && "object" === typeof Windows.Ug);};h = Xg.prototype;h.Bd = function(){};h.cd = function(){this.zb = !0;this.Ta && (this.Ta.close(),this.Ta = null);this.fc && (document.body.removeChild(this.fc),this.fc = null);this.rb && (clearTimeout(this.rb),this.rb = null);};
h.ib = function(){this.zb || (this.f("Longpoll is closing itself"),this.cd(),this.ka && (this.ka(this.Gc),this.ka = null));};h.close = function(){this.zb || (this.f("Longpoll is being closed."),this.cd());};h.send = function(a){a = B(a);this.pb += a.length;Lb(this.Va,"bytes_sent",a.length);a = Kc(a);a = fb(a,!0);a = Xc(a,1840);for(var b=0;b < a.length;b++) {var c=this.Ta;c.$c.push({Jg:this.gf,Rg:a.length,jf:a[b]});c.ke && ch(c);this.gf++;}};function ah(a,b){var c=B(b).length;a.ob += c;Lb(a.Va,"bytes_received",c);}
function $g(a,b,c,d){this.gd = d;this.jb = c;this.Oe = new eg();this.$c = [];this.se = Math.floor(1E8 * Math.random());this.Td = !0;this.fe = Gc();window["pLPCommand" + this.fe] = a;window["pRTLPCB" + this.fe] = b;a = document.createElement("iframe");a.style.display = "none";if(document.body){document.body.appendChild(a);try{a.contentWindow.document || Bb("No IE domain setting required");}catch(e) {a.src = "javascript:void((function(){document.open();document.domain='" + document.domain + "';document.close();})())";}}else throw "Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
a.contentDocument?a.gb = a.contentDocument:a.contentWindow?a.gb = a.contentWindow.document:a.document && (a.gb = a.document);this.Ca = a;a = "";this.Ca.src && "javascript:" === this.Ca.src.substr(0,11) && (a = "<script>document.domain=\"" + document.domain + "\";</script>");a = "<html><body>" + a + "</body></html>";try{this.Ca.gb.open(),this.Ca.gb.write(a),this.Ca.gb.close();}catch(f) {Bb("frame writing exception"),f.stack && Bb(f.stack),Bb(f);}}
$g.prototype.close = function(){this.ke = !1;if(this.Ca){this.Ca.gb.body.innerHTML = "";var a=this;setTimeout(function(){null !== a.Ca && (document.body.removeChild(a.Ca),a.Ca = null);},Math.floor(0));}var b=this.jb;b && (this.jb = null,b());};
function ch(a){if(a.ke && a.Td && a.Oe.count() < (0 < a.$c.length?2:1)){a.se++;var b={};b.id = a.rg;b.pw = a.sg;b.ser = a.se;for(var b=a.gd(b),c="",d=0;0 < a.$c.length;) if(1870 >= a.$c[0].jf.length + 30 + c.length){var e=a.$c.shift(),c=c + "&seg" + d + "=" + e.Jg + "&ts" + d + "=" + e.Rg + "&d" + d + "=" + e.jf;d++;}else break;dh(a,b + c,a.se);return !0;}return !1;}function dh(a,b,c){function d(){a.Oe.remove(c);ch(a);}a.Oe.add(c,1);var e=setTimeout(d,Math.floor(25E3));bh(a,b,function(){clearTimeout(e);d();});}
function bh(a,b,c){setTimeout(function(){try{if(a.Td){var d=a.Ca.gb.createElement("script");d.type = "text/javascript";d.async = !0;d.src = b;d.onload = d.onreadystatechange = function(){var a=d.readyState;a && "loaded" !== a && "complete" !== a || (d.onload = d.onreadystatechange = null,d.parentNode && d.parentNode.removeChild(d),c());};d.onerror = function(){Bb("Long-poll script failed to load: " + b);a.Td = !1;a.close();};a.Ca.gb.body.appendChild(d);}}catch(e) {}},Math.floor(1));};var eh=null;"undefined" !== typeof MozWebSocket?eh = MozWebSocket:"undefined" !== typeof WebSocket && (eh = WebSocket);function fh(a,b,c){this.qe = a;this.f = Oc(this.qe);this.frames = this.Jc = null;this.ob = this.pb = this.bf = 0;this.Va = Ob(b);this.fb = (b.lb?"wss://":"ws://") + b.Oa + "/.ws?v=5";"undefined" !== typeof location && location.href && -1 !== location.href.indexOf("firebaseio.com") && (this.fb += "&r=f");b.host !== b.Oa && (this.fb = this.fb + "&ns=" + b.Cb);c && (this.fb = this.fb + "&s=" + c);}var gh;
fh.prototype.open = function(a,b){this.jb = b;this.wg = a;this.f("Websocket connecting to " + this.fb);this.Gc = !1;Dc.set("previous_websocket_failure",!0);try{this.va = new eh(this.fb);}catch(c) {this.f("Error instantiating WebSocket.");var d=c.message || c.data;d && this.f(d);this.ib();return;}var e=this;this.va.onopen = function(){e.f("Websocket connected.");e.Gc = !0;};this.va.onclose = function(){e.f("Websocket connection was disconnected.");e.va = null;e.ib();};this.va.onmessage = function(a){if(null !== e.va)if((a = a.data,e.ob += 
a.length,Lb(e.Va,"bytes_received",a.length),hh(e),null !== e.frames))ih(e,a);else {a: {J(null === e.frames,"We already have a frame buffer");if(6 >= a.length){var b=Number(a);if(!isNaN(b)){e.bf = b;e.frames = [];a = null;break a;}}e.bf = 1;e.frames = [];}null !== a && ih(e,a);}};this.va.onerror = function(a){e.f("WebSocket error.  Closing connection.");(a = a.message || a.data) && e.f(a);e.ib();};};fh.prototype.start = function(){};
fh.isAvailable = function(){var a=!1;if("undefined" !== typeof navigator && navigator.userAgent){var b=navigator.userAgent.match(/Android ([0-9]{0,}\.[0-9]{0,})/);b && 1 < b.length && 4.4 > parseFloat(b[1]) && (a = !0);}return !a && null !== eh && !gh;};fh.responsesRequiredToBeHealthy = 2;fh.healthyTimeout = 3E4;h = fh.prototype;h.Bd = function(){Dc.remove("previous_websocket_failure");};function ih(a,b){a.frames.push(b);if(a.frames.length == a.bf){var c=a.frames.join("");a.frames = null;c = mb(c);a.wg(c);}}
h.send = function(a){hh(this);a = B(a);this.pb += a.length;Lb(this.Va,"bytes_sent",a.length);a = Xc(a,16384);1 < a.length && this.va.send(String(a.length));for(var b=0;b < a.length;b++) this.va.send(a[b]);};h.cd = function(){this.zb = !0;this.Jc && (clearInterval(this.Jc),this.Jc = null);this.va && (this.va.close(),this.va = null);};h.ib = function(){this.zb || (this.f("WebSocket is closing itself"),this.cd(),this.jb && (this.jb(this.Gc),this.jb = null));};h.close = function(){this.zb || (this.f("WebSocket is being closed"),this.cd());};
function hh(a){clearInterval(a.Jc);a.Jc = setInterval(function(){a.va && a.va.send("0");hh(a);},Math.floor(45E3));};function jh(a){kh(this,a);}var lh=[Xg,fh];function kh(a,b){var c=fh && fh.isAvailable(),d=c && !(Dc.uf || !0 === Dc.get("previous_websocket_failure"));b.Tg && (c || Q("wss:// URL used, but browser isn't known to support websockets.  Trying anyway."),d = !0);if(d)a.ed = [fh];else {var e=a.ed = [];Yc(lh,function(a,b){b && b.isAvailable() && e.push(b);});}}function mh(a){if(0 < a.ed.length)return a.ed[0];throw Error("No transports available");};function nh(a,b,c,d,e,f){this.id = a;this.f = Oc("c:" + this.id + ":");this.hc = c;this.Vc = d;this.ka = e;this.Me = f;this.H = b;this.Jd = [];this.ef = 0;this.Nf = new jh(b);this.Ua = 0;this.f("Connection created");oh(this);}
function oh(a){var b=mh(a.Nf);a.L = new b("c:" + a.id + ":" + a.ef++,a.H);a.Qe = b.responsesRequiredToBeHealthy || 0;var c=ph(a,a.L),d=qh(a,a.L);a.fd = a.L;a.bd = a.L;a.F = null;a.Ab = !1;setTimeout(function(){a.L && a.L.open(c,d);},Math.floor(0));b = b.healthyTimeout || 0;0 < b && (a.vd = setTimeout(function(){a.vd = null;a.Ab || (a.L && 102400 < a.L.ob?(a.f("Connection exceeded healthy timeout but has received " + a.L.ob + " bytes.  Marking connection healthy."),a.Ab = !0,a.L.Bd()):a.L && 10240 < a.L.pb?a.f("Connection exceeded healthy timeout but has sent " + 
a.L.pb + " bytes.  Leaving connection alive."):(a.f("Closing unhealthy connection after timeout."),a.close()));},Math.floor(b)));}function qh(a,b){return function(c){b === a.L?(a.L = null,c || 0 !== a.Ua?1 === a.Ua && a.f("Realtime connection lost."):(a.f("Realtime connection failed."),"s-" === a.H.Oa.substr(0,2) && (Dc.remove("host:" + a.H.host),a.H.Oa = a.H.host)),a.close()):b === a.F?(a.f("Secondary connection lost."),c = a.F,a.F = null,a.fd !== c && a.bd !== c || a.close()):a.f("closing an old connection");};}
function ph(a,b){return function(c){if(2 != a.Ua)if(b === a.bd){var d=Vc("t",c);c = Vc("d",c);if("c" == d){if((d = Vc("t",c),"d" in c))if((c = c.d,"h" === d)){var d=c.ts,e=c.v,f=c.h;a.Vd = c.s;Fc(a.H,f);0 == a.Ua && (a.L.start(),rh(a,a.L,d),"5" !== e && Q("Protocol version mismatch detected"),c = a.Nf,(c = 1 < c.ed.length?c.ed[1]:null) && sh(a,c));}else if("n" === d){a.f("recvd end transmission on primary");a.bd = a.F;for(c = 0;c < a.Jd.length;++c) a.Fd(a.Jd[c]);a.Jd = [];th(a);}else "s" === d?(a.f("Connection shutdown command received. Shutting down..."),
a.Me && (a.Me(c),a.Me = null),a.ka = null,a.close()):"r" === d?(a.f("Reset packet received.  New host: " + c),Fc(a.H,c),1 === a.Ua?a.close():(uh(a),oh(a))):"e" === d?Pc("Server Error: " + c):"o" === d?(a.f("got pong on primary."),vh(a),wh(a)):Pc("Unknown control packet command: " + d);}else "d" == d && a.Fd(c);}else if(b === a.F)if((d = Vc("t",c),c = Vc("d",c),"c" == d))"t" in c && (c = c.t,"a" === c?xh(a):"r" === c?(a.f("Got a reset on secondary, closing it"),a.F.close(),a.fd !== a.F && a.bd !== a.F || a.close()):"o" === c && (a.f("got pong on secondary."),
a.Lf--,xh(a)));else if("d" == d)a.Jd.push(c);else throw Error("Unknown protocol layer: " + d);else a.f("message on old connection");};}nh.prototype.Da = function(a){yh(this,{t:"d",d:a});};function th(a){a.fd === a.F && a.bd === a.F && (a.f("cleaning up and promoting a connection: " + a.F.qe),a.L = a.F,a.F = null);}
function xh(a){0 >= a.Lf?(a.f("Secondary connection is healthy."),a.Ab = !0,a.F.Bd(),a.F.start(),a.f("sending client ack on secondary"),a.F.send({t:"c",d:{t:"a",d:{}}}),a.f("Ending transmission on primary"),a.L.send({t:"c",d:{t:"n",d:{}}}),a.fd = a.F,th(a)):(a.f("sending ping on secondary."),a.F.send({t:"c",d:{t:"p",d:{}}}));}nh.prototype.Fd = function(a){vh(this);this.hc(a);};function vh(a){a.Ab || (a.Qe--,0 >= a.Qe && (a.f("Primary connection is healthy."),a.Ab = !0,a.L.Bd()));}
function sh(a,b){a.F = new b("c:" + a.id + ":" + a.ef++,a.H,a.Vd);a.Lf = b.responsesRequiredToBeHealthy || 0;a.F.open(ph(a,a.F),qh(a,a.F));setTimeout(function(){a.F && (a.f("Timed out trying to upgrade."),a.F.close());},Math.floor(6E4));}function rh(a,b,c){a.f("Realtime connection established.");a.L = b;a.Ua = 1;a.Vc && (a.Vc(c),a.Vc = null);0 === a.Qe?(a.f("Primary connection is healthy."),a.Ab = !0):setTimeout(function(){wh(a);},Math.floor(5E3));}
function wh(a){a.Ab || 1 !== a.Ua || (a.f("sending ping on primary."),yh(a,{t:"c",d:{t:"p",d:{}}}));}function yh(a,b){if(1 !== a.Ua)throw "Connection is not connected";a.fd.send(b);}nh.prototype.close = function(){2 !== this.Ua && (this.f("Closing realtime connection."),this.Ua = 2,uh(this),this.ka && (this.ka(),this.ka = null));};function uh(a){a.f("Shutting down all connections");a.L && (a.L.close(),a.L = null);a.F && (a.F.close(),a.F = null);a.vd && (clearTimeout(a.vd),a.vd = null);};function zh(a,b,c,d){this.id = Ah++;this.f = Oc("p:" + this.id + ":");this.wf = this.De = !1;this.aa = {};this.pa = [];this.Xc = 0;this.Uc = [];this.ma = !1;this.$a = 1E3;this.Cd = 3E5;this.Gb = b;this.Tc = c;this.Ne = d;this.H = a;this.We = null;this.Qd = {};this.Ig = 0;this.mf = !0;this.Kc = this.Fe = null;Bh(this,0);Mf.ub().Eb("visible",this.zg,this);-1 === a.host.indexOf("fblocal") && Lf.ub().Eb("online",this.xg,this);}var Ah=0,Ch=0;h = zh.prototype;
h.Da = function(a,b,c){var d=++this.Ig;a = {r:d,a:a,b:b};this.f(B(a));J(this.ma,"sendRequest call when we're not connected not allowed.");this.Sa.Da(a);c && (this.Qd[d] = c);};h.xf = function(a,b,c,d){var e=a.wa(),f=a.path.toString();this.f("Listen called for " + f + " " + e);this.aa[f] = this.aa[f] || {};J(!this.aa[f][e],"listen() called twice for same path/queryId.");a = {J:d,ud:b,Fg:a,tag:c};this.aa[f][e] = a;this.ma && Dh(this,a);};
function Dh(a,b){var c=b.Fg,d=c.path.toString(),e=c.wa();a.f("Listen on " + d + " for " + e);var f={p:d};b.tag && (f.q = ce(c.o),f.t = b.tag);f.h = b.ud();a.Da("q",f,function(f){var k=f.d,l=f.s;if(k && "object" === typeof k && u(k,"w")){var m=w(k,"w");ea(m) && 0 <= Na(m,"no_index") && Q("Using an unspecified index. Consider adding " + ("\".indexOn\": \"" + c.o.g.toString() + "\"") + " at " + c.path.toString() + " to your security rules for better performance");}(a.aa[d] && a.aa[d][e]) === b && (a.f("listen response",f),"ok" !== l && Eh(a,d,e),b.J && 
b.J(l,k));});}h.P = function(a,b,c){this.Fa = {fg:a,nf:!1,yc:b,jd:c};this.f("Authenticating using credential: " + a);Fh(this);(b = 40 == a.length) || (a = ad(a).Ac,b = "object" === typeof a && !0 === w(a,"admin"));b && (this.f("Admin auth credential detected.  Reducing max reconnect time."),this.Cd = 3E4);};h.ee = function(a){delete this.Fa;this.ma && this.Da("unauth",{},function(b){a(b.s,b.d);});};
function Fh(a){var b=a.Fa;a.ma && b && a.Da("auth",{cred:b.fg},function(c){var d=c.s;c = c.d || "error";"ok" !== d && a.Fa === b && delete a.Fa;b.nf?"ok" !== d && b.jd && b.jd(d,c):(b.nf = !0,b.yc && b.yc(d,c));});}h.Of = function(a,b){var c=a.path.toString(),d=a.wa();this.f("Unlisten called for " + c + " " + d);if(Eh(this,c,d) && this.ma){var e=ce(a.o);this.f("Unlisten on " + c + " for " + d);c = {p:c};b && (c.q = e,c.t = b);this.Da("n",c);}};h.Le = function(a,b,c){this.ma?Gh(this,"o",a,b,c):this.Uc.push({Zc:a,action:"o",data:b,J:c});};
h.Bf = function(a,b,c){this.ma?Gh(this,"om",a,b,c):this.Uc.push({Zc:a,action:"om",data:b,J:c});};h.Gd = function(a,b){this.ma?Gh(this,"oc",a,null,b):this.Uc.push({Zc:a,action:"oc",data:null,J:b});};function Gh(a,b,c,d,e){c = {p:c,d:d};a.f("onDisconnect " + b,c);a.Da(b,c,function(a){e && setTimeout(function(){e(a.s,a.d);},Math.floor(0));});}h.put = function(a,b,c,d){Hh(this,"p",a,b,c,d);};h.yf = function(a,b,c,d){Hh(this,"m",a,b,c,d);};
function Hh(a,b,c,d,e,f){d = {p:c,d:d};n(f) && (d.h = f);a.pa.push({action:b,If:d,J:e});a.Xc++;b = a.pa.length - 1;a.ma?Ih(a,b):a.f("Buffering put: " + c);}function Ih(a,b){var c=a.pa[b].action,d=a.pa[b].If,e=a.pa[b].J;a.pa[b].Gg = a.ma;a.Da(c,d,function(d){a.f(c + " response",d);delete a.pa[b];a.Xc--;0 === a.Xc && (a.pa = []);e && e(d.s,d.d);});}h.Te = function(a){this.ma && (a = {c:a},this.f("reportStats",a),this.Da("s",a,function(a){"ok" !== a.s && this.f("reportStats","Error sending stats: " + a.d);}));};
h.Fd = function(a){if("r" in a){this.f("from server: " + B(a));var b=a.r,c=this.Qd[b];c && (delete this.Qd[b],c(a.b));}else {if("error" in a)throw "A server-side error has occurred: " + a.error;"a" in a && (b = a.a,c = a.b,this.f("handleServerMessage",b,c),"d" === b?this.Gb(c.p,c.d,!1,c.t):"m" === b?this.Gb(c.p,c.d,!0,c.t):"c" === b?Jh(this,c.p,c.q):"ac" === b?(a = c.s,b = c.d,c = this.Fa,delete this.Fa,c && c.jd && c.jd(a,b)):"sd" === b?this.We?this.We(c):"msg" in c && "undefined" !== typeof console && console.log("FIREBASE: " + c.msg.replace("\n",
"\nFIREBASE: ")):Pc("Unrecognized action received from server: " + B(b) + "\nAre you using the latest client?"));}};h.Vc = function(a){this.f("connection ready");this.ma = !0;this.Kc = new Date().getTime();this.Ne({serverTimeOffset:a - new Date().getTime()});this.mf && (a = {},a["sdk.js." + "2.2.7".replace(/\./g,"-")] = 1,ng() && (a["framework.cordova"] = 1),this.Te(a));Kh(this);this.mf = !1;this.Tc(!0);};
function Bh(a,b){J(!a.Sa,"Scheduling a connect when we're already connected/ing?");a.Sb && clearTimeout(a.Sb);a.Sb = setTimeout(function(){a.Sb = null;Lh(a);},Math.floor(b));}h.zg = function(a){a && !this.uc && this.$a === this.Cd && (this.f("Window became visible.  Reducing delay."),this.$a = 1E3,this.Sa || Bh(this,0));this.uc = a;};h.xg = function(a){a?(this.f("Browser went online."),this.$a = 1E3,this.Sa || Bh(this,0)):(this.f("Browser went offline.  Killing connection."),this.Sa && this.Sa.close());};
h.Cf = function(){this.f("data client disconnected");this.ma = !1;this.Sa = null;for(var a=0;a < this.pa.length;a++) {var b=this.pa[a];b && "h" in b.If && b.Gg && (b.J && b.J("disconnect"),delete this.pa[a],this.Xc--);}0 === this.Xc && (this.pa = []);this.Qd = {};Mh(this) && (this.uc?this.Kc && (3E4 < new Date().getTime() - this.Kc && (this.$a = 1E3),this.Kc = null):(this.f("Window isn't visible.  Delaying reconnect."),this.$a = this.Cd,this.Fe = new Date().getTime()),a = Math.max(0,this.$a - (new Date().getTime() - this.Fe)),a *= Math.random(),this.f("Trying to reconnect in " + 
a + "ms"),Bh(this,a),this.$a = Math.min(this.Cd,1.3 * this.$a));this.Tc(!1);};function Lh(a){if(Mh(a)){a.f("Making a connection attempt");a.Fe = new Date().getTime();a.Kc = null;var b=q(a.Fd,a),c=q(a.Vc,a),d=q(a.Cf,a),e=a.id + ":" + Ch++;a.Sa = new nh(e,a.H,b,c,d,function(b){Q(b + " (" + a.H.toString() + ")");a.wf = !0;});}}h.yb = function(){this.De = !0;this.Sa?this.Sa.close():(this.Sb && (clearTimeout(this.Sb),this.Sb = null),this.ma && this.Cf());};h.qc = function(){this.De = !1;this.$a = 1E3;this.Sa || Bh(this,0);};
function Jh(a,b,c){c = c?Qa(c,function(a){return Wc(a);}).join("$"):"default";(a = Eh(a,b,c)) && a.J && a.J("permission_denied");}function Eh(a,b,c){b = new K(b).toString();var d;n(a.aa[b])?(d = a.aa[b][c],delete a.aa[b][c],0 === pa(a.aa[b]) && delete a.aa[b]):d = void 0;return d;}function Kh(a){Fh(a);r(a.aa,function(b){r(b,function(b){Dh(a,b);});});for(var b=0;b < a.pa.length;b++) a.pa[b] && Ih(a,b);for(;a.Uc.length;) b = a.Uc.shift(),Gh(a,b.action,b.Zc,b.data,b.J);}function Mh(a){var b;b = Lf.ub().ic;return !a.wf && !a.De && b;};var V={lg:function(){Yg = gh = !0;}};V.forceLongPolling = V.lg;V.mg = function(){Zg = !0;};V.forceWebSockets = V.mg;V.Mg = function(a,b){a.k.Ra.We = b;};V.setSecurityDebugCallback = V.Mg;V.Ye = function(a,b){a.k.Ye(b);};V.stats = V.Ye;V.Ze = function(a,b){a.k.Ze(b);};V.statsIncrementCounter = V.Ze;V.pd = function(a){return a.k.pd;};V.dataUpdateCount = V.pd;V.pg = function(a,b){a.k.Ce = b;};V.interceptServerData = V.pg;V.vg = function(a){new xg(a);};V.onPopupOpen = V.vg;V.Kg = function(a){hg = a;};V.setAuthenticationServer = V.Kg;function S(a,b,c){this.B = a;this.V = b;this.g = c;}S.prototype.K = function(){x("Firebase.DataSnapshot.val",0,0,arguments.length);return this.B.K();};S.prototype.val = S.prototype.K;S.prototype.lf = function(){x("Firebase.DataSnapshot.exportVal",0,0,arguments.length);return this.B.K(!0);};S.prototype.exportVal = S.prototype.lf;S.prototype.kg = function(){x("Firebase.DataSnapshot.exists",0,0,arguments.length);return !this.B.e();};S.prototype.exists = S.prototype.kg;
S.prototype.w = function(a){x("Firebase.DataSnapshot.child",0,1,arguments.length);ga(a) && (a = String(a));Yf("Firebase.DataSnapshot.child",a);var b=new K(a),c=this.V.w(b);return new S(this.B.oa(b),c,M);};S.prototype.child = S.prototype.w;S.prototype.Ha = function(a){x("Firebase.DataSnapshot.hasChild",1,1,arguments.length);Yf("Firebase.DataSnapshot.hasChild",a);var b=new K(a);return !this.B.oa(b).e();};S.prototype.hasChild = S.prototype.Ha;
S.prototype.A = function(){x("Firebase.DataSnapshot.getPriority",0,0,arguments.length);return this.B.A().K();};S.prototype.getPriority = S.prototype.A;S.prototype.forEach = function(a){x("Firebase.DataSnapshot.forEach",1,1,arguments.length);A("Firebase.DataSnapshot.forEach",1,a,!1);if(this.B.N())return !1;var b=this;return !!this.B.U(this.g,function(c,d){return a(new S(d,b.V.w(c),M));});};S.prototype.forEach = S.prototype.forEach;
S.prototype.td = function(){x("Firebase.DataSnapshot.hasChildren",0,0,arguments.length);return this.B.N()?!1:!this.B.e();};S.prototype.hasChildren = S.prototype.td;S.prototype.name = function(){Q("Firebase.DataSnapshot.name() being deprecated. Please use Firebase.DataSnapshot.key() instead.");x("Firebase.DataSnapshot.name",0,0,arguments.length);return this.key();};S.prototype.name = S.prototype.name;S.prototype.key = function(){x("Firebase.DataSnapshot.key",0,0,arguments.length);return this.V.key();};
S.prototype.key = S.prototype.key;S.prototype.Db = function(){x("Firebase.DataSnapshot.numChildren",0,0,arguments.length);return this.B.Db();};S.prototype.numChildren = S.prototype.Db;S.prototype.lc = function(){x("Firebase.DataSnapshot.ref",0,0,arguments.length);return this.V;};S.prototype.ref = S.prototype.lc;function Nh(a,b){this.H = a;this.Va = Ob(a);this.ea = new ub();this.Ed = 1;this.Ra = null;b || 0 <= ("object" === typeof window && window.navigator && window.navigator.userAgent || "").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)?(this.ca = new Ae(this.H,q(this.Gb,this)),setTimeout(q(this.Tc,this,!0),0)):this.ca = this.Ra = new zh(this.H,q(this.Gb,this),q(this.Tc,this),q(this.Ne,this));this.Pg = Pb(a,q(function(){return new Jb(this.Va,this.ca);},this));this.tc = new Cf();this.Be = 
new nb();var c=this;this.zd = new gf({Xe:function(a,b,f,g){b = [];f = c.Be.j(a.path);f.e() || (b = jf(c.zd,new Ub(ze,a.path,f)),setTimeout(function(){g("ok");},0));return b;},Zd:ba});Oh(this,"connected",!1);this.ka = new qc();this.P = new Hg(a,q(this.ca.P,this.ca),q(this.ca.ee,this.ca),q(this.Ke,this));this.pd = 0;this.Ce = null;this.O = new gf({Xe:function(a,b,f,g){c.ca.xf(a,f,b,function(b,e){var f=g(b,e);zb(c.ea,a.path,f);});return [];},Zd:function(a,b){c.ca.Of(a,b);}});}h = Nh.prototype;
h.toString = function(){return (this.H.lb?"https://":"http://") + this.H.host;};h.name = function(){return this.H.Cb;};function Ph(a){a = a.Be.j(new K(".info/serverTimeOffset")).K() || 0;return new Date().getTime() + a;}function Qh(a){a = a = {timestamp:Ph(a)};a.timestamp = a.timestamp || new Date().getTime();return a;}
h.Gb = function(a,b,c,d){this.pd++;var e=new K(a);b = this.Ce?this.Ce(a,b):b;a = [];d?c?(b = na(b,function(a){return L(a);}),a = rf(this.O,e,b,d)):(b = L(b),a = nf(this.O,e,b,d)):c?(d = na(b,function(a){return L(a);}),a = mf(this.O,e,d)):(d = L(b),a = jf(this.O,new Ub(ze,e,d)));d = e;0 < a.length && (d = Rh(this,e));zb(this.ea,d,a);};h.Tc = function(a){Oh(this,"connected",a);!1 === a && Sh(this);};h.Ne = function(a){var b=this;Yc(a,function(a,d){Oh(b,d,a);});};h.Ke = function(a){Oh(this,"authenticated",a);};
function Oh(a,b,c){b = new K("/.info/" + b);c = L(c);var d=a.Be;d.Sd = d.Sd.G(b,c);c = jf(a.zd,new Ub(ze,b,c));zb(a.ea,b,c);}h.Kb = function(a,b,c,d){this.f("set",{path:a.toString(),value:b,Xg:c});var e=Qh(this);b = L(b,c);var e=sc(b,e),f=this.Ed++,e=hf(this.O,a,e,f,!0);vb(this.ea,e);var g=this;this.ca.put(a.toString(),b.K(!0),function(b,c){var e="ok" === b;e || Q("set at " + a + " failed: " + b);e = lf(g.O,f,!e);zb(g.ea,a,e);Th(d,b,c);});e = Uh(this,a);Rh(this,e);zb(this.ea,e,[]);};
h.update = function(a,b,c){this.f("update",{path:a.toString(),value:b});var d=!0,e=Qh(this),f={};r(b,function(a,b){d = !1;var c=L(a);f[b] = sc(c,e);});if(d)Bb("update() called with empty data.  Don't do anything."),Th(c,"ok");else {var g=this.Ed++,k=kf(this.O,a,f,g);vb(this.ea,k);var l=this;this.ca.yf(a.toString(),b,function(b,d){var e="ok" === b;e || Q("update at " + a + " failed: " + b);var e=lf(l.O,g,!e),f=a;0 < e.length && (f = Rh(l,a));zb(l.ea,f,e);Th(c,b,d);});b = Uh(this,a);Rh(this,b);zb(this.ea,a,[]);}};
function Sh(a){a.f("onDisconnectEvents");var b=Qh(a),c=[];rc(pc(a.ka,b),F,function(b,e){c = c.concat(jf(a.O,new Ub(ze,b,e)));var f=Uh(a,b);Rh(a,f);});a.ka = new qc();zb(a.ea,F,c);}h.Gd = function(a,b){var c=this;this.ca.Gd(a.toString(),function(d,e){"ok" === d && gg(c.ka,a);Th(b,d,e);});};function Vh(a,b,c,d){var e=L(c);a.ca.Le(b.toString(),e.K(!0),function(c,g){"ok" === c && a.ka.mc(b,e);Th(d,c,g);});}function Wh(a,b,c,d,e){var f=L(c,d);a.ca.Le(b.toString(),f.K(!0),function(c,d){"ok" === c && a.ka.mc(b,f);Th(e,c,d);});}
function Xh(a,b,c,d){var e=!0,f;for(f in c) e = !1;e?(Bb("onDisconnect().update() called with empty data.  Don't do anything."),Th(d,"ok")):a.ca.Bf(b.toString(),c,function(e,f){if("ok" === e)for(var l in c) {var m=L(c[l]);a.ka.mc(b.w(l),m);}Th(d,e,f);});}function Yh(a,b,c){c = ".info" === O(b.path)?a.zd.Ob(b,c):a.O.Ob(b,c);xb(a.ea,b.path,c);}h.yb = function(){this.Ra && this.Ra.yb();};h.qc = function(){this.Ra && this.Ra.qc();};
h.Ye = function(a){if("undefined" !== typeof console){a?(this.Yd || (this.Yd = new Ib(this.Va)),a = this.Yd.get()):a = this.Va.get();var b=Ra(sa(a),function(a,b){return Math.max(b.length,a);},0),c;for(c in a) {for(var d=a[c],e=c.length;e < b + 2;e++) c += " ";console.log(c + d);}}};h.Ze = function(a){Lb(this.Va,a);this.Pg.Mf[a] = !0;};h.f = function(a){var b="";this.Ra && (b = this.Ra.id + ":");Bb(b,arguments);};
function Th(a,b,c){a && Cb(function(){if("ok" == b)a(null);else {var d=(b || "error").toUpperCase(),e=d;c && (e += ": " + c);e = Error(e);e.code = d;a(e);}});};function Zh(a,b,c,d,e){function f(){}a.f("transaction on " + b);var g=new U(a,b);g.Eb("value",f);c = {path:b,update:c,J:d,status:null,Ef:Gc(),cf:e,Kf:0,ge:function(){g.gc("value",f);},je:null,Aa:null,md:null,nd:null,od:null};d = a.O.ua(b,void 0) || C;c.md = d;d = c.update(d.K());if(n(d)){Tf("transaction failed: Data returned ",d,c.path);c.status = 1;e = Df(a.tc,b);var k=e.Ba() || [];k.push(c);Ef(e,k);"object" === typeof d && null !== d && u(d,".priority")?(k = w(d,".priority"),J(Rf(k),"Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.")):
k = (a.O.ua(b) || C).A().K();e = Qh(a);d = L(d,k);e = sc(d,e);c.nd = d;c.od = e;c.Aa = a.Ed++;c = hf(a.O,b,e,c.Aa,c.cf);zb(a.ea,b,c);$h(a);}else c.ge(),c.nd = null,c.od = null,c.J && (a = new S(c.md,new U(a,c.path),M),c.J(null,!1,a));}function $h(a,b){var c=b || a.tc;b || ai(a,c);if(null !== c.Ba()){var d=bi(a,c);J(0 < d.length,"Sending zero length transaction queue");Sa(d,function(a){return 1 === a.status;}) && ci(a,c.path(),d);}else c.td() && c.U(function(b){$h(a,b);});}
function ci(a,b,c){for(var d=Qa(c,function(a){return a.Aa;}),e=a.O.ua(b,d) || C,d=e,e=e.hash(),f=0;f < c.length;f++) {var g=c[f];J(1 === g.status,"tryToSendTransactionQueue_: items in queue should all be run.");g.status = 2;g.Kf++;var k=N(b,g.path),d=d.G(k,g.nd);}d = d.K(!0);a.ca.put(b.toString(),d,function(d){a.f("transaction put response",{path:b.toString(),status:d});var e=[];if("ok" === d){d = [];for(f = 0;f < c.length;f++) {c[f].status = 3;e = e.concat(lf(a.O,c[f].Aa));if(c[f].J){var g=c[f].od,k=new U(a,c[f].path);d.push(q(c[f].J,
null,null,!0,new S(g,k,M)));}c[f].ge();}ai(a,Df(a.tc,b));$h(a);zb(a.ea,b,e);for(f = 0;f < d.length;f++) Cb(d[f]);}else {if("datastale" === d)for(f = 0;f < c.length;f++) c[f].status = 4 === c[f].status?5:1;else for(Q("transaction at " + b.toString() + " failed: " + d),f = 0;f < c.length;f++) c[f].status = 5,c[f].je = d;Rh(a,b);}},e);}function Rh(a,b){var c=di(a,b),d=c.path(),c=bi(a,c);ei(a,c,d);return d;}
function ei(a,b,c){if(0 !== b.length){for(var d=[],e=[],f=Qa(b,function(a){return a.Aa;}),g=0;g < b.length;g++) {var k=b[g],l=N(c,k.path),m=!1,v;J(null !== l,"rerunTransactionsUnderNode_: relativePath should not be null.");if(5 === k.status)m = !0,v = k.je,e = e.concat(lf(a.O,k.Aa,!0));else if(1 === k.status)if(25 <= k.Kf)m = !0,v = "maxretry",e = e.concat(lf(a.O,k.Aa,!0));else {var y=a.O.ua(k.path,f) || C;k.md = y;var I=b[g].update(y.K());n(I)?(Tf("transaction failed: Data returned ",I,k.path),l = L(I),"object" === typeof I && null != 
I && u(I,".priority") || (l = l.da(y.A())),y = k.Aa,I = Qh(a),I = sc(l,I),k.nd = l,k.od = I,k.Aa = a.Ed++,Va(f,y),e = e.concat(hf(a.O,k.path,I,k.Aa,k.cf)),e = e.concat(lf(a.O,y,!0))):(m = !0,v = "nodata",e = e.concat(lf(a.O,k.Aa,!0)));}zb(a.ea,c,e);e = [];m && (b[g].status = 3,setTimeout(b[g].ge,Math.floor(0)),b[g].J && ("nodata" === v?(k = new U(a,b[g].path),d.push(q(b[g].J,null,null,!1,new S(b[g].md,k,M)))):d.push(q(b[g].J,null,Error(v),!1,null))));}ai(a,a.tc);for(g = 0;g < d.length;g++) Cb(d[g]);$h(a);}}
function di(a,b){for(var c,d=a.tc;null !== (c = O(b)) && null === d.Ba();) d = Df(d,c),b = G(b);return d;}function bi(a,b){var c=[];fi(a,b,c);c.sort(function(a,b){return a.Ef - b.Ef;});return c;}function fi(a,b,c){var d=b.Ba();if(null !== d)for(var e=0;e < d.length;e++) c.push(d[e]);b.U(function(b){fi(a,b,c);});}function ai(a,b){var c=b.Ba();if(c){for(var d=0,e=0;e < c.length;e++) 3 !== c[e].status && (c[d] = c[e],d++);c.length = d;Ef(b,0 < c.length?c:null);}b.U(function(b){ai(a,b);});}
function Uh(a,b){var c=di(a,b).path(),d=Df(a.tc,b);Hf(d,function(b){gi(a,b);});gi(a,d);Gf(d,function(b){gi(a,b);});return c;}
function gi(a,b){var c=b.Ba();if(null !== c){for(var d=[],e=[],f=-1,g=0;g < c.length;g++) 4 !== c[g].status && (2 === c[g].status?(J(f === g - 1,"All SENT items should be at beginning of queue."),f = g,c[g].status = 4,c[g].je = "set"):(J(1 === c[g].status,"Unexpected transaction status in abort"),c[g].ge(),e = e.concat(lf(a.O,c[g].Aa,!0)),c[g].J && d.push(q(c[g].J,null,Error("set"),!1,null))));-1 === f?Ef(b,null):c.length = f + 1;zb(a.ea,b.path(),e);for(g = 0;g < d.length;g++) Cb(d[g]);}};function W(){this.nc = {};this.Pf = !1;}ca(W);W.prototype.yb = function(){for(var a in this.nc) this.nc[a].yb();};W.prototype.interrupt = W.prototype.yb;W.prototype.qc = function(){for(var a in this.nc) this.nc[a].qc();};W.prototype.resume = W.prototype.qc;W.prototype.ue = function(){this.Pf = !0;};function X(a,b){this.ad = a;this.qa = b;}X.prototype.cancel = function(a){x("Firebase.onDisconnect().cancel",0,1,arguments.length);A("Firebase.onDisconnect().cancel",1,a,!0);this.ad.Gd(this.qa,a || null);};X.prototype.cancel = X.prototype.cancel;X.prototype.remove = function(a){x("Firebase.onDisconnect().remove",0,1,arguments.length);Zf("Firebase.onDisconnect().remove",this.qa);A("Firebase.onDisconnect().remove",1,a,!0);Vh(this.ad,this.qa,null,a);};X.prototype.remove = X.prototype.remove;
X.prototype.set = function(a,b){x("Firebase.onDisconnect().set",1,2,arguments.length);Zf("Firebase.onDisconnect().set",this.qa);Sf("Firebase.onDisconnect().set",a,this.qa,!1);A("Firebase.onDisconnect().set",2,b,!0);Vh(this.ad,this.qa,a,b);};X.prototype.set = X.prototype.set;
X.prototype.Kb = function(a,b,c){x("Firebase.onDisconnect().setWithPriority",2,3,arguments.length);Zf("Firebase.onDisconnect().setWithPriority",this.qa);Sf("Firebase.onDisconnect().setWithPriority",a,this.qa,!1);Vf("Firebase.onDisconnect().setWithPriority",2,b);A("Firebase.onDisconnect().setWithPriority",3,c,!0);Wh(this.ad,this.qa,a,b,c);};X.prototype.setWithPriority = X.prototype.Kb;
X.prototype.update = function(a,b){x("Firebase.onDisconnect().update",1,2,arguments.length);Zf("Firebase.onDisconnect().update",this.qa);if(ea(a)){for(var c={},d=0;d < a.length;++d) c["" + d] = a[d];a = c;Q("Passing an Array to Firebase.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.");}Uf("Firebase.onDisconnect().update",a,this.qa);A("Firebase.onDisconnect().update",2,b,!0);
Xh(this.ad,this.qa,a,b);};X.prototype.update = X.prototype.update;function Y(a,b,c,d){this.k = a;this.path = b;this.o = c;this.jc = d;}
function hi(a){var b=null,c=null;a.la && (b = od(a));a.na && (c = qd(a));if(a.g === Vd){if(a.la){if("[MIN_NAME]" != nd(a))throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if("string" !== typeof b)throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");}if(a.na){if("[MAX_NAME]" != pd(a))throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");if("string" !== 
typeof c)throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");}}else if(a.g === M){if(null != b && !Rf(b) || null != c && !Rf(c))throw Error("Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).");}else if((J(a.g instanceof Rd || a.g === Yd,"unknown index type."),null != b && "object" === typeof b || null != c && "object" === typeof c))throw Error("Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.");}
function ii(a){if(a.la && a.na && a.ia && (!a.ia || "" === a.Nb))throw Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");}function ji(a,b){if(!0 === a.jc)throw Error(b + ": You can't combine multiple orderBy calls.");}Y.prototype.lc = function(){x("Query.ref",0,0,arguments.length);return new U(this.k,this.path);};Y.prototype.ref = Y.prototype.lc;
Y.prototype.Eb = function(a,b,c,d){x("Query.on",2,4,arguments.length);Wf("Query.on",a,!1);A("Query.on",2,b,!1);var e=ki("Query.on",c,d);if("value" === a)Yh(this.k,this,new jd(b,e.cancel || null,e.Ma || null));else {var f={};f[a] = b;Yh(this.k,this,new kd(f,e.cancel,e.Ma));}return b;};Y.prototype.on = Y.prototype.Eb;
Y.prototype.gc = function(a,b,c){x("Query.off",0,3,arguments.length);Wf("Query.off",a,!0);A("Query.off",2,b,!0);lb("Query.off",3,c);var d=null,e=null;"value" === a?d = new jd(b || null,null,c || null):a && (b && (e = {},e[a] = b),d = new kd(e,null,c || null));e = this.k;d = ".info" === O(this.path)?e.zd.kb(this,d):e.O.kb(this,d);xb(e.ea,this.path,d);};Y.prototype.off = Y.prototype.gc;
Y.prototype.Ag = function(a,b){function c(g){f && (f = !1,e.gc(a,c),b.call(d.Ma,g));}x("Query.once",2,4,arguments.length);Wf("Query.once",a,!1);A("Query.once",2,b,!1);var d=ki("Query.once",arguments[2],arguments[3]),e=this,f=!0;this.Eb(a,c,function(b){e.gc(a,c);d.cancel && d.cancel.call(d.Ma,b);});};Y.prototype.once = Y.prototype.Ag;
Y.prototype.Ge = function(a){Q("Query.limit() being deprecated. Please use Query.limitToFirst() or Query.limitToLast() instead.");x("Query.limit",1,1,arguments.length);if(!ga(a) || Math.floor(a) !== a || 0 >= a)throw Error("Query.limit: First argument must be a positive integer.");if(this.o.ia)throw Error("Query.limit: Limit was already set (by another call to limit, limitToFirst, orlimitToLast.");var b=this.o.Ge(a);ii(b);return new Y(this.k,this.path,b,this.jc);};Y.prototype.limit = Y.prototype.Ge;
Y.prototype.He = function(a){x("Query.limitToFirst",1,1,arguments.length);if(!ga(a) || Math.floor(a) !== a || 0 >= a)throw Error("Query.limitToFirst: First argument must be a positive integer.");if(this.o.ia)throw Error("Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new Y(this.k,this.path,this.o.He(a),this.jc);};Y.prototype.limitToFirst = Y.prototype.He;
Y.prototype.Ie = function(a){x("Query.limitToLast",1,1,arguments.length);if(!ga(a) || Math.floor(a) !== a || 0 >= a)throw Error("Query.limitToLast: First argument must be a positive integer.");if(this.o.ia)throw Error("Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");return new Y(this.k,this.path,this.o.Ie(a),this.jc);};Y.prototype.limitToLast = Y.prototype.Ie;
Y.prototype.Bg = function(a){x("Query.orderByChild",1,1,arguments.length);if("$key" === a)throw Error("Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.");if("$priority" === a)throw Error("Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.");if("$value" === a)throw Error("Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.");Xf("Query.orderByChild",1,a,!1);ji(this,"Query.orderByChild");var b=be(this.o,new Rd(a));hi(b);return new Y(this.k,
this.path,b,!0);};Y.prototype.orderByChild = Y.prototype.Bg;Y.prototype.Cg = function(){x("Query.orderByKey",0,0,arguments.length);ji(this,"Query.orderByKey");var a=be(this.o,Vd);hi(a);return new Y(this.k,this.path,a,!0);};Y.prototype.orderByKey = Y.prototype.Cg;Y.prototype.Dg = function(){x("Query.orderByPriority",0,0,arguments.length);ji(this,"Query.orderByPriority");var a=be(this.o,M);hi(a);return new Y(this.k,this.path,a,!0);};Y.prototype.orderByPriority = Y.prototype.Dg;
Y.prototype.Eg = function(){x("Query.orderByValue",0,0,arguments.length);ji(this,"Query.orderByValue");var a=be(this.o,Yd);hi(a);return new Y(this.k,this.path,a,!0);};Y.prototype.orderByValue = Y.prototype.Eg;
Y.prototype.Xd = function(a,b){x("Query.startAt",0,2,arguments.length);Sf("Query.startAt",a,this.path,!0);Xf("Query.startAt",2,b,!0);var c=this.o.Xd(a,b);ii(c);hi(c);if(this.o.la)throw Error("Query.startAt: Starting point was already set (by another call to startAt or equalTo).");n(a) || (b = a = null);return new Y(this.k,this.path,c,this.jc);};Y.prototype.startAt = Y.prototype.Xd;
Y.prototype.qd = function(a,b){x("Query.endAt",0,2,arguments.length);Sf("Query.endAt",a,this.path,!0);Xf("Query.endAt",2,b,!0);var c=this.o.qd(a,b);ii(c);hi(c);if(this.o.na)throw Error("Query.endAt: Ending point was already set (by another call to endAt or equalTo).");return new Y(this.k,this.path,c,this.jc);};Y.prototype.endAt = Y.prototype.qd;
Y.prototype.hg = function(a,b){x("Query.equalTo",1,2,arguments.length);Sf("Query.equalTo",a,this.path,!1);Xf("Query.equalTo",2,b,!0);if(this.o.la)throw Error("Query.equalTo: Starting point was already set (by another call to endAt or equalTo).");if(this.o.na)throw Error("Query.equalTo: Ending point was already set (by another call to endAt or equalTo).");return this.Xd(a,b).qd(a,b);};Y.prototype.equalTo = Y.prototype.hg;
Y.prototype.toString = function(){x("Query.toString",0,0,arguments.length);for(var a=this.path,b="",c=a.Y;c < a.n.length;c++) "" !== a.n[c] && (b += "/" + encodeURIComponent(String(a.n[c])));return this.k.toString() + (b || "/");};Y.prototype.toString = Y.prototype.toString;Y.prototype.wa = function(){var a=Wc(ce(this.o));return "{}" === a?"default":a;};
function ki(a,b,c){var d={cancel:null,Ma:null};if(b && c)d.cancel = b,A(a,3,d.cancel,!0),d.Ma = c,lb(a,4,d.Ma);else if(b)if("object" === typeof b && null !== b)d.Ma = b;else if("function" === typeof b)d.cancel = b;else throw Error(z(a,3,!0) + " must either be a cancel callback or a context object.");return d;};var Z={};Z.vc = zh;Z.DataConnection = Z.vc;zh.prototype.Og = function(a,b){this.Da("q",{p:a},b);};Z.vc.prototype.simpleListen = Z.vc.prototype.Og;zh.prototype.gg = function(a,b){this.Da("echo",{d:a},b);};Z.vc.prototype.echo = Z.vc.prototype.gg;zh.prototype.interrupt = zh.prototype.yb;Z.Sf = nh;Z.RealTimeConnection = Z.Sf;nh.prototype.sendRequest = nh.prototype.Da;nh.prototype.close = nh.prototype.close;
Z.og = function(a){var b=zh.prototype.put;zh.prototype.put = function(c,d,e,f){n(f) && (f = a());b.call(this,c,d,e,f);};return function(){zh.prototype.put = b;};};Z.hijackHash = Z.og;Z.Rf = Ec;Z.ConnectionTarget = Z.Rf;Z.wa = function(a){return a.wa();};Z.queryIdentifier = Z.wa;Z.qg = function(a){return a.k.Ra.aa;};Z.listens = Z.qg;Z.ue = function(a){a.ue();};Z.forceRestClient = Z.ue;function U(a,b){var c,d,e;if(a instanceof Nh)c = a,d = b;else {x("new Firebase",1,2,arguments.length);d = Rc(arguments[0]);c = d.Qg;"firebase" === d.domain && Qc(d.host + " is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead");c && "undefined" != c || Qc("Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com");d.lb || "undefined" !== typeof window && window.location && window.location.protocol && -1 !== window.location.protocol.indexOf("https:") && Q("Insecure Firebase access from a secure page. Please use https in calls to new Firebase().");
c = new Ec(d.host,d.lb,c,"ws" === d.scheme || "wss" === d.scheme);d = new K(d.Zc);e = d.toString();var f;!(f = !p(c.host) || 0 === c.host.length || !Qf(c.Cb)) && (f = 0 !== e.length) && (e && (e = e.replace(/^\/*\.info(\/|$)/,"/")),f = !(p(e) && 0 !== e.length && !Of.test(e)));if(f)throw Error(z("new Firebase",1,!1) + "must be a valid firebase URL and the path can't contain \".\", \"#\", \"$\", \"[\", or \"]\".");if(b)if(b instanceof W)e = b;else if(p(b))e = W.ub(),c.Ld = b;else throw Error("Expected a valid Firebase.Context for second argument to new Firebase()");else 
e = W.ub();f = c.toString();var g=w(e.nc,f);g || (g = new Nh(c,e.Pf),e.nc[f] = g);c = g;}Y.call(this,c,d,$d,!1);}ma(U,Y);var li=U,mi=["Firebase"],ni=aa;mi[0] in ni || !ni.execScript || ni.execScript("var " + mi[0]);for(var oi;mi.length && (oi = mi.shift());) !mi.length && n(li)?ni[oi] = li:ni = ni[oi]?ni[oi]:ni[oi] = {};U.prototype.name = function(){Q("Firebase.name() being deprecated. Please use Firebase.key() instead.");x("Firebase.name",0,0,arguments.length);return this.key();};U.prototype.name = U.prototype.name;
U.prototype.key = function(){x("Firebase.key",0,0,arguments.length);return this.path.e()?null:vc(this.path);};U.prototype.key = U.prototype.key;U.prototype.w = function(a){x("Firebase.child",1,1,arguments.length);if(ga(a))a = String(a);else if(!(a instanceof K))if(null === O(this.path)){var b=a;b && (b = b.replace(/^\/*\.info(\/|$)/,"/"));Yf("Firebase.child",b);}else Yf("Firebase.child",a);return new U(this.k,this.path.w(a));};U.prototype.child = U.prototype.w;
U.prototype.parent = function(){x("Firebase.parent",0,0,arguments.length);var a=this.path.parent();return null === a?null:new U(this.k,a);};U.prototype.parent = U.prototype.parent;U.prototype.root = function(){x("Firebase.ref",0,0,arguments.length);for(var a=this;null !== a.parent();) a = a.parent();return a;};U.prototype.root = U.prototype.root;
U.prototype.set = function(a,b){x("Firebase.set",1,2,arguments.length);Zf("Firebase.set",this.path);Sf("Firebase.set",a,this.path,!1);A("Firebase.set",2,b,!0);this.k.Kb(this.path,a,null,b || null);};U.prototype.set = U.prototype.set;
U.prototype.update = function(a,b){x("Firebase.update",1,2,arguments.length);Zf("Firebase.update",this.path);if(ea(a)){for(var c={},d=0;d < a.length;++d) c["" + d] = a[d];a = c;Q("Passing an Array to Firebase.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.");}Uf("Firebase.update",a,this.path);A("Firebase.update",2,b,!0);this.k.update(this.path,a,b || null);};U.prototype.update = U.prototype.update;
U.prototype.Kb = function(a,b,c){x("Firebase.setWithPriority",2,3,arguments.length);Zf("Firebase.setWithPriority",this.path);Sf("Firebase.setWithPriority",a,this.path,!1);Vf("Firebase.setWithPriority",2,b);A("Firebase.setWithPriority",3,c,!0);if(".length" === this.key() || ".keys" === this.key())throw "Firebase.setWithPriority failed: " + this.key() + " is a read-only object.";this.k.Kb(this.path,a,b,c || null);};U.prototype.setWithPriority = U.prototype.Kb;
U.prototype.remove = function(a){x("Firebase.remove",0,1,arguments.length);Zf("Firebase.remove",this.path);A("Firebase.remove",1,a,!0);this.set(null,a);};U.prototype.remove = U.prototype.remove;
U.prototype.transaction = function(a,b,c){x("Firebase.transaction",1,3,arguments.length);Zf("Firebase.transaction",this.path);A("Firebase.transaction",1,a,!1);A("Firebase.transaction",2,b,!0);if(n(c) && "boolean" != typeof c)throw Error(z("Firebase.transaction",3,!0) + "must be a boolean.");if(".length" === this.key() || ".keys" === this.key())throw "Firebase.transaction failed: " + this.key() + " is a read-only object.";"undefined" === typeof c && (c = !0);Zh(this.k,this.path,a,b || null,c);};U.prototype.transaction = U.prototype.transaction;
U.prototype.Lg = function(a,b){x("Firebase.setPriority",1,2,arguments.length);Zf("Firebase.setPriority",this.path);Vf("Firebase.setPriority",1,a);A("Firebase.setPriority",2,b,!0);this.k.Kb(this.path.w(".priority"),a,null,b);};U.prototype.setPriority = U.prototype.Lg;
U.prototype.push = function(a,b){x("Firebase.push",0,2,arguments.length);Zf("Firebase.push",this.path);Sf("Firebase.push",a,this.path,!0);A("Firebase.push",2,b,!0);var c=Ph(this.k),c=Kf(c),c=this.w(c);"undefined" !== typeof a && null !== a && c.set(a,b);return c;};U.prototype.push = U.prototype.push;U.prototype.jb = function(){Zf("Firebase.onDisconnect",this.path);return new X(this.k,this.path);};U.prototype.onDisconnect = U.prototype.jb;
U.prototype.P = function(a,b,c){Q("FirebaseRef.auth() being deprecated. Please use FirebaseRef.authWithCustomToken() instead.");x("Firebase.auth",1,3,arguments.length);$f("Firebase.auth",a);A("Firebase.auth",2,b,!0);A("Firebase.auth",3,b,!0);Ng(this.k.P,a,{},{remember:"none"},b,c);};U.prototype.auth = U.prototype.P;U.prototype.ee = function(a){x("Firebase.unauth",0,1,arguments.length);A("Firebase.unauth",1,a,!0);Og(this.k.P,a);};U.prototype.unauth = U.prototype.ee;
U.prototype.we = function(){x("Firebase.getAuth",0,0,arguments.length);return this.k.P.we();};U.prototype.getAuth = U.prototype.we;U.prototype.ug = function(a,b){x("Firebase.onAuth",1,2,arguments.length);A("Firebase.onAuth",1,a,!1);lb("Firebase.onAuth",2,b);this.k.P.Eb("auth_status",a,b);};U.prototype.onAuth = U.prototype.ug;U.prototype.tg = function(a,b){x("Firebase.offAuth",1,2,arguments.length);A("Firebase.offAuth",1,a,!1);lb("Firebase.offAuth",2,b);this.k.P.gc("auth_status",a,b);};U.prototype.offAuth = U.prototype.tg;
U.prototype.Wf = function(a,b,c){x("Firebase.authWithCustomToken",2,3,arguments.length);$f("Firebase.authWithCustomToken",a);A("Firebase.authWithCustomToken",2,b,!1);cg("Firebase.authWithCustomToken",3,c,!0);Ng(this.k.P,a,{},c || {},b);};U.prototype.authWithCustomToken = U.prototype.Wf;U.prototype.Xf = function(a,b,c){x("Firebase.authWithOAuthPopup",2,3,arguments.length);bg("Firebase.authWithOAuthPopup",a);A("Firebase.authWithOAuthPopup",2,b,!1);cg("Firebase.authWithOAuthPopup",3,c,!0);Sg(this.k.P,a,c,b);};
U.prototype.authWithOAuthPopup = U.prototype.Xf;U.prototype.Yf = function(a,b,c){x("Firebase.authWithOAuthRedirect",2,3,arguments.length);bg("Firebase.authWithOAuthRedirect",a);A("Firebase.authWithOAuthRedirect",2,b,!1);cg("Firebase.authWithOAuthRedirect",3,c,!0);var d=this.k.P;Qg(d);var e=[zg],f=kg(c);"anonymous" === a || "firebase" === a?R(b,Bg("TRANSPORT_UNAVAILABLE")):(P.set("redirect_client_options",f.ld),Rg(d,e,"/auth/" + a,f,b));};U.prototype.authWithOAuthRedirect = U.prototype.Yf;
U.prototype.Zf = function(a,b,c,d){x("Firebase.authWithOAuthToken",3,4,arguments.length);bg("Firebase.authWithOAuthToken",a);A("Firebase.authWithOAuthToken",3,c,!1);cg("Firebase.authWithOAuthToken",4,d,!0);p(b)?(ag("Firebase.authWithOAuthToken",2,b),Pg(this.k.P,a + "/token",{access_token:b},d,c)):(cg("Firebase.authWithOAuthToken",2,b,!1),Pg(this.k.P,a + "/token",b,d,c));};U.prototype.authWithOAuthToken = U.prototype.Zf;
U.prototype.Vf = function(a,b){x("Firebase.authAnonymously",1,2,arguments.length);A("Firebase.authAnonymously",1,a,!1);cg("Firebase.authAnonymously",2,b,!0);Pg(this.k.P,"anonymous",{},b,a);};U.prototype.authAnonymously = U.prototype.Vf;
U.prototype.$f = function(a,b,c){x("Firebase.authWithPassword",2,3,arguments.length);cg("Firebase.authWithPassword",1,a,!1);dg("Firebase.authWithPassword",a,"email");dg("Firebase.authWithPassword",a,"password");A("Firebase.authWithPassword",2,b,!1);cg("Firebase.authWithPassword",3,c,!0);Pg(this.k.P,"password",a,c,b);};U.prototype.authWithPassword = U.prototype.$f;
U.prototype.re = function(a,b){x("Firebase.createUser",2,2,arguments.length);cg("Firebase.createUser",1,a,!1);dg("Firebase.createUser",a,"email");dg("Firebase.createUser",a,"password");A("Firebase.createUser",2,b,!1);this.k.P.re(a,b);};U.prototype.createUser = U.prototype.re;U.prototype.Se = function(a,b){x("Firebase.removeUser",2,2,arguments.length);cg("Firebase.removeUser",1,a,!1);dg("Firebase.removeUser",a,"email");dg("Firebase.removeUser",a,"password");A("Firebase.removeUser",2,b,!1);this.k.P.Se(a,b);};
U.prototype.removeUser = U.prototype.Se;U.prototype.oe = function(a,b){x("Firebase.changePassword",2,2,arguments.length);cg("Firebase.changePassword",1,a,!1);dg("Firebase.changePassword",a,"email");dg("Firebase.changePassword",a,"oldPassword");dg("Firebase.changePassword",a,"newPassword");A("Firebase.changePassword",2,b,!1);this.k.P.oe(a,b);};U.prototype.changePassword = U.prototype.oe;
U.prototype.ne = function(a,b){x("Firebase.changeEmail",2,2,arguments.length);cg("Firebase.changeEmail",1,a,!1);dg("Firebase.changeEmail",a,"oldEmail");dg("Firebase.changeEmail",a,"newEmail");dg("Firebase.changeEmail",a,"password");A("Firebase.changeEmail",2,b,!1);this.k.P.ne(a,b);};U.prototype.changeEmail = U.prototype.ne;
U.prototype.Ue = function(a,b){x("Firebase.resetPassword",2,2,arguments.length);cg("Firebase.resetPassword",1,a,!1);dg("Firebase.resetPassword",a,"email");A("Firebase.resetPassword",2,b,!1);this.k.P.Ue(a,b);};U.prototype.resetPassword = U.prototype.Ue;U.goOffline = function(){x("Firebase.goOffline",0,0,arguments.length);W.ub().yb();};U.goOnline = function(){x("Firebase.goOnline",0,0,arguments.length);W.ub().qc();};
function Nc(a,b){J(!b || !0 === a || !1 === a,"Can't turn on custom loggers persistently.");!0 === a?("undefined" !== typeof console && ("function" === typeof console.log?Ab = q(console.log,console):"object" === typeof console.log && (Ab = function(a){console.log(a);})),b && P.set("logging_enabled",!0)):a?Ab = a:(Ab = null,P.remove("logging_enabled"));}U.enableLogging = Nc;U.ServerValue = {TIMESTAMP:{".sv":"timestamp"}};U.SDK_VERSION = "2.2.7";U.INTERNAL = V;U.Context = W;U.TEST_ACCESS = Z;})();

module.exports = Firebase;});
;require("SoftbinatorChat/index.ios");
//@ sourceMappingURL=/index.ios.map